create or replace PACKAGE BOD  CONCEP1.PACK_AUTOMATISATION_EMISSION_2 AS 
/******************************************************************************
   NAME:       PACK_AUTOMATISATION_EMISSION
   OBJECT : Package de traitement batch des émissions des prestations de retraites et de rentes.
   REVISIONS:
   Ver        Date        Author            Description
   ---------  ----------  ---------------   ------------------------------------
   1.0        04/09/2014  GBAHI FABRICE     Création du package
   1.1        27/04/2015  GBAHI FABRICE     Prise en compte de l'agence au niveau du ramassage des émissions des cartes pensions.   
******************************************************************************/

/*CETTE FONCTION IDENTIFIE LE NOMBRE D'EMISSION VALIDE POUR UN ASSURE ET SON SOUS REGIME
ELLE A ETE CONCU POUR IDENTIFIER LES PRESTATIONS UNIQUES DEJA EMISES
*/
FUNCTION F_NOMBRE_EMISSION_VALIDE(P_ASSURE NUMBER,P_BENEFICIAIRE NUMBER,P_TYPEBEN CHAR,P_SOUS_REGIME NUMBER) RETURN NUMBER IS

    CURSOR CUR_NB_EMISSION_VALIDE IS 
    SELECT (COUNT(CASE WHEN PE.ETAT = 'E' THEN 1 END) - COUNT(CASE WHEN PE.ETAT = 'A' THEN 1 END) ) DIFF
    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
    WHERE PE.ASSURE = P_ASSURE
    AND PE.BENEFICIAIRE = P_BENEFICIAIRE
    AND PE.TYPE_BENEFICIAIRE = P_TYPEBEN
    AND PE.CODE_SOUS_REGIME = P_SOUS_REGIME
    GROUP BY PE.ASSURE , PE.BENEFICIAIRE, PE.TYPE_BENEFICIAIRE , PE.CODE_SOUS_REGIME;
    --HAVING COUNT(CASE WHEN PE.ETAT = 'E' THEN 1 END) > COUNT(CASE WHEN PE.ETAT = 'A' THEN 1 END) 
    
    V_RESULTAT NUMBER:= NULL;
BEGIN
    
    OPEN CUR_NB_EMISSION_VALIDE;
    FETCH CUR_NB_EMISSION_VALIDE INTO V_RESULTAT;
    CLOSE CUR_NB_EMISSION_VALIDE;
    
    RETURN NVL(V_RESULTAT,0);
    
END;

/*CETTE PROCEDURE PERMET L'IDENTIFICATION DE LA POPULATION A EMETTRE*/
PROCEDURE PROC_POP_A_EMETTRE (P_PERIODE DATE, P_REGIME NUMBER
    ,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
    ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
    ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
    ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
    ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15 AGENCE.AGCODE%TYPE
    ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17 AGENCE.AGCODE%TYPE,P_AG18 AGENCE.AGCODE%TYPE
    ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21 AGENCE.AGCODE%TYPE
    ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24 AGENCE.AGCODE%TYPE
    ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10 AGENCE.AGCODE%TYPE
    ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26 AGENCE.AGCODE%TYPE) IS

/*MODE D'EMPLOI ::
POUR IDENTIFIER LA POPULATION A EMETTRE POUR EMISSION GLOBALE COTE D'IVOIRE  
==> PROC_POP_A_EMETTRE (TO_DATE('30/09/2014','DD/MM/YYYY'), NULL, 6);

POUR IDENTIFIER LA POPULATION A EMETTRE POUR EMISSION GLOBALE APEX  
==> PROC_POP_A_EMETTRE (TO_DATE('30/09/2014','DD/MM/YYYY'), 24, 6);

*/

BEGIN

        IF P_REGIME = 6 THEN
        
                INSERT INTO CONCEP1.POPULATION_A_EMETTRE( AGPAIEMENT, TRVNUM, BENEFICIAIRE,  AYATYPE,  SINISTRE,  SREGCODE,  PERIODE,  
                                                          MONTANT_PENSION, RENMONTANT,  RENMAJORE,  RENCOMPMAJORE,  PRETS,  MODEPAIE,  
                                                          BANQUE ,  SUCCURSALE,  COMPTE_BANCAIRE , CLE_RIB,  CODE_BCEAO , RENPERIODE ,  UTILISATEUR , DATE_EMISSION )   
                SELECT AGENCE,ASSURE,BENEFICIAIRE,TYPE_BENEFICIAIRE, ASSURE SINISTRE,TYPENSION ,P_PERIODE,
                MONTANT_PENSION, NULL RENMONTANT, NULL RENMAJORE, NULL RENCOMPMAJORE, F_RECUPERATION_PRETS(ASSURE,ASSURE,'T',6,P_PERIODE) PRETS,
                MODEPAIE,BANQUE,SUCCURSALE,COMPTE_BANCAIRE,CLE_RIB,CODE_BCEAO , NULL RENPERIODE ,USER,SYSDATE
                FROM (SELECT DR.AGPAIEMENT AGENCE,SUPER_TRIM(A.AGLIBEL) LIBELLE,R.TRVNUM ASSURE,R.TRVNUM BENEFICIAIRE,'T' TYPE_BENEFICIAIRE,
                            (NVL(RETMONTNORM,0) + NVL(RETMONTCOMP,0) + NVL(RETMONTIPRAO,0) + IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T'))  MONTANT_PENSION,NVL(DREMODEPAIE,1) MODEPAIE,NVL(DRECDBANQUE,99) BANQUE,
                             DRESUCCURSALE SUCCURSALE,DRECPTEBANQUE COMPTE_BANCAIRE,CLE_RIB,DR.CODE_BCEAO CODE_BCEAO , DR.DRETYPENSION TYPENSION
                      FROM CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR,CONCEP1.AGENCE A
                      WHERE R.TRVNUM = RDM.TRVNUM
                      AND R.TRVNUM = DR.TRVNUM
                      AND UPPER(R.CODVALAC) = 'V'
                      AND RDM.CODEMOTIF IN (21,38)
                      AND RDM.DATEMOTIF = (SELECT MAX(DATEMOTIF) 
                                           FROM CONCEP1.RET_DOS_MOTIF MDR 
                                           WHERE MDR.TRVNUM = RDM.TRVNUM)
                      AND R.DEBUT_TRIMESTRE <= P_PERIODE
                      AND AGPAIEMENT = A.AGCODE
                      AND AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)
                      AND NOT EXISTS (SELECT *
                                      FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                                      WHERE DF.ASSURE = DR.TRVNUM
                                      AND DF.BENEFICIAIRE = DR.TRVNUM
                                      AND DF.Flag_Bloc = 1)
                      AND NOT EXISTS (SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                                      FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                                      WHERE PE.PERIODE_EMISE = P_PERIODE
                                      AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
                                      AND PE.ASSURE = DR.TRVNUM
                                      AND PE.BENEFICIAIRE = DR.TRVNUM
                                      AND PE.TYPE_BENEFICIAIRE = 'T'
                                      GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                                      HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
                                      )                 

                      UNION ALL

                      SELECT AGPAIEMENT AGENCE,SUPER_TRIM(A.AGLIBEL) LIBELLE,R.TRVNUM ASSURE,BENEFICIAIRE,AYATYPE TYPE_BENEFICIAIRE,
                            (NVL(AYAMONTANTN,0) + NVL(AYAMONTANTC,0) + NVL(IPRAOMONTANT,0) + IPRAO_MONTANT(R.TRVNUM,R.BENEFICIAIRE,AYATYPE))  MONTANT_PENSION,NVL(MODEPAIE,1) MODEPAIE,NVL(BANQUE,99) BANQUE,
                             SUCCURSALE,CPTEBANQUE COMPTE_BANCAIRE,CLE_RIB,R.BOITEPOSTALE CODE_BCEAO , R.AYACODEPENSION
                      FROM CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM,CONCEP1.AGENCE A
                      WHERE R.TRVNUM = RAM.TRVNUM
                      AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
                      AND R.AYATYPE = RAM.TYPE_AYANT
                      AND RAM.CODEMOTIF = RAM.CODEMOTIF
                      AND RAM.DATEMOTIF = RAM.DATEMOTIF
                      AND UPPER(R.CODVALAC) = 'V'
                      AND AGPAIEMENT = A.AGCODE
                      AND RAM.CODEMOTIF IN (21,39)
                      AND RAM.DATEMOTIF = (SELECT MAX(DATEMOTIF)
                                           FROM CONCEP1.RET_AYANT_MOTIF MDR
                                           WHERE MDR.TRVNUM = RAM.TRVNUM
                                           AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                                           AND MDR.TYPE_AYANT = RAM.TYPE_AYANT
                                           AND MDR.CODEMOTIF = MDR.CODEMOTIF
                                           AND MDR.DATEMOTIF = MDR.DATEMOTIF)
                      AND R.AYADEBUT_TRIMESTRE <= P_PERIODE
                      AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)
                      AND NOT EXISTS (SELECT *
                                      FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                                      WHERE DF.ASSURE = R.TRVNUM
                                      AND DF.BENEFICIAIRE = RAM.RETBENEFICIAIRE
                                      AND DF.Flag_Bloc = 1)
                      AND NOT EXISTS (SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                                      FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                                      WHERE PE.PERIODE_EMISE = P_PERIODE
                                      AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
                                      AND PE.ASSURE = R.TRVNUM
                                      AND PE.BENEFICIAIRE = R.BENEFICIAIRE
                                      AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
                                      GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                                      HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
                                      ));
                       COMMIT;
        ELSIF P_REGIME = 4 THEN

     
                                                                 
                INSERT INTO CONCEP1.POPULATION_A_EMETTRE( AGPAIEMENT, TRVNUM, BENEFICIAIRE,  AYATYPE,  SINISTRE,  SREGCODE,  PERIODE,  
                                                          MONTANT_PENSION, RENMONTANT,  RENMAJORE,  RENCOMPMAJORE,  PRETS,  MODEPAIE,  
                                                          BANQUE ,  SUCCURSALE,  COMPTE_BANCAIRE , CLE_RIB,  CODE_BCEAO , RENPERIODE,  UTILISATEUR , DATE_EMISSION )                                                                    
                                                                                                                                              
                        SELECT  AGENCE,  ASSURE, BENEFICIAIRE, TYPE_BENEFICIAIRE, SINISTRE, SOUS_REGIME, P_PERIODE PERIODE, 
                                NULL MONTANT_PENSION, RENMONTANT , MONTMAJORE, RENCOMPMAJORE , PRETS, MODE_PAIEMENT, 
                                BANQUE, SUCCURSALE,COMPTE_BANCAIRE, CLE_RIB, CODE_BCEAO, PERIODICITE ,USER,SYSDATE                                                
                                    
                        FROM (SELECT T3.TRVNUM ASSURE,T3.TRVNUM BENEFICIAIRE,'T' TYPE_BENEFICIAIRE,T3.TRVNUM AYANT_DROIT,NVL(RENMONTANT,0) RENMONTANT,NVL(RENMAJORE,0) MONTMAJORE,(NVL(RENMONTANT,0) + NVL(RENMAJORE,0)) MONTANT,
                             NVL(RENCOMPMAJORE,0) RENCOMPMAJORE,RENPERIODE PERIODICITE,NVL(RENMODEPAIE,4) MODE_PAIEMENT,NVL(RENBANQUE,99) BANQUE,RENSUCCURSALE SUCCURSALE,RENCPTEBANQUE COMPTE_BANCAIRE,CLE_RIB,
                             DRPAIEMENT,AGPAIEMENT AGENCE,NVL(LOCALITE,101) LOCALITE,NVL(COMMUNE,4) COMMUNE,NVL(QUARTIER,1) QUARTIER,CODEDROIT,CODVALORD,DATVALORD,CODVALAC,DATVALAC,
                             RENNUMGRAVE NUMGRAVE,T3.DATSINISTRE SINISTRE,RENADRESSE ADRESSE,RETCOMPT1 COMPT1,DATDATEECHEANCE,DERNIERE_EMISSION,T3.SREGCODE SOUS_REGIME,
                             NVL(RENRACHAT,0) RACHAT,RENSALUTILE,RENTAUXUTILE,SALMONTNPLAF,NULL NUMERO_ORDRE,
                             F_RECUPERATION_PRETS(T3.DATSINISTRE,T3.TRVNUM,'T',4,P_PERIODE) PRETS,T3.RETCOMPT1 CODE_BCEAO 
                             
                        FROM  CONCEP1.RENTE_MOTIF RM,CONCEP1.RENTE T3,CONCEP1.DOSSIER_ATMP T4,CONCEP1.SOUS_REGIME S,CONCEP1.AGENCE A
                        WHERE T3.SREGCODE = S.SREGCODE
                        AND T3.DATSINISTRE = T4.DATSINISTRE
                        AND T3.AGPAIEMENT = A.AGCODE
                        AND UPPER(T3.CODVALAC) = 'V'
                        AND T3.DATSINISTRE = RM.DATSINISTRE
                        AND RM.CODEMOTIF = 39
                        AND T3.SREGCODE = RM.SREGCODE
                        AND RM.DATEMOTIF = (SELECT MAX(DATEMOTIF) 
                                          FROM CONCEP1.RENTE_MOTIF MR 
                                          WHERE MR.SREGCODE = RM.SREGCODE 
                                          AND MR.DATSINISTRE = RM.DATSINISTRE) 
                        AND T3.RENPERIODE IN (SELECT 'A' PERIODICITE 
                                            FROM DUAL  
                                            WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))
                                                  
                                            UNION ALL
                                                            
                                            SELECT 'M' PERIODICITE    
                                            FROM DUAL   
                                                            
                                            UNION ALL
                                                            
                                            SELECT 'T' PERIODICITE    
                                            FROM DUAL   
                                            WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12))          
                        AND T3.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)
                        AND NOT EXISTS (SELECT PE.ASSURE , PE.BENEFICIAIRE , PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.CODE_SOUS_REGIME, PE.NUMERO_SINISTRE_DOSSIER
                                      FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                                      WHERE TRUNC(PE.PERIODE_EMISE) = P_PERIODE
                                      AND PE.CODE_SOUS_REGIME = S.SREGCODE
                                      AND PE.ASSURE = T4.TRVNUM
                                      AND PE.BENEFICIAIRE = T4.TRVNUM
                                      AND PE.TYPE_BENEFICIAIRE = 'T'
                                      AND PE.NUMERO_SINISTRE_DOSSIER = T3.DATSINISTRE
                                      GROUP BY PE.ASSURE , PE.BENEFICIAIRE , PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.CODE_SOUS_REGIME, PE.NUMERO_SINISTRE_DOSSIER
                                      HAVING COUNT(CASE WHEN PE.ETAT = 'E' THEN 1 END) > COUNT(CASE WHEN PE.ETAT = 'A' THEN 1 END) 
                                      )                
                        AND NOT EXISTS (SELECT *
                                       FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                                       WHERE DF.ASSURE = T3.TRVNUM
                                       AND DF.BENEFICIAIRE = T3.TRVNUM
                                       AND DF.Flag_Bloc = 1)                        

                        UNION ALL

                        SELECT TRVNUM ASSURE,BENEFICIAIRE,T3.AYATYPE TYPE_BENEFICIAIRE,T3.AYANT_DROIT,NVL(MONTPENSION,0) MONTANT_PENSION,NVL(MONTMAJORE,0) MONTMAJORE,NVL(MTCOMPLMAJORE,0) RENCOMPMAJORE,(NVL(MONTMAJORE,0) + NVL(MTCOMPLMAJORE,0)) MONTANT,
                             PERIODE PERIODICITE,NVL(MODEPAIE,4) MODE_PAIEMENT,NVL(BANQUE,99) BANQUE,SUCCURSALE,CPTEBANQUE COMPTE_BANCAIRE,CLE_RIB,DRPAIEMENT,AGPAIEMENT AGENCE,
                             NVL(LOCALITE,101) LOCALITE,NVL(COMMUNE,4) COMMUNE,NVL(QUARTIER,1) QUARTIER,CODEDROIT,CODVALORD,DATVALORD,CODVALAC,DATVALAC,NUMGRAVE,NUMSINISTRE SINISTRE,ADRESSE,COMPT1,
                             DATDATEECHEANCE,DERNIERE_EMISSION,40 SOUS_REGIME,0 RACHAT,NULL RENSALUTILE,NULL RENTAUXUTILE,
                             NULL SALMONTNPLAF,NULL NUMERO_ORDRE,F_RECUPERATION_PRETS(NUMSINISTRE,BENEFICIAIRE,AYATYPE,4,P_PERIODE) PRETS, 
                             T3.COMPT1 CODE_BCEAO
                                   
                        FROM CONCEP1.REN_AYANT_DROIT T3,CONCEP1.REN_AYANT_MOTIF T2,CONCEP1.AGENCE A
                        WHERE T3.AYANT_DROIT = T2.AYANT_DROIT
                        AND T3.AGPAIEMENT = A.AGCODE
                        AND UPPER(T3.CODVALAC) ='V'
                        AND T2.CODEMOTIF = 39 
                        AND T2.DATEMOTIF = (SELECT MAX(DATEMOTIF) 
                                          FROM CONCEP1.REN_AYANT_MOTIF RAM 
                                          WHERE RAM.AYANT_DROIT = T2.AYANT_DROIT)       
                        AND PERIODE IN (SELECT 'A' PERIODICITE 
                                      FROM DUAL   
                                      WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))
                                            
                                      UNION ALL
                                            
                                      SELECT 'M' PERIODICITE    
                                      FROM DUAL 
                                              
                                      UNION ALL
                                            
                                      SELECT 'T' PERIODICITE    
                                      FROM DUAL   
                                      WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12))    
                         AND T3.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26) 
                        AND NOT EXISTS (SELECT *
                                      FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                                      WHERE DF.ASSURE = T3.TRVNUM
                                      AND DF.BENEFICIAIRE = T3.BENEFICIAIRE
                                      AND DF.Flag_Bloc = 1)
                        AND NOT EXISTS (SELECT PE.ASSURE , PE.BENEFICIAIRE , PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.CODE_SOUS_REGIME, PE.NUMERO_SINISTRE_DOSSIER
                                      FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                                      WHERE TRUNC(PE.PERIODE_EMISE) = P_PERIODE
                                      AND PE.CODE_SOUS_REGIME = 40
                                      AND PE.ASSURE = T3.TRVNUM
                                      AND PE.BENEFICIAIRE = T3.BENEFICIAIRE
                                      AND PE.TYPE_BENEFICIAIRE = T3.AYATYPE
                                      AND PE.NUMERO_SINISTRE_DOSSIER = T3.NUMSINISTRE
                                      GROUP BY PE.ASSURE , PE.BENEFICIAIRE , PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.CODE_SOUS_REGIME, PE.NUMERO_SINISTRE_DOSSIER
                                      HAVING COUNT(CASE WHEN PE.ETAT = 'E' THEN 1 END) > COUNT(CASE WHEN PE.ETAT = 'A' THEN 1 END) 
                                      )
                                      );                                                     
                            COMMIT;
        END IF;

END;

PROCEDURE SET_P_EXPLOITATION(P_VALEUR NUMBER) IS 

BEGIN 

    IF P_VALEUR IS NOT NULL AND P_VALEUR IN (0,1) THEN
        P_EXPLOITATION := P_VALEUR;
    ELSE
        RAISE_APPLICATION_ERROR(-20008,'LE CODE EXPLOITATION EST OBLIGATOIRE ET NE AVOIR COMME VALEUR 0 OU 1');
    END IF;

END;

PROCEDURE SET_P_PERIODE_EMISE(P_VALEUR DATE) IS 

BEGIN
    IF P_VALEUR IS NOT NULL THEN
        P_PERIODE_EMISE := P_VALEUR;
    END IF;
END;
 
FUNCTION GET_P_EXPLOITATION RETURN NUMBER IS

BEGIN
  RETURN NVL(P_EXPLOITATION,0);

END;


FUNCTION GET_P_PERIODE_EMISE RETURN DATE IS

BEGIN
  RETURN P_PERIODE_EMISE;

END;

FUNCTION F_DOSSIER_REACTIVE (P_ASSURE   NUMBER) RETURN NUMBER IS

/*IL Y A REACTIVATION S'IL EXIXTE (UN CERTIFICAT DE DECES OU UN MOTIF 11) ET LE DERNIER MOTIF EST UN 11
  ET IL EXISTE UN MOTIF 38 APRES LE DERNIER MOTIF 11
  S'IL Y A REACTIVATION ALORS LA FONCTION RAMENE 1 SINON RAMENE 0 
*/
CURSOR CUR_INFO_REACTIVATION IS
SELECT TRVNUM , RDM.CODEMOTIF , rdm.DATEMOTIF, LAG(RDM.CODEMOTIF,1,0) OVER (ORDER BY DATEMOTIF DESC) MOTIF_PRECEDENT
FROM CONCEP1.RET_DOS_MOTIF RDM
WHERE RDM.TRVNUM = P_ASSURE
AND ( EXISTS (SELECT J.*
            FROM CONCEP1.JUSTIFICATIF J
            WHERE J.TRVNUM = RDM.TRVNUM
            AND J.CODEPIECE = 11
            )
    OR EXISTS (
            SELECT *
            FROM CONCEP1.RET_DOS_MOTIF RDM1
            WHERE RDM1.TRVNUM = RDM.TRVNUM
            AND RDM1.CODEMOTIF = 11
            )            
)            
AND EXISTS ( 
            SELECT RDM.TRVNUM 
            FROM CONCEP1.RET_DOS_MOTIF RDM2
            WHERE RDM2.TRVNUM = RDM.TRVNUM
            AND RDM2.CODEMOTIF = 38 
            GROUP BY RDM.TRVNUM
            HAVING MAX(RDM2.DATEMOTIF) >= (SELECT MAX (RDM3.DATEMOTIF)
                                           FROM CONCEP1.RET_DOS_MOTIF RDM3
                                           WHERE RDM3.TRVNUM = RDM.TRVNUM
                                           AND RDM3.CODEMOTIF = 11 )
            )
ORDER BY DATEMOTIF DESC;

V_INFO CUR_INFO_REACTIVATION%ROWTYPE;
            
V_RESULTAT NUMBER := 0;
BEGIN 

    OPEN CUR_INFO_REACTIVATION;
    FETCH CUR_INFO_REACTIVATION INTO V_INFO;
    
    IF CUR_INFO_REACTIVATION%FOUND THEN
        V_RESULTAT := 1;
    ELSE
        V_RESULTAT := 0; 
    END IF;
    
    CLOSE CUR_INFO_REACTIVATION;
    
    RETURN V_RESULTAT;

END;


FUNCTION F_DOSSIER_REACTIVE (P_ASSURE NUMBER,P_BENEFICIAIRE  NUMBER,P_TYPEBEN CHAR) RETURN NUMBER IS
/*IL Y A REACTIVATION S'IL EXIXTE (UN CERTIFICAT DE DECES OU UN MOTIF 11) ET LE DERNIER MOTIF EST UN 11
  ET IL EXISTE UN MOTIF 38 OU 39 APRES LE DERNIER MOTIF 11
  S'IL Y A REACTIVATION ALORS LA FONCTION RAMENE 1 SINON RAMENE 0 
*/
CURSOR CUR_REACTIVATION_ASSURE IS
SELECT RDM.TRVNUM ASSURE, RDM.TRVNUM BENEFICIAIRE, 'T' TYPE_AYANT, RDM.CODEMOTIF , rdm.DATEMOTIF--, LAG(RDM.CODEMOTIF,1,0) OVER (ORDER BY DATEMOTIF DESC) MOTIF_PRECEDENT
FROM CONCEP1.RET_DOS_MOTIF RDM
WHERE RDM.TRVNUM = P_ASSURE
AND ( EXISTS (SELECT J.*
            FROM CONCEP1.JUSTIFICATIF J
            WHERE J.TRVNUM = RDM.TRVNUM
            AND J.CODEPIECE = 11
            )
    OR EXISTS (
            SELECT *
            FROM CONCEP1.RET_DOS_MOTIF RDM1
            WHERE RDM1.TRVNUM = RDM.TRVNUM
            AND RDM1.CODEMOTIF = 11
            )            
)            
AND EXISTS ( 
            SELECT RDM.TRVNUM 
            FROM CONCEP1.RET_DOS_MOTIF RDM2
            WHERE RDM2.TRVNUM = RDM.TRVNUM
            AND RDM2.CODEMOTIF = 38 
            GROUP BY RDM.TRVNUM
            HAVING MAX(RDM2.DATEMOTIF) >= (SELECT MAX (RDM3.DATEMOTIF)
                                           FROM CONCEP1.RET_DOS_MOTIF RDM3
                                           WHERE RDM3.TRVNUM = RDM.TRVNUM
                                           AND RDM3.CODEMOTIF = 11 )
            )
ORDER BY DATEMOTIF DESC;

CURSOR CUR_REACTIVATION_CONJOINT IS
SELECT RDM.TRVNUM ASSURE, RDM.RETBENEFICIAIRE BENEFICIAIRE ,RDM.TYPE_AYANT  , RDM.CODEMOTIF , rdm.DATEMOTIF --, LAG(RDM.CODEMOTIF,1,0) OVER (ORDER BY DATEMOTIF DESC) MOTIF_PRECEDENT
FROM CONCEP1.RET_AYANT_MOTIF RDM
WHERE RDM.TRVNUM = P_ASSURE
AND RDM.RETBENEFICIAIRE = P_BENEFICIAIRE
AND RDM.TYPE_AYANT = P_TYPEBEN
AND ( EXISTS (SELECT J.*
            FROM CONCEP1.JUSTIFICATIF J
            WHERE J.TRVNUM = RDM.TRVNUM
            AND J.PJNUMPROP = RDM.RETBENEFICIAIRE
            AND J.PJTYPEPROP = RDM.TYPE_AYANT
            AND J.CODEPIECE = 11
            )
    OR EXISTS (
            SELECT *
            FROM CONCEP1.RET_AYANT_MOTIF RDM1
            WHERE RDM1.TRVNUM = RDM.TRVNUM
            AND RDM1.RETBENEFICIAIRE = RDM.RETBENEFICIAIRE
            AND RDM1.TYPE_AYANT = RDM.TYPE_AYANT
            AND RDM1.CODEMOTIF = 11
            )            
)            
AND EXISTS ( 
            SELECT RDM.TRVNUM 
            FROM CONCEP1.RET_AYANT_MOTIF RDM2
            WHERE RDM2.TRVNUM = RDM.TRVNUM
            AND RDM2.RETBENEFICIAIRE = RDM.RETBENEFICIAIRE
            AND RDM2.TYPE_AYANT = RDM.TYPE_AYANT            
            AND RDM2.CODEMOTIF = 39
            GROUP BY RDM.TRVNUM
            HAVING MAX(RDM2.DATEMOTIF) >= (SELECT MAX (RDM3.DATEMOTIF)
                                           FROM CONCEP1.RET_AYANT_MOTIF RDM3
                                           WHERE RDM3.TRVNUM = RDM.TRVNUM
                                           AND RDM3.RETBENEFICIAIRE = RDM.RETBENEFICIAIRE
                                           AND RDM3.TYPE_AYANT = RDM.TYPE_AYANT                                           
                                           AND RDM3.CODEMOTIF = 11 )
            )
ORDER BY DATEMOTIF DESC;

V_INFO CUR_REACTIVATION_ASSURE%ROWTYPE;
            
V_RESULTAT NUMBER := 0;
BEGIN 

IF P_TYPEBEN = 'T' THEN
    OPEN CUR_REACTIVATION_ASSURE;
    FETCH CUR_REACTIVATION_ASSURE INTO V_INFO;
    
    IF CUR_REACTIVATION_ASSURE%FOUND THEN
        V_RESULTAT := 1;
    ELSE
        V_RESULTAT := 0; 
    END IF;
    
    CLOSE CUR_REACTIVATION_ASSURE;
    
--    RETURN V_RESULTAT;
ELSE
    OPEN CUR_REACTIVATION_CONJOINT;
    FETCH CUR_REACTIVATION_CONJOINT INTO V_INFO;
    
    IF CUR_REACTIVATION_CONJOINT%FOUND THEN
        V_RESULTAT := 1;
    ELSE
        V_RESULTAT := 0; 
    END IF;
    
    CLOSE CUR_REACTIVATION_CONJOINT;
    
--    RETURN V_RESULTAT;

END IF;    
    RETURN V_RESULTAT;

END;


FUNCTION F_RAP_BONIFICATION (P_PERIODE   DATE,P_ASSURE   NUMBER,P_BENEFICIAIRE   NUMBER,P_TYPEBEN   CHAR
                            ,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE,P_AG3   AGENCE.AGCODE%TYPE
                            ,P_AG4   AGENCE.AGCODE%TYPE,P_AG5   AGENCE.AGCODE%TYPE,P_AG6   AGENCE.AGCODE%TYPE
                            ,P_AG7   AGENCE.AGCODE%TYPE,P_AG8   AGENCE.AGCODE%TYPE,P_AG9   AGENCE.AGCODE%TYPE
                            ,P_AG11   AGENCE.AGCODE%TYPE,P_AG12   AGENCE.AGCODE%TYPE,P_AG13   AGENCE.AGCODE%TYPE
                            ,P_AG14   AGENCE.AGCODE%TYPE,P_AG15   AGENCE.AGCODE%TYPE,P_AG16   AGENCE.AGCODE%TYPE
                            ,P_AG17   AGENCE.AGCODE%TYPE,P_AG18   AGENCE.AGCODE%TYPE,P_AG19   AGENCE.AGCODE%TYPE
                            ,P_AG20   AGENCE.AGCODE%TYPE,P_AG21   AGENCE.AGCODE%TYPE,P_AG22   AGENCE.AGCODE%TYPE
                            ,P_AG23   AGENCE.AGCODE%TYPE,P_AG24   AGENCE.AGCODE%TYPE,P_AG25   AGENCE.AGCODE%TYPE
                            ,P_AG10   AGENCE.AGCODE%TYPE,P_AG50   AGENCE.AGCODE%TYPE,P_AG26   AGENCE.AGCODE%TYPE 
                            )  RETURN NUMBER IS

CURSOR RAP_RETRAITE IS 
SELECT R.SREGCODE,RAP.TRVNUM ASSURE,RAP.TRVNUM BENEFICIAIRE,'T' TYPEBENEF
,(NVL(SUM(RAPMTRG),0)+ NVL(SUM(RAPMTRC),0) + NVL(SUM(RAPRGSP),0) + NVL(SUM(RAPRCSP),0) + NVL(SUM(RAPIPRAO),0)) MONTANT_RAPPEL
FROM CONCEP1.RAPPEL_RETRAITE RAP,CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR
WHERE RAP.TRVNUM=R.TRVNUM
AND RAP.RAPBENEFICIAIRE=R.TRVNUM
AND UPPER(R.CODVALAC) = 'V'
AND RAP.RAPTYPEBENEF= NVL(P_TYPEBEN,RAP.RAPTYPEBENEF)--'T'
AND RAP.RAPCODE IN (4,5)---CODE RAPPEL BONIFICATION
AND RAP.DATESAISIE=RAP.DATESAISIE
AND NVL((RAPMTRG),0)+NVL((RAPMTRC),0)+NVL((RAPRGSP),0)+NVL((RAPRCSP),0)+NVL((RAPIPRAO),0)>0
--
AND RAP.DATEMIS IS NULL
AND RAP.TRVNUM = RDM.TRVNUM
AND RAP.TRVNUM=DR.TRVNUM
AND RDM.CODEMOTIF IN (21,38)
AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF) FROM CONCEP1.RET_DOS_MOTIF MDR WHERE MDR.TRVNUM=RDM.TRVNUM )
AND R.TRVNUM =P_BENEFICIAIRE 
AND DR.TRVNUM = P_ASSURE
AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                      ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                      ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26) 
/*AJOUTE LE 24 JANVIER 2012 POUR NE PAS FAIRE DE RAPPEL POUR UNE EMISSION DEJA EFFECTUEE*/
AND NOT EXISTS (
    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
    WHERE PE.PERIODE_EMISE = P_PERIODE
    AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
    AND PE.ASSURE = DR.TRVNUM
    AND PE.BENEFICIAIRE = DR.TRVNUM
    AND PE.TYPE_BENEFICIAIRE = 'T'
    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
)                                                        
GROUP BY R.SREGCODE,RAP.TRVNUM ,RAP.TRVNUM
---=======
UNION ALL
---=======
SELECT R.AYACODEPENSION,RAP.TRVNUM ,RAP.RAPBENEFICIAIRE ,AYATYPE
,(NVL(SUM(RAPMTRG),0) + NVL(SUM(RAPMTRC),0) + NVL(SUM(RAPRGSP),0) + NVL(SUM(RAPRCSP),0) + NVL(SUM(RAPIPRAO),0)) MONTANT_RAPPEL
FROM CONCEP1.RAPPEL_RETRAITE RAP,CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM
WHERE  RAP.TRVNUM=R.TRVNUM
AND RAP.RAPBENEFICIAIRE=R.BENEFICIAIRE
AND RAP.RAPTYPEBENEF=R.AYATYPE
AND RAP.RAPCODE IN (4,5)---CODE RAPPEL BONIFICATION
AND RAP.DATESAISIE=RAP.DATESAISIE
AND RAP.DATEMIS IS NULL
AND NVL((RAPMTRG),0)+NVL((RAPMTRC),0)+NVL((RAPRGSP),0)+NVL((RAPRCSP),0)+NVL((RAPIPRAO),0)>0
---
AND R.TRVNUM=RAM.TRVNUM
AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
AND R.AYATYPE=RAM.TYPE_AYANT
AND RAM.CODEMOTIF=RAM.CODEMOTIF
AND RAM.DATEMOTIF=RAM.DATEMOTIF
AND UPPER(R.CODVALAC) = 'V'
AND RAM.CODEMOTIF IN (21,39)
AND RAM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                   FROM CONCEP1.RET_AYANT_MOTIF MDR
                   WHERE MDR.TRVNUM=RAM.TRVNUM
                   AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                   AND MDR.TYPE_AYANT=RAM.TYPE_AYANT
                   AND MDR.CODEMOTIF=MDR.CODEMOTIF
                   AND MDR.DATEMOTIF=MDR.DATEMOTIF
                  )
AND R.TRVNUM = P_ASSURE
AND R.BENEFICIAIRE = P_BENEFICIAIRE
AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                    ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)  
/*AJOUTE LE 24 JANVIER 2012 POUR NE PAS FAIRE DE RAPPEL POUR UNE EMISSION DEJA EFFECTUEE*/
AND NOT EXISTS (
                SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                WHERE PE.PERIODE_EMISE = P_PERIODE                                
                AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
                AND PE.ASSURE = R.TRVNUM
                AND PE.BENEFICIAIRE = R.BENEFICIAIRE
                AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
                GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
               )                                                               
GROUP BY R.AYACODEPENSION,RAP.TRVNUM ,RAP.RAPBENEFICIAIRE ,AYATYPE;

V_RAP_RETRAITE RAP_RETRAITE%ROWTYPE;

MONTANT_RAPPEL NUMBER;
BEGIN
    OPEN RAP_RETRAITE;
    FETCH RAP_RETRAITE INTO V_RAP_RETRAITE;
    
    MONTANT_RAPPEL:=NVL(V_RAP_RETRAITE.MONTANT_RAPPEL,0);
    
    CLOSE RAP_RETRAITE;
  
  RETURN NVL(MONTANT_RAPPEL,0);
  
  
END;

/*CETTE FONCTION IDENTIFIE LA DERNIERE EMISSION QUI PORTE UNE BONIFICATION*/
FUNCTION F_LAST_EMIS_BONIFIEE(P_ASSURE CONCEP1.PRESTATIONS_EMISES_2.ASSURE%TYPE
                              ,P_BENEFICIAIRE CONCEP1.PRESTATIONS_EMISES_2.BENEFICIAIRE%TYPE
                              ,P_TYPE_BENEFICIAIRE CONCEP1.PRESTATIONS_EMISES_2.TYPE_BENEFICIAIRE%TYPE) RETURN DATE IS

CURSOR CUR_DERNIERE_EMISSION IS
SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,B.BONENFNUM,B.BONMONTANT 
,MAX(PE.PERIODE_EMISE) DERNIERE_EMISSION,B.DERNIERE_EMISSION DERNIERE_EMISSION_BONIF, B.BONDATEARRET BONDATEARRET 
FROM CONCEP1.PRESTATIONS_EMISES_2 PE,CONCEP1.BONIFICATION B
WHERE PE.ASSURE= P_ASSURE
AND PE.BENEFICIAIRE = P_BENEFICIAIRE
AND PE.TYPE_BENEFICIAIRE = P_TYPE_BENEFICIAIRE
AND PE.ASSURE = B.BONTRVNUM
AND ((PE.TYPE_BENEFICIAIRE = 'E' AND PE.BENEFICIAIRE =B.BONENFNUM)
      OR
      PE.TYPE_BENEFICIAIRE != 'E'
    ) 
AND PE.CODE_SOUS_REGIME IN (SELECT SREGCODE 
                            FROM CONCEP1.SOUS_REGIME 
                            WHERE REGCODE = 6)
AND (NVL(PE.RET_EMIBONIFICATION,0)>0 
     OR  
     ((NVL(PE.RET_EMIMONTRAPSRG, 0)+NVL(PE.RET_EMIRAPBONIFICATION, 0))>0) 
    )           
--AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.NUMERO_DORDRE) = 1  
AND NOT EXISTS (
                SELECT PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
                WHERE PE1.PERIODE_EMISE = PE.PERIODE_EMISE                                
                AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                AND PE1.ASSURE = PE.ASSURE
                AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
                AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                GROUP BY PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PE1.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE1.ETAT = 'A'THEN 1 END))
               )  
GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,B.BONENFNUM,B.BONMONTANT,B.DERNIERE_EMISSION,B.BONDATEARRET;

V_CUR_DERNIERE_EMISSION CUR_DERNIERE_EMISSION%ROWTYPE;
V_DERNIERE_EMISSION DATE;

BEGIN

 OPEN CUR_DERNIERE_EMISSION;
 FETCH CUR_DERNIERE_EMISSION INTO V_CUR_DERNIERE_EMISSION;
 V_DERNIERE_EMISSION := V_CUR_DERNIERE_EMISSION.DERNIERE_EMISSION;
 CLOSE CUR_DERNIERE_EMISSION;

 RETURN V_DERNIERE_EMISSION;
END;



PROCEDURE P_RAMASSAGE_VIREMENT_RENTES(P_AG1  AGENCE.AGCODE%TYPE,P_AG2  AGENCE.AGCODE%TYPE,P_AG3  AGENCE.AGCODE%TYPE
                        ,P_AG4  AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE,P_AG6  AGENCE.AGCODE%TYPE
                        ,P_AG7  AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE,P_AG9  AGENCE.AGCODE%TYPE
                        ,P_AG11  AGENCE.AGCODE%TYPE,P_AG12  AGENCE.AGCODE%TYPE,P_AG13  AGENCE.AGCODE%TYPE
                        ,P_AG14  AGENCE.AGCODE%TYPE,P_AG15  AGENCE.AGCODE%TYPE,P_AG16  AGENCE.AGCODE%TYPE
                        ,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE,P_AG19  AGENCE.AGCODE%TYPE
                        ,P_AG20  AGENCE.AGCODE%TYPE,P_AG21  AGENCE.AGCODE%TYPE,P_AG22  AGENCE.AGCODE%TYPE
                        ,P_AG23  AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE,P_AG25  AGENCE.AGCODE%TYPE
                        ,P_AG10  AGENCE.AGCODE%TYPE,P_AG50  AGENCE.AGCODE%TYPE,P_AG26  AGENCE.AGCODE%TYPE) IS

CURSOR CUR_SINISTRE_A_RAMASSER IS
SELECT *
FROM CONCEP1.PRESTATIONS_EMISES_2 PE
WHERE  CODE_SOUS_REGIME IN (SELECT SREGCODE FROM CONCEP1.SOUS_REGIME WHERE REGCODE IN (4) and SREGCODE!=12)
AND DATE_EMISSION>=TO_DATE('01/08/2008') 
AND AGENCE_EMISSION!=24
AND AGENCE_EMISSION IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                        ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)
AND  MARQUEUR_VISIBILITE IS NULL
AND CODE_MODE_PAIEMENT=2 
AND EXISTS (
                SELECT PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
                WHERE PE1.PERIODE_EMISE = PE.PERIODE_EMISE                                
                AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                AND PE1.ASSURE = PE.ASSURE
                AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
                AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                AND PE1.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER
                GROUP BY PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PE1.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE1.ETAT = 'A'THEN 1 END))
               ) 
AND NOT EXISTS (
                SELECT PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_PAYEES PP
                WHERE PP.PERIODE_EMISE = PE.PERIODE_EMISE                                
                AND PP.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                AND PP.ASSURE = PE.ASSURE
                AND PP.BENEFICIAIRE = PE.BENEFICIAIRE
                AND PP.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                AND PP.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER
                GROUP BY PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PP.ETAT = 'P'THEN 1 END)> COUNT(CASE WHEN PP.ETAT = 'A'THEN 1 END))
               )                
AND ETAT!='A'
AND ( SUPER_TRIM(SUPPLEMENTAIRE_3) IS NULL 
      OR 
      SUPER_TRIM(SUPPLEMENTAIRE_3)='0'  
      OR 
      LENGTH(SUPER_TRIM(SUPPLEMENTAIRE_3))<8
     ) ---DESORMAIS LES RAMASSAGES SE FONT UNE SEULE FOIS (AJOUTE LE 20 JUIN 2011)
AND AUTORISATION_ANNULATION IS NULL
AND NOT EXISTS (
    SELECT *
    FROM CONCEP1.DOSSIER_FRAUDULEUX D
    WHERE D.ASSURE = PE.ASSURE
    AND D.BENEFICIAIRE = PE.BENEFICIAIRE
    AND D.FLAG_BLOC = 1
)  
-------------------------------------------------------------------------------------------
AND DATE_EMISSION > (SELECT VALEUR_PARAMETRE_DATE FROM CONCEP1.PARAMETRE_DIVERS WHERE CODE_PARAMETRE=98) --AJOUTE POUR NE PAS RAMASSER LES REJETS DE L'EMISSION PRECEDENTE  
AND SUPPLEMENTAIRE_5 NOT LIKE '%REJET INTERNE%'; --AJOUTE LE 14 SEPTEMBRE 2012 POUR NE PAS RAMASSER LES REJETS INTERNES
         

V_SINISTRE_A_RAMASSER CUR_SINISTRE_A_RAMASSER%ROWTYPE;

BEGIN
    
  OPEN CUR_SINISTRE_A_RAMASSER;
  LOOP
      
            FETCH CUR_SINISTRE_A_RAMASSER INTO V_SINISTRE_A_RAMASSER;
            EXIT WHEN CUR_SINISTRE_A_RAMASSER%NOTFOUND;
     
            UPDATE CONCEP1.PRESTATIONS_EMISES_2 PE
            SET MARQUEUR_VISIBILITE='I', SUPPLEMENTAIRE_3=TO_CHAR(SYSDATE,'DD/MM/YYYY')      
            WHERE ASSURE = V_SINISTRE_A_RAMASSER.ASSURE
            AND BENEFICIAIRE = V_SINISTRE_A_RAMASSER.BENEFICIAIRE
            AND TYPE_BENEFICIAIRE = V_SINISTRE_A_RAMASSER.TYPE_BENEFICIAIRE
            AND CODE_SOUS_REGIME = V_SINISTRE_A_RAMASSER.CODE_SOUS_REGIME
            AND PERIODE_EMISE = V_SINISTRE_A_RAMASSER.PERIODE_EMISE
            AND DATE_EMISSION = V_SINISTRE_A_RAMASSER.DATE_EMISSION
            AND AGENCE_EMISSION = V_SINISTRE_A_RAMASSER.AGENCE_EMISSION
            AND NUMERO_SINISTRE_DOSSIER = V_SINISTRE_A_RAMASSER.NUMERO_SINISTRE_DOSSIER
            AND NUMERO_DORDRE = V_SINISTRE_A_RAMASSER.NUMERO_DORDRE;            
      
  END LOOP;
  CLOSE CUR_SINISTRE_A_RAMASSER;
  
END;


PROCEDURE P_RAMASSAGE_VIREMENT_RETRAITE(P_AG1  AGENCE.AGCODE%TYPE,P_AG2  AGENCE.AGCODE%TYPE,P_AG3  AGENCE.AGCODE%TYPE
                        ,P_AG4  AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE,P_AG6  AGENCE.AGCODE%TYPE
                        ,P_AG7  AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE,P_AG9  AGENCE.AGCODE%TYPE
                        ,P_AG11  AGENCE.AGCODE%TYPE,P_AG12  AGENCE.AGCODE%TYPE,P_AG13  AGENCE.AGCODE%TYPE
                        ,P_AG14  AGENCE.AGCODE%TYPE,P_AG15  AGENCE.AGCODE%TYPE,P_AG16  AGENCE.AGCODE%TYPE
                        ,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE,P_AG19  AGENCE.AGCODE%TYPE
                        ,P_AG20  AGENCE.AGCODE%TYPE,P_AG21  AGENCE.AGCODE%TYPE,P_AG22  AGENCE.AGCODE%TYPE
                        ,P_AG23  AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE,P_AG25  AGENCE.AGCODE%TYPE
                        ,P_AG10  AGENCE.AGCODE%TYPE,P_AG50  AGENCE.AGCODE%TYPE,P_AG26  AGENCE.AGCODE%TYPE) IS

CURSOR CUR_PENSION_A_RAMASSER IS
SELECT *
FROM CONCEP1.PRESTATIONS_EMISES_2 PE
WHERE CODE_SOUS_REGIME IN (SELECT SREGCODE FROM CONCEP1.SOUS_REGIME WHERE REGCODE IN (6))
AND DATE_EMISSION>=TO_DATE('01/08/2008') 
AND AGENCE_EMISSION!=24
AND AGENCE_EMISSION IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                        ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)
AND  MARQUEUR_VISIBILITE IS NULL
AND CODE_MODE_PAIEMENT=2 
--AND CONCEP1.PACK_PAIEMENT.F_DEJA_PAYE(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER)=0
--AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
AND EXISTS (
                SELECT PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
                WHERE PE1.PERIODE_EMISE = PE.PERIODE_EMISE                                
                AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                AND PE1.ASSURE = PE.ASSURE
                AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
                AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                GROUP BY PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PE1.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE1.ETAT = 'A'THEN 1 END))
               ) 
AND NOT EXISTS (
                SELECT PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                FROM CONCEP1.PRESTATIONS_PAYEES PP
                WHERE PP.PERIODE_EMISE = PE.PERIODE_EMISE                                
                AND PP.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                AND PP.ASSURE = PE.ASSURE
                AND PP.BENEFICIAIRE = PE.BENEFICIAIRE
                AND PP.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                GROUP BY PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                HAVING (COUNT(CASE WHEN PP.ETAT = 'P'THEN 1 END)> COUNT(CASE WHEN PP.ETAT = 'A'THEN 1 END))
               )  
AND ETAT!='A'
AND ( SUPER_TRIM(SUPPLEMENTAIRE_3) IS NULL 
      OR 
      SUPER_TRIM(SUPPLEMENTAIRE_3)='0'  
      OR 
      LENGTH(SUPER_TRIM(SUPPLEMENTAIRE_3))<8
     ) ---DESORMAIS LES RAMASSAGES SE FONT UNE SEULE FOIS (AJOUTE LE 20 JUIN 2011)
AND AUTORISATION_ANNULATION IS NULL
AND NOT EXISTS (
    SELECT *
    FROM CONCEP1.DOSSIER_FRAUDULEUX D
    WHERE D.ASSURE = PE.ASSURE
    AND D.BENEFICIAIRE = PE.BENEFICIAIRE
    AND D.FLAG_BLOC = 1
)
--------------------------------------------------------------------------------------------------
----AJOUTE LE 04 FEVRIER 2012 POUR NE RAMASSER QUE LES EMISSIONS ISSUES DE DOSSIERS BON A PAYER
AND CONCEP1.F_DERNIER_MOTIF_DOS_RET (PE.ASSURE, PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,6) IN (38,39)   
-------------------------------------------------------------------------------------------
AND DATE_EMISSION > (SELECT VALEUR_PARAMETRE_DATE FROM CONCEP1.PARAMETRE_DIVERS WHERE CODE_PARAMETRE=97) --AJOUTE POUR NE PAS RAMASSER LES REJETS DE L'EMISSION PRECEDENTE   
AND SUPPLEMENTAIRE_5 NOT LIKE '%REJET INTERNE%';--AJOUTE LE 14 SEPTEMBRE 2012 POUR NE PAS RAMASSER LES REJETS INTERNES
        

V_PENSION_A_RAMASSER CUR_PENSION_A_RAMASSER%ROWTYPE;

BEGIN
    
  OPEN CUR_PENSION_A_RAMASSER;
  LOOP
      
            FETCH CUR_PENSION_A_RAMASSER INTO V_PENSION_A_RAMASSER;
            EXIT WHEN CUR_PENSION_A_RAMASSER%NOTFOUND;
     
            UPDATE CONCEP1.PRESTATIONS_EMISES_2 PE
            SET MARQUEUR_VISIBILITE='I', SUPPLEMENTAIRE_3=TO_CHAR(SYSDATE,'DD/MM/YYYY')       
            WHERE ASSURE = V_PENSION_A_RAMASSER.ASSURE
            AND BENEFICIAIRE = V_PENSION_A_RAMASSER.BENEFICIAIRE
            AND TYPE_BENEFICIAIRE = V_PENSION_A_RAMASSER.TYPE_BENEFICIAIRE
            AND CODE_SOUS_REGIME = V_PENSION_A_RAMASSER.CODE_SOUS_REGIME
            AND PERIODE_EMISE = V_PENSION_A_RAMASSER.PERIODE_EMISE
            AND DATE_EMISSION = V_PENSION_A_RAMASSER.DATE_EMISSION
            AND AGENCE_EMISSION = V_PENSION_A_RAMASSER.AGENCE_EMISSION
            AND NUMERO_SINISTRE_DOSSIER = V_PENSION_A_RAMASSER.NUMERO_SINISTRE_DOSSIER
            AND NUMERO_DORDRE = V_PENSION_A_RAMASSER.NUMERO_DORDRE;            
      
  END LOOP;
  CLOSE CUR_PENSION_A_RAMASSER;
  
END;

/*.
CETTE PROCEDURE EFFECTUE LE RAMASSAGE(POSITIONNEMENT DE VERROUX) DES EMISSIONS RENTES ET RETRAITE PAYABLES VIA WARI
*/ 
PROCEDURE P_RAMASSAGE_WARI(P_REGIME NUMBER, 
                         P_AG1  AGENCE.AGCODE%TYPE,P_AG2  AGENCE.AGCODE%TYPE,P_AG3  AGENCE.AGCODE%TYPE
                        ,P_AG4  AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE,P_AG6  AGENCE.AGCODE%TYPE
                        ,P_AG7  AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE,P_AG9  AGENCE.AGCODE%TYPE
                        ,P_AG11  AGENCE.AGCODE%TYPE,P_AG12  AGENCE.AGCODE%TYPE,P_AG13  AGENCE.AGCODE%TYPE
                        ,P_AG14  AGENCE.AGCODE%TYPE,P_AG15  AGENCE.AGCODE%TYPE,P_AG16  AGENCE.AGCODE%TYPE
                        ,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE,P_AG19  AGENCE.AGCODE%TYPE
                        ,P_AG20  AGENCE.AGCODE%TYPE,P_AG21  AGENCE.AGCODE%TYPE,P_AG22  AGENCE.AGCODE%TYPE
                        ,P_AG23  AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE,P_AG25  AGENCE.AGCODE%TYPE
                        ,P_AG10  AGENCE.AGCODE%TYPE,P_AG50  AGENCE.AGCODE%TYPE,P_AG26  AGENCE.AGCODE%TYPE)  IS

CURSOR CUR_POPULATION_WARI IS
SELECT PE.ASSURE, PE.BENEFICIAIRE, PE.TYPE_BENEFICIAIRE,PE.NUMERO_SINISTRE_DOSSIER, PE.CODE_SOUS_REGIME, PE.NUMERO_DORDRE, PE.PERIODE_EMISE
FROM CONCEP1.PRESTATIONS_EMISES_2 PE
WHERE PE.AGENCE_PAIEMENT NOT IN (24,10,50,26)
AND PE.AGENCE_PAIEMENT IN (SELECT A.AGCODE FROM CONCEP1.AGENCE A WHERE A.AGCODE = PE.AGENCE_PAIEMENT)
AND PE.CODE_BANQUE IN (SELECT B.BANCODE FROM CONCEP1.BANQUE B WHERE B.BANCODE = PE.CODE_BANQUE)
AND PE.CODE_SOUS_REGIME IN (SELECT SR.SREGCODE FROM CONCEP1.SOUS_REGIME SR WHERE SR.REGCODE = P_REGIME)
AND  MARQUEUR_VISIBILITE IS NULL
AND PE.CODE_BANQUE = 99
AND PE.AGENCE_EMISSION IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                        ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)
AND ((P_REGIME = 6 
      AND PE.CODE_SOUS_REGIME NOT IN (23,24,27)  
      AND ( NVL(PE.RET_EMIMONTRGRET,0) + NVL(PE.RET_EMIMONTRCRET,0) + NVL(PE.RET_EMIMONTIPRAORET,0) ) < 25000 )
      OR
        (P_REGIME = 4 AND PE.CODE_SOUS_REGIME IN (40,41,43,44,45,46,47,48,49,50,95))
    )
AND NOT EXISTS (
    SELECT PC.*
    FROM CONCEP1.PROCURATIONS_CNPS PC
    WHERE PC.ASSURE = PE.ASSURE
    AND PC.BENEFICIAIRE = PE.BENEFICIAIRE
    AND PC.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE 
    AND PC.NUMERO_SINISTRE = PE.NUMERO_SINISTRE_DOSSIER
    AND PC.REGIME = P_REGIME
    AND TRUNC(PC.DATEDEBUTVALIDITE) <= TRUNC(PE.DATE_EMISSION)
    AND TRUNC(PE.DATE_EMISSION) <= NVL(TRUNC(PC.DATEFINVALIDITE) , TRUNC(PE.DATE_EMISSION))
)
AND  TRUNC(PE.DATE_EMISSION) > (SELECT TRUNC(VALEUR_PARAMETRE_DATE) FROM CONCEP1.PARAMETRE_DIVERS WHERE CODE_PARAMETRE = DECODE(P_REGIME, 6 , 97 , 4, 98))  
AND EXISTS (
        SELECT PE1.ASSURE, PE1.BENEFICIAIRE, PE1.TYPE_BENEFICIAIRE,PE1.NUMERO_SINISTRE_DOSSIER, PE1.CODE_SOUS_REGIME,  PE1.NUMERO_DORDRE, PE1.PERIODE_EMISE
        FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
        WHERE PE1.ASSURE = PE.ASSURE
        AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
        AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
        AND ((P_REGIME = 6 AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME)
            OR
            (P_REGIME = 4 AND PE1.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER)
        )        
        AND PE1.DATE_EMISSION < PE.DATE_EMISSION
        GROUP BY PE1.ASSURE, PE1.BENEFICIAIRE, PE1.TYPE_BENEFICIAIRE,PE1.NUMERO_SINISTRE_DOSSIER, PE1.CODE_SOUS_REGIME, PE1.NUMERO_DORDRE, PE1.PERIODE_EMISE
        HAVING COUNT(CASE WHEN PE1.ETAT = 'E' THEN 1 END) > COUNT(CASE WHEN PE1.ETAT = 'A' THEN 1 END)
    )
AND NOT EXISTS (
        SELECT PP.ASSURE, PP.BENEFICIAIRE, PP.TYPE_BENEFICIAIRE,PP.NUMERO_SINISTRE_DOSSIER, PP.CODE_SOUS_REGIME,  PP.NUMERO_DORDRE, PP.PERIODE_EMISE
        FROM CONCEP1.PRESTATIONS_PAYEES PP
        WHERE PP.ASSURE = PE.ASSURE
        AND PP.BENEFICIAIRE = PE.BENEFICIAIRE
        AND PP.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
        AND PP.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
        AND PP.NUMERO_DORDRE = PE.NUMERO_DORDRE
        AND PP.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER
        GROUP BY PP.ASSURE, PP.BENEFICIAIRE, PP.TYPE_BENEFICIAIRE,PP.NUMERO_SINISTRE_DOSSIER, PP.CODE_SOUS_REGIME, PP.NUMERO_DORDRE, PP.PERIODE_EMISE
        HAVING COUNT(CASE WHEN PP.ETAT = 'P' THEN 1 END) > COUNT(CASE WHEN PP.ETAT = 'A' THEN 1 END)
    )    
AND ((P_REGIME = 6       
      AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.CARTEPENSIONRETRAITE C
        WHERE C.ASSURE = PE.ASSURE
        AND C.BENEFICIAIRE = PE.BENEFICIAIRE
        AND C.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
        AND C.CODEPENSION = PE.CODE_SOUS_REGIME
        /*AND C.VALIDE = 'V' */)       
      )
        OR
     (P_REGIME = 4 
      AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.CARTEPENSIONRENTES C
        WHERE C.ASSURE = PE.ASSURE
        AND C.BENEFICIAIRE = PE.BENEFICIAIRE
        AND C.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
        AND C.DATSINISTRE = PE.NUMERO_SINISTRE_DOSSIER 
        AND C.PERIODE = PE.REN_PERIODE
        /*AND C.VALIDE = 'V' */)       
      )
    )      
GROUP BY PE.ASSURE, PE.BENEFICIAIRE, PE.TYPE_BENEFICIAIRE,PE.NUMERO_SINISTRE_DOSSIER, PE.CODE_SOUS_REGIME, PE.NUMERO_DORDRE, PE.PERIODE_EMISE
HAVING COUNT(CASE WHEN PE.ETAT = 'E' THEN 1 END) > COUNT(CASE WHEN PE.ETAT = 'A' THEN 1 END);      

V_WARI CUR_POPULATION_WARI%ROWTYPE;


BEGIN
    
  OPEN CUR_POPULATION_WARI;
  LOOP
      
            FETCH CUR_POPULATION_WARI INTO V_WARI;
            EXIT WHEN CUR_POPULATION_WARI%NOTFOUND;
     
            UPDATE CONCEP1.PRESTATIONS_EMISES_2 PE
            SET MARQUEUR_VISIBILITE='I', SUPPLEMENTAIRE_3=TO_CHAR(SYSDATE,'DD/MM/YYYY')      
            WHERE ASSURE = V_WARI.ASSURE
            AND BENEFICIAIRE = V_WARI.BENEFICIAIRE
            AND TYPE_BENEFICIAIRE = V_WARI.TYPE_BENEFICIAIRE
            AND CODE_SOUS_REGIME = V_WARI.CODE_SOUS_REGIME
            AND PERIODE_EMISE = V_WARI.PERIODE_EMISE
            --AND DATE_EMISSION = V_WARI.DATE_EMISSION
            --AND AGENCE_EMISSION = V_WARI.AGENCE_EMISSION
            AND NUMERO_SINISTRE_DOSSIER = V_WARI.NUMERO_SINISTRE_DOSSIER
            AND NUMERO_DORDRE = V_WARI.NUMERO_DORDRE;            
      
  END LOOP;
  CLOSE CUR_POPULATION_WARI;
  
END;
                        
                        

PROCEDURE PROC_RETRAIT_RAPPEL_BONIF(P_ASSURE NUMBER,P_BENEFICIAIRE NUMBER, P_TYPE_BENEFICIAIRE CHAR) IS
BEGIN
      
        DELETE FROM CONCEP1.RAPPEL_RETRAITE
        WHERE TRVNUM = P_ASSURE
        AND RAPBENEFICIAIRE = P_BENEFICIAIRE
        AND RAPTYPEBENEF = P_TYPE_BENEFICIAIRE
        AND RAPCODE = 5
        AND DATEMIS IS NULL;
        
END;

PROCEDURE RAMASSAGE_CARTE_BANCAIRE(P_REGIME NUMBER 
                                    , P_AG1  AGENCE.AGCODE%TYPE,P_AG2  AGENCE.AGCODE%TYPE,P_AG3  AGENCE.AGCODE%TYPE
                                    ,P_AG4  AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE,P_AG6  AGENCE.AGCODE%TYPE
                                    ,P_AG7  AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE,P_AG9  AGENCE.AGCODE%TYPE
                                    ,P_AG11  AGENCE.AGCODE%TYPE,P_AG12  AGENCE.AGCODE%TYPE,P_AG13  AGENCE.AGCODE%TYPE
                                    ,P_AG14  AGENCE.AGCODE%TYPE,P_AG15  AGENCE.AGCODE%TYPE,P_AG16  AGENCE.AGCODE%TYPE
                                    ,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE,P_AG19  AGENCE.AGCODE%TYPE
                                    ,P_AG20  AGENCE.AGCODE%TYPE,P_AG21  AGENCE.AGCODE%TYPE,P_AG22  AGENCE.AGCODE%TYPE
                                    ,P_AG23  AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE,P_AG25  AGENCE.AGCODE%TYPE
                                    ,P_AG10  AGENCE.AGCODE%TYPE,P_AG50  AGENCE.AGCODE%TYPE,P_AG26  AGENCE.AGCODE%TYPE) IS
           
    CURSOR CUR_CARTE_RETRAITE IS    
    SELECT PE.*
    FROM  CONCEP1.CARTEPENSIONRETRAITE C,CONCEP1.PRESTATIONS_EMISES_2 PE, CONCEP1.AGENCE A
    WHERE C.ASSURE = PE.ASSURE
    AND C.BENEFICIAIRE = PE.BENEFICIAIRE
    AND C.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
    AND C.CODEPENSION = PE.CODE_SOUS_REGIME
    AND PE.AGENCE_PAIEMENT = A.AGCODE
    AND PE.CODE_SOUS_REGIME IN (SELECT SREGCODE FROM CONCEP1.SOUS_REGIME WHERE REGCODE = 6)
    AND PE.MARQUEUR_VISIBILITE IS NULL
    AND AGENCE_EMISSION IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                            ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)    
    --AND CONCEP1.PACK_PAIEMENT.F_DEJA_PAYE(PE.NUMERO_DORDRE, PE.PERIODE_EMISE )=0
    --AND CONCEP1.PACK_PAIEMENT.F_EMIS( PE.ASSURE, PE.BENEFICIAIRE, PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.NUMERO_DORDRE)=1
    AND EXISTS (
                    SELECT PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
                    WHERE PE1.PERIODE_EMISE = PE.PERIODE_EMISE                                
                    AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                    AND PE1.ASSURE = PE.ASSURE
                    AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
                    AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                    GROUP BY PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PE1.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE1.ETAT = 'A'THEN 1 END))
                   ) 
    AND NOT EXISTS (
                    SELECT PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_PAYEES PP
                    WHERE PP.PERIODE_EMISE = PE.PERIODE_EMISE                                
                    AND PP.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                    AND PP.ASSURE = PE.ASSURE
                    AND PP.BENEFICIAIRE = PE.BENEFICIAIRE
                    AND PP.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                    GROUP BY PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PP.ETAT = 'P'THEN 1 END)> COUNT(CASE WHEN PP.ETAT = 'A'THEN 1 END))
                   )      
    AND PE.PERIODE_EMISE >= '01/01/2012'
    AND DATE_EMISSION>=TRUNC(ADD_MONTHS(TRUNC(SYSDATE,'YEAR'),-1),'YEAR')
    AND PE.CODE_BANQUE = 99    
    AND C.VALIDE = 'V'
    AND CONCEP1.PACK_EMISSION.F_CARTE_PENSION_RETRAITE_DISPO(PE.NUMERO_DORDRE)=1;
    /*AND C.AGPAIEMENT IN (1,2,3,4,6,7,8,25);  */ 
    
        
    CURSOR CUR_CARTE_RENTES IS
    SELECT PE.*
    FROM  CONCEP1.CARTEPENSIONRENTES C,CONCEP1.PRESTATIONS_EMISES_2 PE, CONCEP1.AGENCE A
    WHERE C.ASSURE = PE.ASSURE
    AND C.BENEFICIAIRE = PE.BENEFICIAIRE
    AND C.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
    AND C.DATSINISTRE = PE.NUMERO_SINISTRE_DOSSIER  
    AND C.PERIODE = PE.REN_PERIODE
    AND C.DATSINISTRE = PE.NUMERO_SINISTRE_DOSSIER
    AND PE.AGENCE_PAIEMENT = A.AGCODE
    AND PE.CODE_SOUS_REGIME IN (SELECT SREGCODE FROM CONCEP1.SOUS_REGIME WHERE REGCODE = 4)
    AND PE.MARQUEUR_VISIBILITE IS NULL
    AND AGENCE_EMISSION IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                            ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)    
    --AND CONCEP1.PACK_PAIEMENT.F_DEJA_PAYE(PE.NUMERO_DORDRE, PE.PERIODE_EMISE )=0
    --AND CONCEP1.PACK_PAIEMENT.F_EMIS( PE.ASSURE, PE.BENEFICIAIRE, PE.TYPE_BENEFICIAIRE, PE.PERIODE_EMISE, PE.NUMERO_DORDRE)=1
    AND EXISTS (
                    SELECT PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE1
                    WHERE PE1.PERIODE_EMISE = PE.PERIODE_EMISE                                
                    AND PE1.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                    AND PE1.ASSURE = PE.ASSURE
                    AND PE1.BENEFICIAIRE = PE.BENEFICIAIRE
                    AND PE1.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                    AND PE1.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER
                    GROUP BY PE1.ASSURE,PE1.BENEFICIAIRE,PE1.TYPE_BENEFICIAIRE,PE1.PERIODE_EMISE,PE1.NUMERO_DORDRE,PE1.CODE_SOUS_REGIME,PE1.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PE1.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE1.ETAT = 'A'THEN 1 END))
                   ) 
    AND NOT EXISTS (
                    SELECT PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_PAYEES PP
                    WHERE PP.PERIODE_EMISE = PE.PERIODE_EMISE                                
                    AND PP.CODE_SOUS_REGIME = PE.CODE_SOUS_REGIME
                    AND PP.ASSURE = PE.ASSURE
                    AND PP.BENEFICIAIRE = PE.BENEFICIAIRE
                    AND PP.TYPE_BENEFICIAIRE = PE.TYPE_BENEFICIAIRE
                    AND PP.NUMERO_SINISTRE_DOSSIER = PE.NUMERO_SINISTRE_DOSSIER
                    GROUP BY PP.ASSURE,PP.BENEFICIAIRE,PP.TYPE_BENEFICIAIRE,PP.PERIODE_EMISE,PP.NUMERO_DORDRE,PP.CODE_SOUS_REGIME,PP.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PP.ETAT = 'P'THEN 1 END)> COUNT(CASE WHEN PP.ETAT = 'A'THEN 1 END))
                   )  
    AND PE.PERIODE_EMISE >= '01/01/2012'

    AND DATE_EMISSION>=TRUNC(ADD_MONTHS(TRUNC(SYSDATE,'YEAR'),-1),'YEAR')
    AND PE.CODE_BANQUE = 99
    --AND C.CODE_BANQUE_CARTE_PENSION = 7
    AND C.VALIDE = 'V'
    AND CONCEP1.PACK_EMISSION.F_CARTE_PENSION_RENTES_DISPO(PE.NUMERO_DORDRE)=1;

    V_CARTE CUR_CARTE_RENTES%ROWTYPE;

BEGIN

    IF P_REGIME = 6 THEN
            /*CARTE SGBCI RETRAITE*/
            OPEN CUR_CARTE_RETRAITE;    
            LOOP
                FETCH CUR_CARTE_RETRAITE INTO V_CARTE;
                EXIT WHEN CUR_CARTE_RETRAITE%NOTFOUND;
                
                BEGIN
                    UPDATE CONCEP1.PRESTATIONS_EMISES_2 PE
                    SET SUPPLEMENTAIRE_5='CARTE BANCAIRE',PE.MARQUEUR_VISIBILITE = 'I',SUPPLEMENTAIRE_3=TO_CHAR(SYSDATE,'DD/MM/YYYY') 
                    WHERE PE.NUMERO_DORDRE = V_CARTE.NUMERO_DORDRE
                    AND PE.ASSURE = V_CARTE.ASSURE
                    AND PE.BENEFICIAIRE = V_CARTE.BENEFICIAIRE
                    AND PE.TYPE_BENEFICIAIRE = V_CARTE.TYPE_BENEFICIAIRE
                    AND PE.PERIODE_EMISE = V_CARTE.PERIODE_EMISE
                    AND PE.NUMERO_SINISTRE_DOSSIER = V_CARTE.NUMERO_SINISTRE_DOSSIER;
                EXCEPTION
                    WHEN OTHERS THEN
                       INSERT INTO CONCEP1.ECHEC_PRECISION_MOYEN_PAIE(ASSURE,BENEFICIAIRE,TYPE_BENEFICIAIRE,NUMERO_SINISTRE_DOSSIER,PERIODE_EMISE , 
                         NUMERO_DORDRE,CODE_SOUS_REGIME,AGENCE_PAIEMENT,CODE_MODE_PAIEMENT ,CODE_BANQUE ,SUPPLEMENTAIRE_4,CODE_SUCCURSALE,
                         NUMERO_COMPTE,CLE_RIB,SUPPLEMENTAIRE_3,DATE_ACTION,UTILISATEUR)
                       VALUES (V_CARTE.ASSURE,V_CARTE.BENEFICIAIRE,V_CARTE.TYPE_BENEFICIAIRE
                               ,V_CARTE.NUMERO_SINISTRE_DOSSIER,V_CARTE.PERIODE_EMISE , 
                                V_CARTE.NUMERO_DORDRE,V_CARTE.CODE_SOUS_REGIME,V_CARTE.AGENCE_PAIEMENT
                                ,V_CARTE.CODE_MODE_PAIEMENT ,V_CARTE.CODE_BANQUE ,V_CARTE.SUPPLEMENTAIRE_4
                                ,V_CARTE.CODE_SUCCURSALE,V_CARTE.NUMERO_COMPTE,V_CARTE.CLE_RIB,V_CARTE.SUPPLEMENTAIRE_3
                                ,SYSDATE,USER);
                END;
            END LOOP;
            CLOSE CUR_CARTE_RETRAITE;
            
    ELSIF P_REGIME = 4 THEN
    
        OPEN CUR_CARTE_RENTES; 
        LOOP
            FETCH CUR_CARTE_RENTES INTO V_CARTE;
            EXIT WHEN CUR_CARTE_RENTES%NOTFOUND;
            
            BEGIN
                    UPDATE CONCEP1.PRESTATIONS_EMISES_2 PE
                    SET SUPPLEMENTAIRE_5='CARTE BANCAIRE',PE.MARQUEUR_VISIBILITE = 'I',SUPPLEMENTAIRE_3=TO_CHAR(SYSDATE,'DD/MM/YYYY') 
                    WHERE PE.NUMERO_DORDRE = V_CARTE.NUMERO_DORDRE
                    AND PE.ASSURE = V_CARTE.ASSURE
                    AND PE.BENEFICIAIRE = V_CARTE.BENEFICIAIRE
                    AND PE.TYPE_BENEFICIAIRE = V_CARTE.TYPE_BENEFICIAIRE
                    AND PE.PERIODE_EMISE = V_CARTE.PERIODE_EMISE
                    AND PE.NUMERO_SINISTRE_DOSSIER = V_CARTE.NUMERO_SINISTRE_DOSSIER;
            EXCEPTION
                WHEN OTHERS THEN
                   INSERT INTO CONCEP1.ECHEC_PRECISION_MOYEN_PAIE(ASSURE,BENEFICIAIRE,TYPE_BENEFICIAIRE,NUMERO_SINISTRE_DOSSIER,PERIODE_EMISE , 
                     NUMERO_DORDRE,CODE_SOUS_REGIME,AGENCE_PAIEMENT,CODE_MODE_PAIEMENT ,CODE_BANQUE ,SUPPLEMENTAIRE_4,CODE_SUCCURSALE,
                     NUMERO_COMPTE,CLE_RIB,SUPPLEMENTAIRE_3,DATE_ACTION,UTILISATEUR)
                   VALUES (V_CARTE.ASSURE,V_CARTE.BENEFICIAIRE,V_CARTE.TYPE_BENEFICIAIRE
                           ,V_CARTE.NUMERO_SINISTRE_DOSSIER,V_CARTE.PERIODE_EMISE , 
                            V_CARTE.NUMERO_DORDRE,V_CARTE.CODE_SOUS_REGIME,V_CARTE.AGENCE_PAIEMENT
                            ,V_CARTE.CODE_MODE_PAIEMENT ,V_CARTE.CODE_BANQUE ,V_CARTE.SUPPLEMENTAIRE_4
                            ,V_CARTE.CODE_SUCCURSALE,V_CARTE.NUMERO_COMPTE,V_CARTE.CLE_RIB,V_CARTE.SUPPLEMENTAIRE_3,SYSDATE,USER);
            END;                    
        
        END LOOP;
        CLOSE CUR_CARTE_RENTES;
        
       
    END IF;
    
    COMMIT;
    
END;
                 

PROCEDURE PROC_SUS_REN_ASSURE_DECEDE(P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER,P_SINISTRE  NUMBER
                        ,P_TYPEBEN  CHAR,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
                        ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
                        ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
                        ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
                        ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15   AGENCE.AGCODE%TYPE
                        ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE
                        ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21        AGENCE.AGCODE%TYPE
                        ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE
                        ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10  AGENCE.AGCODE%TYPE
                        ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26   AGENCE.AGCODE%TYPE) IS

CURSOR RENTE_A_EMETTRE  IS 
SELECT T3.TRVNUM ,T3.TRVNUM BENEFICIAIRE,'T' AYATYPE,T3.TRVNUM AYANT_DROIT,AGPAIEMENT,T3.DATSINISTRE ,T3.SREGCODE, T3.DATE_TAUX  
FROM  RENTE_MOTIF RM,RENTE T3,DOSSIER_ATMP T4
WHERE T3.DATSINISTRE=T4.DATSINISTRE
AND UPPER(T3.CODVALAC) ='V'
AND T3.DATSINISTRE=RM.DATSINISTRE
AND RM.DATE_TAUX = T3.DATE_TAUX /*AJOUTE LE 03 JUILLET 2013*/
AND RM.CODEMOTIF =39
AND T3.SREGCODE=RM.SREGCODE
AND RM.DATEMOTIF =(SELECT MAX(DATEMOTIF) 
                                     FROM RENTE_MOTIF MR 
                                     WHERE MR.SREGCODE=RM.SREGCODE 
                                     AND MR.DATSINISTRE=RM.DATSINISTRE
                                     AND MR.DATE_TAUX = RM.DATE_TAUX /*AJOUTE LE 03 JUILLET 2013*/
                                     ) 
AND T3.RENPERIODE IN   (SELECT 'A' PERIODICITE 
                                              FROM DUAL   
                                              WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))
                        UNION ALL
                        SELECT 'M' PERIODICITE    FROM DUAL   
                        UNION ALL
                        SELECT 'T' PERIODICITE    FROM DUAL   
                        WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12)
                        )          
AND T3.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND T3.DATSINISTRE=NVL(P_SINISTRE,T3.DATSINISTRE)
AND T3.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                        ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                      ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
  SELECT *
  FROM CONCEP1.DOSSIER_FRAUDULEUX DF
  WHERE DF.ASSURE = T3.TRVNUM
  AND DF.BENEFICIAIRE = T3.TRVNUM
  AND DF.Flag_Bloc = 1
)       
AND EXISTS (
    SELECT *
    FROM CONCEP1.JUSTIFICATIF J
    WHERE J.TRVNUM = T3.TRVNUM
    AND J.PJNUMPROP = T3.TRVNUM
    AND J.PJTYPEPROP = 'T'
    AND J.CODEPIECE = 11
    AND J.PJCODVALIDORD = 'V'
    AND J.PJCODVALIDACC = 'V'
)                  
--===================
UNION ALL
--===================
SELECT TRVNUM,BENEFICIAIRE,AYATYPE,T3.AYANT_DROIT,AGPAIEMENT,NUMSINISTRE,40 SREGCODE, NULL
FROM REN_AYANT_DROIT T3,REN_AYANT_MOTIF T2
WHERE T3.AYANT_DROIT=T2.AYANT_DROIT
AND   UPPER(T3.CODVALAC) ='V'
AND T2.CODEMOTIF =39 
AND T2.DATEMOTIF= (SELECT MAX(DATEMOTIF) FROM REN_AYANT_MOTIF RAM WHERE RAM.AYANT_DROIT=T2.AYANT_DROIT)       
AND PERIODE IN     (SELECT 'A' PERIODICITE 
            FROM DUAL 
            WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))  
                        UNION ALL
                        SELECT 'M' PERIODICITE    FROM DUAL   
                        UNION ALL
                        SELECT 'T' PERIODICITE    FROM DUAL   
                        WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12)
                        )    
AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND T3.NUMSINISTRE=NVL(P_SINISTRE,T3.NUMSINISTRE)
AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
AND T3.AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                        ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                      ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
  SELECT *
  FROM CONCEP1.DOSSIER_FRAUDULEUX DF
  WHERE DF.ASSURE = T3.TRVNUM
  AND DF.BENEFICIAIRE = T3.BENEFICIAIRE
  AND DF.Flag_Bloc = 1
)
AND EXISTS (
    SELECT *
    FROM CONCEP1.JUSTIFICATIF J
    WHERE J.TRVNUM =T3.TRVNUM
    AND J.PJNUMPROP = T3.BENEFICIAIRE
    AND J.PJTYPEPROP = AYATYPE
    AND J.CODEPIECE = 11
    AND J.PJCODVALIDORD = 'V'
    AND J.PJCODVALIDACC = 'V'
);


V_RENTE_A_EMETTRE RENTE_A_EMETTRE%ROWTYPE;

BEGIN
--P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER,P_SINISTRE  NUMBER ,P_TYPEBEN  CHAR
OPEN RENTE_A_EMETTRE;                                        
    LOOP 
                FETCH RENTE_A_EMETTRE INTO V_RENTE_A_EMETTRE;  
                EXIT WHEN RENTE_A_EMETTRE%NOTFOUND; 
                                            
                    IF P_EXPLOITATION = 1 THEN 
                            
                                    IF V_RENTE_A_EMETTRE.AYATYPE = 'T' THEN
                                        
                                            INSERT INTO CONCEP1.REJET_EMISSION 
                                            VALUES (V_RENTE_A_EMETTRE.AGPAIEMENT,V_RENTE_A_EMETTRE.TRVNUM,V_RENTE_A_EMETTRE.DATSINISTRE,V_RENTE_A_EMETTRE.BENEFICIAIRE,
                                                            V_RENTE_A_EMETTRE.AYATYPE,P_PERIODE,'LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.',NULL,'RENTES',NULL,NULL,0,0); 
                                                                   
                                            INSERT INTO CONCEP1.RENTE_MOTIF
                                            VALUES(V_RENTE_A_EMETTRE.TRVNUM, 35
                                            ,'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.'
                                            ,SYSDATE,V_RENTE_A_EMETTRE.DATSINISTRE, V_RENTE_A_EMETTRE.SREGCODE, V_RENTE_A_EMETTRE.DATE_TAUX);
                                                                    
                                    ELSIF V_RENTE_A_EMETTRE.AYATYPE != 'T' THEN
                                        
                                            INSERT INTO CONCEP1.REJET_EMISSION 
                                            VALUES (V_RENTE_A_EMETTRE.AGPAIEMENT,V_RENTE_A_EMETTRE.TRVNUM,V_RENTE_A_EMETTRE.DATSINISTRE,V_RENTE_A_EMETTRE.BENEFICIAIRE,
                                                            V_RENTE_A_EMETTRE.AYATYPE,P_PERIODE,'LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.',NULL,'RENTES',NULL,NULL,0,0);                                 
                                                                                        
                                            INSERT INTO CONCEP1.REN_AYANT_MOTIF     
                                            VALUES (V_RENTE_A_EMETTRE.AYANT_DROIT,35,'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.'
                                            ,SYSDATE);
                                                                        
                                    END IF;
                            
                    ELSE
                                    RAISE_APPLICATION_ERROR(-20008,'EMISSION IMPOSSIBLE!! L''ASSURE A UN CERTIFICAT DE DECES VALIDE SAISI.');
                                    --:GLOBAL.AL_BUTTON:=MSGBOX('CFG_INFORMATION','EMISSION IMPOSSIBLE.'||CHR(10)||' L''ASSURE A UN CERTIFICAT DE DECES VALIDE SAISI; ');  
                                    --:GLOBAL.AL_BUTTON:=MSGBOX('CFG_INFORMATION','EMISSION IMPOSSIBLE.'||CHR(10)||
                                    --RAISE FORM_TRIGGER_FAILURE;
                                    
                    END IF;                        
    END LOOP;
END;       


PROCEDURE PROC_SUS_RET_ASSURE_DECEDE (P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER
                        ,P_TYPEBEN  CHAR,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
                        ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
                        ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
                        ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
                        ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15   AGENCE.AGCODE%TYPE
                        ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE
                        ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21        AGENCE.AGCODE%TYPE
                        ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE
                        ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10  AGENCE.AGCODE%TYPE
                        ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26   AGENCE.AGCODE%TYPE) IS

CURSOR RETRAITE_A_EMETTRE/*(P_PERIODE    DATE
                        ,P_PLAGE_1     NUMBER
                        ,P_PLAGE_2     NUMBER
                        ,P_TYPEBEN     CHAR
                        ,P_AG1         AGENCE.AGCODE%TYPE
                        ,P_AG2         AGENCE.AGCODE%TYPE
                        ,P_AG3         AGENCE.AGCODE%TYPE
                        ,P_AG4         AGENCE.AGCODE%TYPE
                        ,P_AG5         AGENCE.AGCODE%TYPE
                        ,P_AG6         AGENCE.AGCODE%TYPE
                        ,P_AG7         AGENCE.AGCODE%TYPE
                        ,P_AG8         AGENCE.AGCODE%TYPE
                        ,P_AG9         AGENCE.AGCODE%TYPE
                        ,P_AG11        AGENCE.AGCODE%TYPE
                        ,P_AG12        AGENCE.AGCODE%TYPE
                        ,P_AG13        AGENCE.AGCODE%TYPE
                        ,P_AG14        AGENCE.AGCODE%TYPE
                        ,P_AG15        AGENCE.AGCODE%TYPE
                        ,P_AG16        AGENCE.AGCODE%TYPE
                        ,P_AG17        AGENCE.AGCODE%TYPE
                        ,P_AG18        AGENCE.AGCODE%TYPE
                        ,P_AG19        AGENCE.AGCODE%TYPE
                        ,P_AG20        AGENCE.AGCODE%TYPE
                        ,P_AG21        AGENCE.AGCODE%TYPE
                        ,P_AG22        AGENCE.AGCODE%TYPE
                        ,P_AG23        AGENCE.AGCODE%TYPE
                        ,P_AG24        AGENCE.AGCODE%TYPE
                        ,P_AG25        AGENCE.AGCODE%TYPE
                        ,P_AG10        AGENCE.AGCODE%TYPE
                        ,P_AG50        AGENCE.AGCODE%TYPE
                        ,P_AG26        AGENCE.AGCODE%TYPE 
                        )*/ IS 
SELECT R.TRVNUM TRVNUM,R.TRVNUM BENEFICIAIRE,'T' AYATYPE, DR.AGPAIEMENT
FROM CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR
WHERE R.TRVNUM = RDM.TRVNUM
AND R.TRVNUM=DR.TRVNUM
AND UPPER(R.CODVALAC) = 'V'
AND RDM.CODEMOTIF IN (21,38)
AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF) FROM RET_DOS_MOTIF MDR WHERE MDR.TRVNUM=RDM.TRVNUM)
AND R.DEBUT_TRIMESTRE <=P_PERIODE
AND R.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                      ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                      ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.DOSSIER_FRAUDULEUX DF
        WHERE DF.ASSURE = DR.TRVNUM
        AND DF.BENEFICIAIRE = DR.TRVNUM
        AND DF.Flag_Bloc = 1
)
--AND NOT EXISTS (
--    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
--    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
--    WHERE PE.PERIODE_EMISE = P_PERIODE
--    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
--    AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
--    AND PE.ASSURE = DR.TRVNUM
--    AND PE.BENEFICIAIRE = DR.TRVNUM
--    AND PE.TYPE_BENEFICIAIRE = 'T'
--    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
--    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
--)      
AND EXISTS (
    SELECT *
    FROM CONCEP1.JUSTIFICATIF J
    WHERE J.TRVNUM = R.TRVNUM 
    AND J.PJNUMPROP = R.TRVNUM 
    AND J.PJTYPEPROP = 'T'
    AND J.CODEPIECE = 11
    AND (F_DOSSIER_REACTIVE(R.TRVNUM ,R.TRVNUM ,'T') = 1 OR (J.PJCODVALIDORD = 'V'
    AND J.PJCODVALIDACC = 'V'))
)           
---==============================================================================================
--===================
UNION ALL
--===================
---==============================================================================================
SELECT R.TRVNUM,BENEFICIAIRE,AYATYPE AYATYPE, R.AGPAIEMENT
-----------------------        
FROM CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM
WHERE R.TRVNUM=RAM.TRVNUM
AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
AND R.AYATYPE=RAM.TYPE_AYANT
AND RAM.CODEMOTIF=RAM.CODEMOTIF
AND RAM.DATEMOTIF=RAM.DATEMOTIF
AND UPPER(R.CODVALAC) = 'V'
AND RAM.CODEMOTIF IN (21,39)
AND RAM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                   FROM CONCEP1.RET_AYANT_MOTIF MDR
                   WHERE MDR.TRVNUM=RAM.TRVNUM
                   AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                   AND MDR.TYPE_AYANT=RAM.TYPE_AYANT
                   AND MDR.CODEMOTIF=MDR.CODEMOTIF
                   AND MDR.DATEMOTIF=MDR.DATEMOTIF                         
                  )
AND R.AYADEBUT_TRIMESTRE <= P_PERIODE
AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                            ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                          ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.DOSSIER_FRAUDULEUX DF
        WHERE DF.ASSURE = R.TRVNUM
        AND DF.BENEFICIAIRE = RAM.RETBENEFICIAIRE
        AND DF.Flag_Bloc = 1
)
--AND NOT EXISTS (
--    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
--    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
--    WHERE PE.PERIODE_EMISE = P_PERIODE
--    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
--    AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
--    AND PE.ASSURE = R.TRVNUM
--    AND PE.BENEFICIAIRE = R.BENEFICIAIRE
--    AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
--    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
--    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))
--)
AND EXISTS (
    SELECT *
    FROM CONCEP1.JUSTIFICATIF J
    WHERE J.TRVNUM = R.TRVNUM
    AND J.PJNUMPROP = R.BENEFICIAIRE
    AND J.PJTYPEPROP = R.AYATYPE
    AND J.CODEPIECE = 11
    AND (F_DOSSIER_REACTIVE(R.TRVNUM ,R.BENEFICIAIRE ,R.AYATYPE) = 1 OR (J.PJCODVALIDORD = 'V'
    AND J.PJCODVALIDACC = 'V'))
);


V_RETRAITE_A_EMETTRE RETRAITE_A_EMETTRE%ROWTYPE;

CURSOR CUR_DATE_DECES_BENEFICIAIRE(P_ASSURE NUMBER, P_BENEFICIAIRE NUMBER, P_TYPE CHAR) IS
SELECT J.PJDATEDECES
FROM CONCEP1.JUSTIFICATIF J
WHERE J.TRVNUM = P_ASSURE
AND J.PJNUMPROP = P_BENEFICIAIRE 
AND J.PJTYPEPROP = P_TYPE
AND J.CODEPIECE = 11
--AND J.PJCODVALIDORD = 'V'
--AND J.PJCODVALIDACC = 'V'
AND J.PJDATEDECES IS NOT NULL;

V_DATE_DECES DATE:=NULL;

BEGIN
    --DBMS_OUTPUT.PUT_LINE('ASSURE = '||TO_CHAR(P_PLAGE_1)||' BENEFICIAIRE = '||TO_CHAR(P_PLAGE_2)||' TYPE BENEF = '||P_TYPEBEN);
    
    --DBMS_OUTPUT.PUT_LINE('P_EXPLOITATION = '||TO_CHAR(GET_P_EXPLOITATION));
    
    --OUVERTURE DU CURSEUR DE SELECTION  DES RETRAITE A EMTTRE     
    OPEN RETRAITE_A_EMETTRE/*(:PERIODE ,:PLAGE_1,:PLAGE_2,:TYPE_EMIS
                           ,:AG1,:AG2,:AG3,:AG4,:AG5,:AG6,:AG7,:AG8,:AG9,:AG11,:AG12,:AG13,:AG14
                            ,:AG15,:AG16,:AG17,:AG18,:AG19,:AG20,:AG21,:AG22,:AG23,:AG24
                           ,:AG25,:AG10,:AG50,:AG26)*/;     
    --DBMS_OUTPUT.PUT_LINE('APRES OPEN RETRAITE_A_EMETTRE ');                                                               
    LOOP 
                --DBMS_OUTPUT.PUT_LINE('APRES LOOP');    
                FETCH RETRAITE_A_EMETTRE INTO V_RETRAITE_A_EMETTRE;  
                --DBMS_OUTPUT.PUT_LINE('APRES FETCH'||TO_CHAR(RETRAITE_A_EMETTRE%ROWCOUNT)); 
                EXIT WHEN RETRAITE_A_EMETTRE%NOTFOUND; 
                --DBMS_OUTPUT.PUT_LINE('APRES EXIT WHEN');                             
                IF NVL(GET_P_EXPLOITATION,0) = 1 THEN 
                            
                            IF V_RETRAITE_A_EMETTRE.AYATYPE = 'T' THEN
                                        
                                INSERT INTO CONCEP1.REJET_EMISSION 
                                VALUES (V_RETRAITE_A_EMETTRE.AGPAIEMENT,V_RETRAITE_A_EMETTRE.TRVNUM,NULL,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,
                                V_RETRAITE_A_EMETTRE.AYATYPE,P_PERIODE,'LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.',NULL,'RETRAITE',NULL,NULL,0,0); 
                                                                                           
                                INSERT INTO CONCEP1.RET_DOS_MOTIF
                                VALUES(V_RETRAITE_A_EMETTRE.TRVNUM, 35
                                ,'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.',SYSDATE, NULL);
                                                                                                            
                            ELSIF V_RETRAITE_A_EMETTRE.AYATYPE != 'T' THEN
                                        
                                INSERT INTO CONCEP1.REJET_EMISSION 
                                VALUES (V_RETRAITE_A_EMETTRE.AGPAIEMENT,V_RETRAITE_A_EMETTRE.TRVNUM,NULL,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,
                                V_RETRAITE_A_EMETTRE.AYATYPE,P_PERIODE,'LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.',NULL,'RETRAITE',NULL,NULL,0,0);                                 
                                                                                                                     
                                INSERT INTO CONCEP1.RET_AYANT_MOTIF     
                                VALUES (35,'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE.'
                                ,SYSDATE,V_RETRAITE_A_EMETTRE.TRVNUM,V_RETRAITE_A_EMETTRE.AYATYPE,V_RETRAITE_A_EMETTRE.BENEFICIAIRE, NULL);                            
                                        
                            END IF;
                            
                ELSE
                      --DBMS_OUTPUT.PUT_LINE('F_DOSSIER_REACTIVE = '||TO_CHAR(F_DOSSIER_REACTIVE(V_RETRAITE_A_EMETTRE.TRVNUM,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,V_RETRAITE_A_EMETTRE.AYATYPE)));
                      IF F_DOSSIER_REACTIVE(V_RETRAITE_A_EMETTRE.TRVNUM) = 1 AND V_RETRAITE_A_EMETTRE.AYATYPE = 'T' THEN  -- GESTION DES DROITS ACQUIS
                           --NE PAS BLOQUER L'EMISSION                             
                            V_DATE_DECES:=NULL;
                            OPEN CUR_DATE_DECES_BENEFICIAIRE(V_RETRAITE_A_EMETTRE.TRVNUM,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,V_RETRAITE_A_EMETTRE.AYATYPE);
                            FETCH CUR_DATE_DECES_BENEFICIAIRE INTO V_DATE_DECES;
                            
                            IF CUR_DATE_DECES_BENEFICIAIRE%FOUND AND TRUNC(LAST_DAY(P_PERIODE)) > TRUNC(LAST_DAY(V_DATE_DECES)) THEN
                                CLOSE CUR_DATE_DECES_BENEFICIAIRE;
                                 RAISE_APPLICATION_ERROR(-20009,'EMISSION IMPOSSIBLE !! LE BENEFICIAIRE EST DECEDE A CETTE PERIODE.');
                            END IF;
                             CLOSE CUR_DATE_DECES_BENEFICIAIRE;
                      
                      ELSIF F_DOSSIER_REACTIVE(V_RETRAITE_A_EMETTRE.TRVNUM,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,V_RETRAITE_A_EMETTRE.AYATYPE) = 1 AND V_RETRAITE_A_EMETTRE.AYATYPE = 'C' THEN  -- GESTION DES DROITS ACQUIS
                           --NE PAS BLOQUER L'EMISSION                             
                            V_DATE_DECES:=NULL;
                            OPEN CUR_DATE_DECES_BENEFICIAIRE(V_RETRAITE_A_EMETTRE.TRVNUM,V_RETRAITE_A_EMETTRE.BENEFICIAIRE,V_RETRAITE_A_EMETTRE.AYATYPE);
                            FETCH CUR_DATE_DECES_BENEFICIAIRE INTO V_DATE_DECES;
                            
                            --DBMS_OUTPUT.PUT_LINE('V_DATE_DECES = '||TO_CHAR(TRUNC(LAST_DAY(V_DATE_DECES)),'DD/MM/YYYY'));
                            IF CUR_DATE_DECES_BENEFICIAIRE%FOUND AND TRUNC(LAST_DAY(P_PERIODE)) > TRUNC(LAST_DAY(V_DATE_DECES)) THEN
                                CLOSE CUR_DATE_DECES_BENEFICIAIRE;
                                 RAISE_APPLICATION_ERROR(-20009,'EMISSION IMPOSSIBLE !! LE BENEFICIAIRE EST DECEDE A CETTE PERIODE.');
                            END IF;
                             CLOSE CUR_DATE_DECES_BENEFICIAIRE;                             
                                                   
                      ELSE
                            RAISE_APPLICATION_ERROR(-20009,'EMISSION IMPOSSIBLE !! LE BENEFICIAIRE A UN CERTIFICAT DE DECES VALIDE SAISI.');
                      END IF;                                                                            
                              
                END IF;
                        
    END LOOP;
END;


PROCEDURE PROC_RET_SUSPENSION_NETNEGATIF(P_ASSURE NUMBER,P_BENEFICIAIRE NUMBER,P_TYPE_BENEFICIAIRE CHAR,P_NUMERO_EXECUTION VARCHAR2, P_PERIODE DATE) IS
BEGIN
  
 IF P_TYPE_BENEFICIAIRE!= 'T' THEN --AYANT DROIT
            BEGIN
                INSERT INTO CONCEP1.RET_AYANT_MOTIF 
                SELECT 35,'LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS',
                SYSDATE,P_ASSURE,P_TYPE_BENEFICIAIRE,P_BENEFICIAIRE,SYSDATE
                FROM DUAL
                WHERE NOT EXISTS (
                                 SELECT *
                                 FROM RET_AYANT_MOTIF
                                 WHERE CODEMOTIF = 35
                                 AND DATEMOTIF = SYSDATE
                                 AND TRVNUM = P_ASSURE
                                 AND TYPE_AYANT = P_TYPE_BENEFICIAIRE
                                 AND RETBENEFICIAIRE = P_BENEFICIAIRE                     
                               );                          
                                                  
                        
            EXCEPTION
                WHEN OTHERS THEN
                
                    IF P_EXPLOITATION = 1 THEN 
                        INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                        SELECT  P_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','INSERT RET_AYANT_MOTIF :: CODEMOTIF ='||TO_CHAR(35)||' :: TRVNUM = '||TO_CHAR(P_ASSURE)||' :: BENEFICIAIRE = '||TO_CHAR(P_BENEFICIAIRE)||' :: TYPE BENEF = '||P_TYPE_BENEFICIAIRE||' :: REMARQUE = '||SUBSTR('EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS',1,50),SYSDATE,NULL,P_PERIODE,NULL,NULL
                        FROM TEMPS_EXECUTION 
                        WHERE NUMERO_EXECUTION=P_NUMERO_EXECUTION ;
                    END IF;  
            END;
    
    ELSE -- ASSURE
                
            BEGIN
            
                 INSERT INTO CONCEP1.RET_DOS_MOTIF 
                 SELECT P_ASSURE,35 ,'LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS' ,SYSDATE ,NULL
                 FROM DUAL
                 WHERE NOT EXISTS(
                         SELECT *
                         FROM CONCEP1.RET_DOS_MOTIF
                         WHERE TRVNUM = P_ASSURE
                         AND CODEMOTIF = 35
                         AND DATEMOTIF = SYSDATE
                      );          
            EXCEPTION
                WHEN OTHERS THEN
                IF P_EXPLOITATION = 1 THEN 
                
                    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                    SELECT  P_NUMERO_EXECUTION,MAX(ACTION)+1,USER
                    ,'ASSURANCE VIEILLESSE-RETRAITE','INSERT RET_DOS_MOTIF :: CODEMOTIF ='||TO_CHAR(35)||' :: TRVNUM = '||TO_CHAR(P_ASSURE)||' :: BENEFICIAIRE = '||TO_CHAR(P_BENEFICIAIRE)||' :: TYPE BENEF = T'||' :: REMARQUE = '||SUBSTR('EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||' LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS.',1,50)
                    ,SYSDATE,NULL,P_PERIODE,NULL,NULL
                    FROM TEMPS_EXECUTION 
                    WHERE NUMERO_EXECUTION=P_NUMERO_EXECUTION;
                    
                END IF;
                            
            END;     
            
    END IF;


END;


PROCEDURE PROC_REN_SUSPENSION_NETNEGATIF(P_ASSURE NUMBER,P_BENEFICIAIRE NUMBER,P_TYPE_BENEFICIAIRE CHAR,P_NUMERO_SINISTRE NUMBER,P_SOUS_REGIME NUMBER) IS

  CURSOR CUR_AYANT_DROIT IS 
  SELECT DISTINCT AYANT_DROIT, 35 CODEMOTIF, 'LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS' REMARQUE,SYSDATE DATEMOTIF
  FROM CONCEP1.REN_AYANT_DROIT
  WHERE TRVNUM = P_ASSURE
  AND BENEFICIAIRE = P_BENEFICIAIRE
  AND AYATYPE = P_TYPE_BENEFICIAIRE
  AND NUMSINISTRE = P_NUMERO_SINISTRE;
  
  CURSOR CUR_RENTES_ASSURES IS 
  SELECT DISTINCT DATE_TAUX
  FROM CONCEP1.RENTE
  WHERE TRVNUM = P_ASSURE
  AND DATSINISTRE = P_NUMERO_SINISTRE
  AND SREGCODE = P_SOUS_REGIME;  
  
  V_DATE_TAUX CONCEP1.RENTE.DATE_TAUX%TYPE;
  
  V_AYANT_DROIT CUR_AYANT_DROIT%ROWTYPE;
  
BEGIN
  
        IF P_TYPE_BENEFICIAIRE!= 'T' THEN --AYANT DROIT
            
            OPEN CUR_AYANT_DROIT;
            FETCH CUR_AYANT_DROIT INTO V_AYANT_DROIT;
            
            IF CUR_AYANT_DROIT%FOUND THEN
                
                    INSERT INTO CONCEP1.REN_AYANT_MOTIF 
                    VALUES (V_AYANT_DROIT.AYANT_DROIT,V_AYANT_DROIT.CODEMOTIF,
                                    V_AYANT_DROIT.REMARQUE,V_AYANT_DROIT.DATEMOTIF); 
                        
            END IF;        
            CLOSE CUR_AYANT_DROIT;
          
        ELSE -- ASSURE
            
            OPEN CUR_RENTES_ASSURES;
            FETCH CUR_RENTES_ASSURES INTO V_DATE_TAUX;
            CLOSE CUR_RENTES_ASSURES;
            INSERT INTO CONCEP1.RENTE_MOTIF 
            VALUES (P_ASSURE,35,'LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS',SYSDATE,P_NUMERO_SINISTRE,P_SOUS_REGIME,V_DATE_TAUX);        
            
        END IF;


END;


PROCEDURE PROC_MOYEN_PAIEMENT(P_REGIME NUMBER, P_PERIODE DATE) IS
BEGIN
  
     CONCEP1.PACK_EMISSION.MARQUE_CARTE_BANCAIRE(P_PERIODE,P_REGIME); 
     CONCEP1.PACK_EMISSION.MARQUE_FIDRA(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_GUICHET_BANQUE(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_GUICHET_CNPS(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_GUICHET_CNPS_INTERIEUR(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_CITIDIRECT(P_REGIME);    
     CONCEP1.PACK_EMISSION.MARQUE_ECOBANK(P_REGIME);   /* AJOUT ECOBANK LE 14 10 2012*/ 
     CONCEP1.PACK_EMISSION.MARQUE_COOPEC(P_REGIME);     
     CONCEP1.PACK_EMISSION.MARQUE_REJ_INTERNE_ECOBANK(P_REGIME); /* AJOUT ECOBANK LE 14 10 2012*/
     CONCEP1.PACK_EMISSION.MARQUE_REJ_INTERNE_CITIDIRECT(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_REJET_INTERNE_COOPEC(P_REGIME);
     CONCEP1.PACK_EMISSION.MARQUE_WARI(P_REGIME);    /* AJOUT WARI LE 04 08 2014 */
     
     IF P_REGIME = 6 THEN
        CONCEP1.PACK_EMISSION.MARQUE_UBA_UDIRECT(P_REGIME);    /* AJOUT UBA LE 29 10 2014 */
     END IF;
  
END;

PROCEDURE EMETTRE_RETRAITE(P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER
                            ,P_TYPEBEN  CHAR, P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
                            ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
                            ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
                            ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
                            ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15 AGENCE.AGCODE%TYPE
                            ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17 AGENCE.AGCODE%TYPE,P_AG18 AGENCE.AGCODE%TYPE
                            ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21 AGENCE.AGCODE%TYPE
                            ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24 AGENCE.AGCODE%TYPE
                            ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10 AGENCE.AGCODE%TYPE
                            ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26 AGENCE.AGCODE%TYPE) IS

--ORDRE D'EXECUTION 
--=====================

--DECLARATIONS DE VARIABLES  
    --== 1 
    -- DEFINIR UNE VARIABLE COLLECTION "COLLECT_EMISSION" BASEE 
    -- SUR LA TABLE PRESTATIONS_EMISES_2
     
    TYPE EMISSION_COLLECTION IS TABLE OF PRESTATIONS_EMISES_2%ROWTYPE;
    COLLECT_EMISSION                     EMISSION_COLLECTION:=EMISSION_COLLECTION(NULL);
    --== 2  
    -- DEFINIR UNE VARIABLE COLLECTION "COLLECT_RAPPEL_RETRAITE" BASEE 
    -- SUR LA TABLE RAPPEL_RETRAITE  PERMTTANT DE RECHERCHER LES RAPPELS DE RETRAITE
             
   TYPE RAPPEL_RETRAITE_COLLECTION IS TABLE OF RAPPEL_RETRAITE%ROWTYPE;
   COLLECT_RAPPEL_RETRAITE                     RAPPEL_RETRAITE_COLLECTION:=RAPPEL_RETRAITE_COLLECTION(NULL);
            
   --
   --TABLE REJET_EMISSION 
  TYPE REJET_EMISSION_COLLECTION IS TABLE OF REJET_EMISSION%ROWTYPE;
  COLLECT_REJET_EMISSION                     REJET_EMISSION_COLLECTION:=REJET_EMISSION_COLLECTION(NULL);
  
  --TABLE REN_AYANT_MOTIF  
  TYPE RET_AYANT_MOTIF_COLLECTION IS TABLE OF RET_AYANT_MOTIF%ROWTYPE;
  COLLECT_RET_AYANT_MOTIF                     RET_AYANT_MOTIF_COLLECTION:=RET_AYANT_MOTIF_COLLECTION(NULL);
  
  --RETRAITE_MOTIF 
  TYPE RET_DOS_MOTIF_COLLECTION IS TABLE OF RET_DOS_MOTIF%ROWTYPE;
  COLLECT_RET_DOS_MOTIF                       RET_DOS_MOTIF_COLLECTION:=RET_DOS_MOTIF_COLLECTION(NULL); 
          
  --RETRAITE_MOTIF 
  TYPE BONIFICATION_COLLECTION IS TABLE OF BONIFICATION%ROWTYPE;
  COLLECT_BONIFICATION                    BONIFICATION_COLLECTION:=BONIFICATION_COLLECTION(NULL); 
  
  --COLLECTIONS  CUMUL_IMPOT ET COLLECT IMPOT 
  --PERMETTANT DE RECHERCHER LES CUMULS D'IMPOTS POUR LES DIFFERENTS CALCULS D'IMPOT POUR LA PREMIERE,
  --ET CONSERVER LES DONNEES A INSERER DANS LA TABLE IMPOT POUR LA SECONDE
  
     TYPE CUMUL_IMPOT_COLLECTION IS TABLE OF IMPOT_2%ROWTYPE;
   COLLECT_CUMUL_IMPOT                     CUMUL_IMPOT_COLLECTION:=CUMUL_IMPOT_COLLECTION(NULL);
   
   TYPE IMPOT_COLLECTION IS TABLE OF IMPOT_2%ROWTYPE;
   COLLECT_IMPOT                     IMPOT_COLLECTION:=IMPOT_COLLECTION(NULL);
        
     --== 3     
     --DECLARATION DU CURSEUR RETRAITE_A_EMTTRE 
     --( CURSEUR DE SELECTIION DE LA POPULATION A EMETTRE  CURSEUR_POPULATION_RETRAITE.SQL ) 
     /* 
    --=============================================================
    CURSEUR DE SELECTION DE LA POPULATION A EMETTRE POUR LES RETRAITE 
    --
    ON SELECTIONNE TOUS L'(ES) ASSURE(S) ET AYANT(S) DROIT DONT :
    1-LE DOSSIER PORTE LA SECONDE VALIDATION 
    2-LE MOTIF LE PLUS RECENT EST (21,38) POUR LES ASSURES ET 39 POUR LES AYANTS DROITS  
    
    4-DONT LA DATE DE DERNIERE_EMISSION EST NULL OU ANTERIEURE A LA PERIODE A EMETTRE  OU DONT LE SOLDE DE LA PERIODE EST 0
    5-APPATENANT A UNE AGENCE  

    NB : UNE FONCTION NOUS PERMET DE RAMENER LES PRETS A RETENIR SUR L'ASSURE 
            CETTE REQUETE RAMENE AUSSI LES RAPPELS DE RETRAITE A EFFECTUER SUR UN ASSURE 
    --=============================================================
    */ 
      CURSOR RETRAITE_A_EMETTRE/*( P_PERIODE    DATE
                                ,P_PLAGE_1     NUMBER
                                ,P_PLAGE_2     NUMBER
                                ,P_TYPEBEN     CHAR
                                ,P_AG1         AGENCE.AGCODE%TYPE
                                ,P_AG2         AGENCE.AGCODE%TYPE
                                ,P_AG3         AGENCE.AGCODE%TYPE
                                ,P_AG4         AGENCE.AGCODE%TYPE
                                ,P_AG5         AGENCE.AGCODE%TYPE
                                ,P_AG6         AGENCE.AGCODE%TYPE
                                ,P_AG7         AGENCE.AGCODE%TYPE
                                ,P_AG8         AGENCE.AGCODE%TYPE
                                ,P_AG9         AGENCE.AGCODE%TYPE
                                ,P_AG11        AGENCE.AGCODE%TYPE
                                ,P_AG12        AGENCE.AGCODE%TYPE
                                ,P_AG13        AGENCE.AGCODE%TYPE
                                ,P_AG14        AGENCE.AGCODE%TYPE
                                ,P_AG15        AGENCE.AGCODE%TYPE
                                ,P_AG16        AGENCE.AGCODE%TYPE
                                ,P_AG17        AGENCE.AGCODE%TYPE
                                ,P_AG18        AGENCE.AGCODE%TYPE
                                ,P_AG19        AGENCE.AGCODE%TYPE
                                ,P_AG20        AGENCE.AGCODE%TYPE
                                ,P_AG21        AGENCE.AGCODE%TYPE
                                ,P_AG22        AGENCE.AGCODE%TYPE
                                ,P_AG23        AGENCE.AGCODE%TYPE
                                ,P_AG24        AGENCE.AGCODE%TYPE
                                ,P_AG25        AGENCE.AGCODE%TYPE
                                ,P_AG10        AGENCE.AGCODE%TYPE
                                ,P_AG50        AGENCE.AGCODE%TYPE
                                ,P_AG26        AGENCE.AGCODE%TYPE 
                                ) */ IS 
        SELECT R.TRVNUM TRVNUM,R.TRVNUM BENEFICIAIRE,'T' AYATYPE,NVL(RETMONTNORM,0) MONTANT_NORMAL,NVL(RETMONTCOMP,0)  MONTANT_COMP,NVL(RETMONTRAPPEL,0) RETMONTRAPPEL
        ,NVL(MONTANT_REVALORISATION (R.TRVNUM,R.TRVNUM,'T',P_PERIODE),0) REVALORISATION/*NVL(RETMONTIPRAO,0) REVALORISATION*/
        ,IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T')  MONTANT_IPRAO
        ,NVL(DREMODEPAIE,1) MODEPAIE,NVL(DRECDBANQUE,99) BANQUE,DRESUCCURSALE SUCCURSALE,DRECPTEBANQUE COMPTE_BANCAIRE,CLE_RIB,DRPAIEMENT,AGPAIEMENT
        ,NVL(DRELOCALITE,101) LOCALITE,NVL(DRECOMMUNE,4)COMMUNE,NVL(DREQUARTIER,1)QUARTIER,CODEDROIT,DRNUMRETRAITE,DREADRESSE ADRESSE,DREDATEJOUIS,DREDATEDEPOT,R.DEBUT_TRIMESTRE
        ,RETDATEMIS,DERNIERE_EMISSION,SREGCODE,TO_DATE(NULL) DATE_ARRET,RDM.CODEMOTIF CODEMOTIF
        ,F_RECUPERATION_PRETS(R.TRVNUM,R.TRVNUM,'T',6,P_PERIODE) PRETS
        ,AGE(R.TRVNUM,R.TRVNUM,'T',P_PERIODE,'V') AGEE_DE
        ,AGE(R.TRVNUM,R.TRVNUM,'T',TRUNC(P_PERIODE,'YEAR'),'V') AGE_IMPOT
        ,F_NOMBRE_PARTS(R.TRVNUM,'T',TRUNC(P_PERIODE,'YEAR')) NOMBRE_PARTS
        ,RESIDANTS_PAYS_CONVENTIONNES(R.TRVNUM) RESIDENCE_FISCALE
        ,NUMERO_DORDRE_RETRAITE() NUMERO_ORDRE
        ,BONIFICATION_EMISE(R.TRVNUM,SREGCODE,P_PERIODE,TO_NUMBER(NULL)) BONIFICATION
        --,(NVL(RETMONTNORM,0)+NVL(RETMONTCOMP,0)+IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T')+NVL(RETMONTRAPPEL,0) )  MONTANT_PENSION /*MIS EN COMMENTAIRE LE 13 JUIN 2011 LORS DES TRAVAUX PAIEMENT GUICHET CNCE*/
        --,(NVL(RETMONTNORM,0)+NVL(RETMONTCOMP,0)+IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T') )  MONTANT_PENSION
        ,(NVL(RETMONTNORM,0)+NVL(RETMONTCOMP,0)+NVL(MONTANT_REVALORISATION (R.TRVNUM,R.TRVNUM,'T',P_PERIODE),0)+IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T') )  MONTANT_PENSION --FORMULE MISE A JOUR LE 09 05 2014
        --,(NVL(RETMONTNORM,0)+NVL(RETMONTCOMP,0)+NVL(RETMONTIPRAO,0)+IPRAO_MONTANT(R.TRVNUM,R.TRVNUM,'T') )  MONTANT_PENSION --FORMULE MISE A JOUR LE 22 06 2011 A 22H29
        --,SUSPENSION_ENP(R.TRVNUM,R.TRVNUM,'T',6,DR.AGPAIEMENT,P_PERIODE,SREGCODE) A_SUSPENDRE
        /*,F_SUSPENSION_MANDAT_IMPAYES(DR.TRVNUM,DR.TRVNUM,'T',P_PERIODE,DR.DRETYPENSION,DR.TRVNUM) A_SUSPENDRE*/
        ,DECODE( TO_CHAR(DR.AGPAIEMENT) , '24' , 0, F_SUSPENSION_MANDAT_IMPAYES(DR.TRVNUM,DR.TRVNUM,'T',P_PERIODE,DR.DRETYPENSION,DR.TRVNUM)) A_SUSPENDRE
        ,TO_NUMBER(NULL) NON_REMARIAGE
        ,DR.DRECAISSE DRECAISSE
        ,SOLDE_PRESTATIONS_EMISES(R.TRVNUM,R.TRVNUM,R.TRVNUM,'T',R.SREGCODE,P_PERIODE,P_PERIODE,1) SOLDE_PERIODE
        -----------------------
        ,DR.CODE_BCEAO CODE_BCEAO/*PRISE EN COMPTE DU CODE BCEAO SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 JUIN 2011)*/
        ,DR.CODE_PAYS_IBAN/*PRISE EN COMPTE DU CODE_PAYS_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 SEPT 2012)*/
        ,DR.CLE_IBAN/*PRISE EN COMPTE DE LA CLE_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 SEPT 2012)*/        
        -----------------------
        FROM CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR
        WHERE R.TRVNUM = RDM.TRVNUM
        AND R.TRVNUM=DR.TRVNUM
        AND UPPER(R.CODVALAC) = 'V'
        AND RDM.CODEMOTIF IN (21,38)
        AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF) FROM RET_DOS_MOTIF MDR WHERE MDR.TRVNUM=RDM.TRVNUM)
        AND R.DEBUT_TRIMESTRE <=P_PERIODE        
        AND R.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
        AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)
        AND NOT EXISTS (
                SELECT *
                FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                WHERE DF.ASSURE = DR.TRVNUM
                AND DF.BENEFICIAIRE = DR.TRVNUM
                AND DF.Flag_Bloc = 1
        )
        AND NOT EXISTS (
            SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
            FROM CONCEP1.PRESTATIONS_EMISES_2 PE
            WHERE PE.PERIODE_EMISE = P_PERIODE
            --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
            AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
            AND PE.ASSURE = DR.TRVNUM
            AND PE.BENEFICIAIRE = DR.TRVNUM
            AND PE.TYPE_BENEFICIAIRE = 'T'
            GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
            HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))                    
        )                 
        ---==============================================================================================
        --===================
        UNION ALL
        --===================
        ---==============================================================================================
        SELECT R.TRVNUM,BENEFICIAIRE,AYATYPE AYATYPE,NVL(AYAMONTANTN,0),0 MONTANT_COMP,NVL(AYAMONTANTC,0) RETMONTRAPPEL
        ,NVL(MONTANT_REVALORISATION (R.TRVNUM,R.BENEFICIAIRE,AYATYPE,P_PERIODE),0) REVALORISATION/*NVL(IPRAOMONTANT,0) REVALORISATION*/
        ,IPRAO_MONTANT(R.TRVNUM,R.BENEFICIAIRE,AYATYPE),NVL(MODEPAIE,1),NVL(BANQUE,99),SUCCURSALE,CPTEBANQUE,CLE_RIB,DRPAIEMENT,AGPAIEMENT
        ,NVL(LOCALITE,101) LOCALITE,NVL(COMMUNE,4)COMMUNE,NVL(QUARTIER,1)QUARTIER,CODEDROIT,NUMRETRAITE,ADRESSE,AYADATEJOUIS,AYADATEDEPOT,AYADEBUT_TRIMESTRE
        ,AYADATEMIS,AYADERNIERE_EMISSION,AYACODEPENSION,AYADATEARRET DATE_ARRET,RAM.CODEMOTIF CODEMOTIF
        ,F_RECUPERATION_PRETS(R.TRVNUM,BENEFICIAIRE,AYATYPE,6,P_PERIODE) PRETS
        ,AGE(R.TRVNUM,BENEFICIAIRE,AYATYPE,P_PERIODE,'V') AGEE_DE
        ,AGE(R.TRVNUM,BENEFICIAIRE,AYATYPE,TRUNC(P_PERIODE,'YEAR'),'V') AGE_IMPOT
        ,TO_NUMBER(NULL)
        ,TO_NUMBER(NULL)
        ,NUMERO_DORDRE_RETRAITE() NUMERO_ORDRE
        ,F_REPARTITION(R.TRVNUM,BENEFICIAIRE,AYATYPE,BONIFICATION_EMISE(R.TRVNUM,AYACODEPENSION,P_PERIODE,TO_NUMBER(NULL))) BONIFICATION
        --,(NVL(AYAMONTANTN,0)+NVL(AYAMONTANTC,0)+IPRAO_MONTANT(R.TRVNUM,R.BENEFICIAIRE,AYATYPE))
        ,(NVL(AYAMONTANTN,0)+NVL(AYAMONTANTC,0)+NVL(MONTANT_REVALORISATION (R.TRVNUM,R.BENEFICIAIRE,AYATYPE,P_PERIODE),0)+IPRAO_MONTANT(R.TRVNUM,R.BENEFICIAIRE,AYATYPE))--FORMULE MISE A JOUR LE 09 05 2014
        --,(NVL(AYAMONTANTN,0)+NVL(AYAMONTANTC,0)+NVL(IPRAOMONTANT,0)+IPRAO_MONTANT(R.TRVNUM,R.BENEFICIAIRE,AYATYPE))--FORMULE MISE A JOUR LE 22 06 2011 A 22H29
        --,SUSPENSION_ENP(R.TRVNUM,BENEFICIAIRE,AYATYPE,6,AGPAIEMENT,P_PERIODE,AYACODEPENSION)
        /*,F_SUSPENSION_MANDAT_IMPAYES(R.TRVNUM,R.BENEFICIAIRE,R.AYATYPE,P_PERIODE,AYACODEPENSION,R.TRVNUM)*/
        ,DECODE( TO_CHAR(R.AGPAIEMENT) , '24' , 0,F_SUSPENSION_MANDAT_IMPAYES(R.TRVNUM,R.BENEFICIAIRE,R.AYATYPE,P_PERIODE,AYACODEPENSION,R.TRVNUM)) A_SUSPENDRE
        ,CERTIF_NON_REMARIAGE_VALIDE(R.TRVNUM,BENEFICIAIRE,AYATYPE,P_PERIODE) NON_REMARIAGE
        ,TO_NUMBER(NULL) DRECAISSE
        ,SOLDE_PRESTATIONS_EMISES(R.TRVNUM,R.TRVNUM,R.BENEFICIAIRE,AYATYPE,AYACODEPENSION,P_PERIODE,P_PERIODE,1) SOLDE_PERIODE        
        -----------------------
        ,R.BOITEPOSTALE CODE_BCEAO/*PRISE EN COMPTE DU CODE BCEAO SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 JUIN 2011)*/
        ,R.CODE_PAYS_IBAN/*PRISE EN COMPTE DU CODE_PAYS_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 SEPT 2012)*/
        ,R.CLE_IBAN/*PRISE EN COMPTE DE LA CLE_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 20 SEPT 2012)*/        
        -----------------------        
        FROM CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM
        WHERE R.TRVNUM=RAM.TRVNUM
        AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
        AND R.AYATYPE=RAM.TYPE_AYANT
        AND RAM.CODEMOTIF=RAM.CODEMOTIF
        AND RAM.DATEMOTIF=RAM.DATEMOTIF
        AND UPPER(R.CODVALAC) = 'V'
        AND RAM.CODEMOTIF IN (21,39)
        AND RAM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                           FROM CONCEP1.RET_AYANT_MOTIF MDR
                           WHERE MDR.TRVNUM=RAM.TRVNUM
                           AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                           AND MDR.TYPE_AYANT=RAM.TYPE_AYANT
                           AND MDR.CODEMOTIF=MDR.CODEMOTIF
                           AND MDR.DATEMOTIF=MDR.DATEMOTIF                         
                          )
        AND R.AYADEBUT_TRIMESTRE <= P_PERIODE
        AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
        AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
        AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                    ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                                  ,P_AG10,P_AG50,P_AG26)
        AND NOT EXISTS (
                SELECT *
                FROM CONCEP1.DOSSIER_FRAUDULEUX DF
                WHERE DF.ASSURE = R.TRVNUM
                AND DF.BENEFICIAIRE = RAM.RETBENEFICIAIRE
                AND DF.Flag_Bloc = 1
        )
        AND NOT EXISTS (
            SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
            FROM CONCEP1.PRESTATIONS_EMISES_2 PE
            WHERE PE.PERIODE_EMISE = P_PERIODE
            --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
            AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
            AND PE.ASSURE = R.TRVNUM
            AND PE.BENEFICIAIRE = R.BENEFICIAIRE
            AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
            GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
            HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))                    
        );


--CURSEUR POUR EXECUTION DE PROC_BONIF_SUSPENDU
CURSOR RETRAITE_A_EMETTRE_BONIF_SUSP /*( P_PERIODE    DATE
                        ,P_PLAGE_1     NUMBER
                        ,P_PLAGE_2     NUMBER
                        ,P_TYPEBEN     CHAR
                        ,P_AG1         AGENCE.AGCODE%TYPE
                        ,P_AG2         AGENCE.AGCODE%TYPE
                        ,P_AG3         AGENCE.AGCODE%TYPE
                        ,P_AG4         AGENCE.AGCODE%TYPE
                        ,P_AG5         AGENCE.AGCODE%TYPE
                        ,P_AG6         AGENCE.AGCODE%TYPE
                        ,P_AG7         AGENCE.AGCODE%TYPE
                        ,P_AG8         AGENCE.AGCODE%TYPE
                        ,P_AG9         AGENCE.AGCODE%TYPE
                        ,P_AG11        AGENCE.AGCODE%TYPE
                        ,P_AG12        AGENCE.AGCODE%TYPE
                        ,P_AG13        AGENCE.AGCODE%TYPE
                        ,P_AG14        AGENCE.AGCODE%TYPE
                        ,P_AG15        AGENCE.AGCODE%TYPE
                        ,P_AG16        AGENCE.AGCODE%TYPE
                        ,P_AG17        AGENCE.AGCODE%TYPE
                        ,P_AG18        AGENCE.AGCODE%TYPE
                        ,P_AG19        AGENCE.AGCODE%TYPE
                        ,P_AG20        AGENCE.AGCODE%TYPE
                        ,P_AG21        AGENCE.AGCODE%TYPE
                        ,P_AG22        AGENCE.AGCODE%TYPE
                        ,P_AG23        AGENCE.AGCODE%TYPE
                        ,P_AG24        AGENCE.AGCODE%TYPE
                        ,P_AG25        AGENCE.AGCODE%TYPE
                        ,P_AG10        AGENCE.AGCODE%TYPE
                        ,P_AG50        AGENCE.AGCODE%TYPE
                        ,P_AG26        AGENCE.AGCODE%TYPE 
                        )*/ IS 
SELECT R.TRVNUM TRVNUM,R.TRVNUM BENEFICIAIRE,'T' AYATYPE
-----------------------
FROM CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR
WHERE R.TRVNUM = RDM.TRVNUM
AND R.TRVNUM=DR.TRVNUM
AND UPPER(R.CODVALAC) = 'V'
AND RDM.CODEMOTIF IN (21,38)
AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF) FROM RET_DOS_MOTIF MDR WHERE MDR.TRVNUM=RDM.TRVNUM)
AND R.DEBUT_TRIMESTRE <=P_PERIODE
AND R.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                      ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                      ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.DOSSIER_FRAUDULEUX DF
        WHERE DF.ASSURE = DR.TRVNUM
        AND DF.BENEFICIAIRE = DR.TRVNUM
        AND DF.Flag_Bloc = 1
)
AND NOT EXISTS (
    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
    WHERE PE.PERIODE_EMISE = P_PERIODE
    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1            
    AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
    AND PE.ASSURE = DR.TRVNUM
    AND PE.BENEFICIAIRE = DR.TRVNUM
    AND PE.TYPE_BENEFICIAIRE = 'T'
    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))             
)                 
---==============================================================================================
--===================
UNION ALL
--===================
---==============================================================================================
SELECT R.TRVNUM,BENEFICIAIRE,AYATYPE AYATYPE
-----------------------        
FROM CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM
WHERE R.TRVNUM=RAM.TRVNUM
AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
AND R.AYATYPE=RAM.TYPE_AYANT
AND RAM.CODEMOTIF=RAM.CODEMOTIF
AND RAM.DATEMOTIF=RAM.DATEMOTIF
AND UPPER(R.CODVALAC) = 'V'
AND RAM.CODEMOTIF IN (21,39)
AND RAM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                   FROM CONCEP1.RET_AYANT_MOTIF MDR
                   WHERE MDR.TRVNUM=RAM.TRVNUM
                   AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                   AND MDR.TYPE_AYANT=RAM.TYPE_AYANT
                   AND MDR.CODEMOTIF=MDR.CODEMOTIF
                   AND MDR.DATEMOTIF=MDR.DATEMOTIF                         
                  )
AND R.AYADEBUT_TRIMESTRE <= P_PERIODE
AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                            ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                          ,P_AG10,P_AG50,P_AG26)
AND NOT EXISTS (
        SELECT *
        FROM CONCEP1.DOSSIER_FRAUDULEUX DF
        WHERE DF.ASSURE = R.TRVNUM
        AND DF.BENEFICIAIRE = RAM.RETBENEFICIAIRE
        AND DF.Flag_Bloc = 1
)
AND NOT EXISTS (
    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
    WHERE PE.PERIODE_EMISE = P_PERIODE
    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
    AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
    AND PE.ASSURE = R.TRVNUM
    AND PE.BENEFICIAIRE = R.BENEFICIAIRE
    AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))             
);


     /* 
    --=============================================================
    --
    ON SELECTIONNE TOUS L'(ES) ASSURE(S) ET AYANT(S) DROIT DONT :
    1-
    2-
    3-
    4-
    5-

     --=============================================================
    */ 
       CURSOR RAP_RETRAITE/*( P_PERIODE    DATE
                            ,P_PLAGE_1     NUMBER
                            ,P_PLAGE_2     NUMBER
                            ,P_TYPEBEN     CHAR
                            ,P_AG1         AGENCE.AGCODE%TYPE
                            ,P_AG2         AGENCE.AGCODE%TYPE
                            ,P_AG3         AGENCE.AGCODE%TYPE
                            ,P_AG4         AGENCE.AGCODE%TYPE
                            ,P_AG5         AGENCE.AGCODE%TYPE
                            ,P_AG6         AGENCE.AGCODE%TYPE
                            ,P_AG7         AGENCE.AGCODE%TYPE
                            ,P_AG8         AGENCE.AGCODE%TYPE
                            ,P_AG9         AGENCE.AGCODE%TYPE
                            ,P_AG11        AGENCE.AGCODE%TYPE
                            ,P_AG12        AGENCE.AGCODE%TYPE
                            ,P_AG13        AGENCE.AGCODE%TYPE
                            ,P_AG14        AGENCE.AGCODE%TYPE
                            ,P_AG15        AGENCE.AGCODE%TYPE
                            ,P_AG16        AGENCE.AGCODE%TYPE
                            ,P_AG17        AGENCE.AGCODE%TYPE
                            ,P_AG18        AGENCE.AGCODE%TYPE
                            ,P_AG19        AGENCE.AGCODE%TYPE
                            ,P_AG20        AGENCE.AGCODE%TYPE
                            ,P_AG21        AGENCE.AGCODE%TYPE
                            ,P_AG22        AGENCE.AGCODE%TYPE
                            ,P_AG23        AGENCE.AGCODE%TYPE
                            ,P_AG24        AGENCE.AGCODE%TYPE
                            ,P_AG25        AGENCE.AGCODE%TYPE
                            ,P_AG10        AGENCE.AGCODE%TYPE
                            ,P_AG50        AGENCE.AGCODE%TYPE
                            ,P_AG26        AGENCE.AGCODE%TYPE 
                            ) */
                            IS 
        SELECT R.SREGCODE,RAP.TRVNUM ASSURE,RAP.TRVNUM BENEFICIAIRE,'T' TYPEBENEF
        ,NVL(SUM(RAPMTRG),0)    RAPMTRG
        ,NVL(SUM(RAPMTRC),0)    RAPMTRC
        ,NVL(SUM(RAPRGSP),0)    RAPRGSP
        ,NVL(SUM(RAPRCSP),0)    RAPRCSP
        ,NVL(SUM(RAPIPRAO),0)   RAPIPRAO
        FROM CONCEP1.RAPPEL_RETRAITE RAP,CONCEP1.RETRAITE R,CONCEP1.RET_DOS_MOTIF RDM,CONCEP1.DOSSIER_RETRAITE DR
        WHERE RAP.TRVNUM=R.TRVNUM
        AND RAP.RAPBENEFICIAIRE=R.TRVNUM
        AND UPPER(R.CODVALAC) = 'V'
        AND RAP.RAPTYPEBENEF='T'
        AND RAP.RAPCODE IN (SELECT 1 FROM DUAL WHERE  23=R.SREGCODE
                            UNION ALL SELECT 1 FROM DUAL WHERE  24=R.SREGCODE
                            UNION ALL SELECT 1 FROM DUAL WHERE  27=R.SREGCODE
                            UNION ALL SELECT DISTINCT NVL(RAPCODE,0) FROM CONCEP1.RAPPEL_RETRAITE 
                                      WHERE R.SREGCODE NOT IN (23,24,27)
                                      AND RAPCODE NOT IN (7,9,4,5)) --AJOUT DES CODE RAPPEL 4 ET 5 LE 19 12 2011
        AND RAP.DATESAISIE=RAP.DATESAISIE
        AND NVL((RAPMTRG),0)+NVL((RAPMTRC),0)+NVL((RAPRGSP),0)+NVL((RAPRCSP),0)+NVL((RAPIPRAO),0)>0
        --
        AND RAP.DATEMIS IS NULL
        AND RAP.TRVNUM = RDM.TRVNUM
        AND RAP.TRVNUM=DR.TRVNUM
        AND RDM.CODEMOTIF IN (21,38)
        AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF) FROM CONCEP1.RET_DOS_MOTIF MDR WHERE MDR.TRVNUM=RDM.TRVNUM )
        AND R.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
        AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)     
                AND NOT EXISTS (
                    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                    WHERE PE.PERIODE_EMISE = P_PERIODE
                    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
                    AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
                    AND PE.ASSURE = DR.TRVNUM
                    AND PE.BENEFICIAIRE = DR.TRVNUM
                    AND PE.TYPE_BENEFICIAIRE = 'T'
                    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))                    
                )                                             
        GROUP BY R.SREGCODE,RAP.TRVNUM ,RAP.TRVNUM
        ---=======
        UNION ALL
        ---=======
        SELECT R.AYACODEPENSION,RAP.TRVNUM ,RAP.RAPBENEFICIAIRE ,AYATYPE
        ,NVL(SUM(RAPMTRG),0)    RAPMTRG
        ,NVL(SUM(RAPMTRC),0)    RAPMTRC
        ,NVL(SUM(RAPRGSP),0)    RAPRGSP
        ,NVL(SUM(RAPRCSP),0)    RAPRCSP
        ,NVL(SUM(RAPIPRAO),0)   RAPIPRAO 
        FROM CONCEP1.RAPPEL_RETRAITE RAP,CONCEP1.RET_AYANT_DROIT R,CONCEP1.RET_AYANT_MOTIF RAM
        WHERE  RAP.TRVNUM=R.TRVNUM
        AND RAP.RAPBENEFICIAIRE=R.BENEFICIAIRE
        AND RAP.RAPTYPEBENEF=R.AYATYPE
        AND RAP.RAPCODE IN (SELECT 1 FROM DUAL WHERE  23=R.AYACODEPENSION
                            UNION ALL SELECT 1 FROM DUAL WHERE  24=R.AYACODEPENSION
                            UNION ALL SELECT 1 FROM DUAL WHERE  27=R.AYACODEPENSION
                            UNION ALL SELECT DISTINCT NVL(RAPCODE,0) FROM CONCEP1.RAPPEL_RETRAITE 
                                      WHERE R.AYACODEPENSION NOT IN (23,24,27)
                                      AND RAPCODE NOT IN (7,9,4,5)--AJOUT DES CODE RAPPEL 4 ET 5 LE 19 12 2011
                            )
        AND RAP.DATESAISIE=RAP.DATESAISIE
        AND RAP.DATEMIS IS NULL
        AND NVL((RAPMTRG),0)+NVL((RAPMTRC),0)+NVL((RAPRGSP),0)+NVL((RAPRCSP),0)+NVL((RAPIPRAO),0)>0
        ---
        AND R.TRVNUM=RAM.TRVNUM
        AND R.BENEFICIAIRE = RAM.RETBENEFICIAIRE
        AND R.AYATYPE=RAM.TYPE_AYANT
        AND RAM.CODEMOTIF=RAM.CODEMOTIF
        AND RAM.DATEMOTIF=RAM.DATEMOTIF
        AND UPPER(R.CODVALAC) = 'V'
        AND RAM.CODEMOTIF IN (21,39)
        AND RAM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                           FROM RET_AYANT_MOTIF MDR
                           WHERE MDR.TRVNUM=RAM.TRVNUM
                           AND MDR.RETBENEFICIAIRE = RAM.RETBENEFICIAIRE
                           AND MDR.TYPE_AYANT=RAM.TYPE_AYANT
                           AND MDR.CODEMOTIF=MDR.CODEMOTIF
                           AND MDR.DATEMOTIF=MDR.DATEMOTIF
                          )
        AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
        AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
        AND AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                    ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                                  ,P_AG10,P_AG50,P_AG26)                      
                AND NOT EXISTS (
                    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                    WHERE PE.PERIODE_EMISE = P_PERIODE
                    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
                    AND PE.CODE_SOUS_REGIME = R.AYACODEPENSION
                    AND PE.ASSURE = R.TRVNUM
                    AND PE.BENEFICIAIRE = R.BENEFICIAIRE
                    AND PE.TYPE_BENEFICIAIRE = R.AYATYPE
                    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))                     
                )                                        
        GROUP BY R.AYACODEPENSION,RAP.TRVNUM ,RAP.RAPBENEFICIAIRE ,AYATYPE;
      
    --== 4 
    CURSOR CUMUL_IMPOT/*( P_PERIODE    DATE
                        ,P_PLAGE_1     NUMBER
                          ,P_PLAGE_2     NUMBER
                          ,P_TYPEBEN     CHAR
                          ,P_AG1         AGENCE.AGCODE%TYPE
                          ,P_AG2         AGENCE.AGCODE%TYPE
                          ,P_AG3         AGENCE.AGCODE%TYPE
                          ,P_AG4         AGENCE.AGCODE%TYPE
                          ,P_AG5         AGENCE.AGCODE%TYPE
                          ,P_AG6         AGENCE.AGCODE%TYPE
                          ,P_AG7         AGENCE.AGCODE%TYPE
                          ,P_AG8         AGENCE.AGCODE%TYPE
                          ,P_AG9         AGENCE.AGCODE%TYPE
                          ,P_AG11        AGENCE.AGCODE%TYPE
                          ,P_AG12        AGENCE.AGCODE%TYPE
                          ,P_AG13        AGENCE.AGCODE%TYPE
                          ,P_AG14        AGENCE.AGCODE%TYPE
                          ,P_AG15        AGENCE.AGCODE%TYPE
                          ,P_AG16        AGENCE.AGCODE%TYPE
                          ,P_AG17        AGENCE.AGCODE%TYPE
                          ,P_AG18        AGENCE.AGCODE%TYPE
                          ,P_AG19        AGENCE.AGCODE%TYPE
                          ,P_AG20        AGENCE.AGCODE%TYPE
                          ,P_AG21        AGENCE.AGCODE%TYPE
                          ,P_AG22        AGENCE.AGCODE%TYPE
                          ,P_AG23        AGENCE.AGCODE%TYPE
                          ,P_AG24        AGENCE.AGCODE%TYPE
                          ,P_AG25        AGENCE.AGCODE%TYPE
                          ,P_AG10        AGENCE.AGCODE%TYPE
                          ,P_AG50        AGENCE.AGCODE%TYPE
                          ,P_AG26        AGENCE.AGCODE%TYPE 
                          ) */
                            IS         
    SELECT 
        IMPTRVNUM,IMPBENEFICIAIRE,IMPTYPEBENEF,IMPCODE,IMPBASEIMPOSABLE,IMPPARTS,IMPMONTANT
        ,IMPCUMUL,IMPMOISREFERENCE,IMPPERIODEMISSION,IMPDATESAIS,IMPDATEMODIF,DATEMIS,IMPNBJFP
        ,IMPCUMNBJFP,IMPCUMBASEIMPOSABLE,IMPMONTANTAN,IMPBASEIMPOSABLE_AN
        FROM IMPOT_2 I,RETRAITE R,RET_DOS_MOTIF RDM,DOSSIER_RETRAITE DR
        WHERE R.TRVNUM = RDM.TRVNUM
        AND R.TRVNUM=DR.TRVNUM
        AND UPPER(R.CODVALAC) = 'V'
        AND RDM.CODEMOTIF IN (21,38)
        AND RDM.DATEMOTIF=(SELECT MAX(DATEMOTIF)
                           FROM RET_DOS_MOTIF MDR
                           WHERE MDR.TRVNUM=RDM.TRVNUM
                           GROUP BY MDR.TRVNUM
                          )
        AND R.DEBUT_TRIMESTRE <=P_PERIODE
        AND R.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
        AND DR.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                              ,P_AG10,P_AG50,P_AG26)
        AND R.TRVNUM=I.IMPTRVNUM
        AND I.IMPBENEFICIAIRE =I.IMPBENEFICIAIRE
        AND I.IMPTYPEBENEF    ='T'
        AND I.IMPCODE         =I.IMPCODE
        AND I.IMPPERIODEMISSION=I.IMPPERIODEMISSION
        AND I.IMPDATESAIS=I.IMPDATESAIS
        AND IMPMOISREFERENCE=(SELECT MAX(MAX_IMP.IMPMOISREFERENCE)
                              FROM IMPOT_2 MAX_IMP
                              WHERE MAX_IMP.IMPTRVNUM=I.IMPTRVNUM
                              AND MAX_IMP.IMPBENEFICIAIRE =I.IMPBENEFICIAIRE
                              AND MAX_IMP.IMPTYPEBENEF    ='T'
                              AND MAX_IMP.IMPCODE         =    I.IMPCODE            -- MAX_IMP.IMPCODE
                              AND MAX_IMP.IMPMOISREFERENCE>=TRUNC(P_PERIODE,'YEAR')
                              AND MAX_IMP.IMPPERIODEMISSION=MAX_IMP.IMPPERIODEMISSION--I.IMPPERIODEMISSION
                              AND MAX_IMP.IMPDATESAIS=MAX_IMP.IMPDATESAIS                         --I.IMPDATESAIS                              
                             )
                AND NOT EXISTS (
                    SELECT PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                    WHERE PE.PERIODE_EMISE = P_PERIODE
                    --AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
                    AND PE.CODE_SOUS_REGIME = DR.DRETYPENSION
                    AND PE.ASSURE = DR.TRVNUM
                    AND PE.BENEFICIAIRE = DR.TRVNUM
                    AND PE.TYPE_BENEFICIAIRE = 'T'
                    GROUP BY PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER
                    HAVING (COUNT(CASE WHEN PE.ETAT = 'E'THEN 1 END)> COUNT(CASE WHEN PE.ETAT = 'A'THEN 1 END))                     
                );
                             
                             
     --== 5     
     --DECLARATION D UNE  VARIABLE DE TYPE CURSEUR 
       R_RET             RETRAITE_A_EMETTRE%ROWTYPE;
       R_RET_BONIF_SUSPENDU RETRAITE_A_EMETTRE_BONIF_SUSP%ROWTYPE;
       C_RAP_RETRAITE    RAP_RETRAITE%ROWTYPE;
       C_CUMUL_IMPOT     CUMUL_IMPOT%ROWTYPE;
       
         
       V_PEUT_ETRE_EMIS     NUMBER(2);
       V_RETROUVE_RAPPEL    NUMBER;
       V_PEUT_ETRE_RAPPELER   NUMBER(2);
       
       V_RETROUVE_CUMUL_IMPOT   NUMBER;
       
       V_MONTANT_A_IMPOSER   NUMBER;
       V_MONTANT_IMPOT_IS_AN   NUMBER;
       V_MONTANT_IMPOT_CN_AN   NUMBER;
       V_MONTANT_IMPOT_IS   NUMBER;
       V_MONTANT_IMPOT_CN   NUMBER;

       V_MONTANT_IMPOT_IGR  NUMBER;
       
       V_INDICE_IMPOT_IS                                                NUMBER;
       V_INDICE_IMPOT_CN                                                NUMBER;
       V_INDICE_IMPOT_IGR                                              NUMBER;
       
       V_NOMBRE_PARTS_VALIDE                                        NUMBER;
       
       IND_COLLECT_EMISSION                     NUMBER:=1;
       IND_COLLECT_RAPPEL_RETRAITE              NUMBER:=1;
       IND_COLLECT_REJET_EMISSION               NUMBER:=1;
       IND_COLLECT_RET_AYANT_MOTIF              NUMBER:=1;
       IND_COLLECT_RET_DOS_MOTIF                NUMBER:=1;  
       IND_COLLECT_CUMUL_IMPOT                  NUMBER:=1;   
       IND_COLLECT_IMPOT                                NUMBER:=1;
       IND_COLLECT_BONIFICATION                          NUMBER:=1;              
       PARCOURS                                 NUMBER;
       V_DATE_BONIFICATION                      DATE;
               
       A                                                    BINARY_INTEGER;
       B                                                    BINARY_INTEGER;
       C                                                    BINARY_INTEGER;
       D                                                    BINARY_INTEGER;
       E                                                    BINARY_INTEGER;
       D                                                    BINARY_INTEGER;
       F                                                    BINARY_INTEGER;
       EMIS_IND                                 NUMBER:=2;
       V_NUMERO_EXECUTION                                                TEMPS_EXECUTION.NUMERO_EXECUTION%TYPE;
       V_MAJ_PRET                                                                NUMBER;
       
       V_MESSAGE_ERREUR_1                                             VARCHAR2(200);
             V_MESSAGE_ERREUR_2                                             VARCHAR2(200);
             V_MESSAGE_ERREUR_3                                             VARCHAR2(200);
             V_MESSAGE_ERREUR_4                                             VARCHAR2(200);
              
       --***********MONTANT RAPPEL BONIFICATION **********************---
       V_MONTANT_RAPPEL_BONIFICATION NUMBER:=0; -- PAR GBAÏ LE 19 12 2011
       V_LAST_EMIS_BONIFIEE DATE;-- PAR GBAÏ LE 19 12 2011
BEGIN    
    
    SELECT VALEUR_PARAMETRE_DATE INTO V_DATE_BONIFICATION
    FROM PARAMETRE_DIVERS
    WHERE CODE_PARAMETRE=50;

    V_NUMERO_EXECUTION:=NUMERO_DEXECUTION_EMISSION();
    IF P_EXPLOITATION = 1 THEN 
        
        ---POSITIONNEMENT DES MARQUEURS DE VISIBILITE POUR PRENDRE EN COMPTE LES EMISSIONS INDIVIDUELLES DE VIREMENT
            P_RAMASSAGE_VIREMENT_RETRAITE(P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);
                              
            IF P_AG24 = 0 THEN                  
                RAMASSAGE_CARTE_BANCAIRE(6,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26); 
                              
                P_RAMASSAGE_WARI(6,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);                               
            END IF;  
            
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            VALUES (V_NUMERO_EXECUTION,1,USER,'ASSURANCE VIEILLESSE-RETRAITE','REALISATION DES EMISSIONS.DEBUT DES OPERATIONS',SYSDATE,NULL,P_PERIODE,NULL,NULL);
            
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT V_NUMERO_EXECUTION,MAX(ACTION)+1 ,USER,'ASSURANCE VIEILLESSE-RETRAITE','EXECUTION PROCEDURE SUSPENSION EMISSION PARALLELE.SUSPENDRE LES ASSURES ET AYANTS DROTS EMIS EN MEME TEMPS',SYSDATE,NULL,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION;
            
    END IF;
    
        PROC_EMISSION_PARALLELE(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                              ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);                           --SUSPENSION DES ASSURES EMIS EN MEME TEMPS QUE LES YANTS DROITS

        IF P_EXPLOITATION=1 THEN 
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','EXECUTION PROCEDURE PROC_SUSPENSION_VIRT_RETRAITE.SUSPENDRE LES ASSURES ET AYANTS DROITS VIRES QUI N''ONT PAS PRODUIT DE CERTIFICAT DE VIE',SYSDATE,NULL,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
        END IF;
        
        PROC_SUS_RET_ASSURE_DECEDE(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                              ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);---AJOUTER LE 20 JUIN 2013 ::: POUR SUSPENDRE LES ASSURES POUR QUI UN CERTIFICAT DE DECES A ETE SAISI
                
        PROC_SUSPENSION_VIRT_RETRAITE(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                                      ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                      ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                                      ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);                   --SUSPENSION DES ASSURES VIRES SANS CERTIFICAT DE VIE ET ENTRETIEN 

IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','GENERATION DES RAPPELS DE BONIFICATION POUR BONIFICATION SUSPENDUE POUR NON FOURNITURE DU CERTIFICAT DE VIE ',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;

  /*****************************************************************************************/
    --GENERATION DES RAPPEL DE BONIFICATION SUITE A UNE SUSPENSION DE LA BONIFICATION 
    OPEN RETRAITE_A_EMETTRE_BONIF_SUSP/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                                      ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                      ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                      ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                                      ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)*/; 
    LOOP 
            FETCH RETRAITE_A_EMETTRE_BONIF_SUSP INTO R_RET_BONIF_SUSPENDU;  
            EXIT WHEN RETRAITE_A_EMETTRE_BONIF_SUSP%NOTFOUND;  
        PROC_BONIF_SUSPENDU(P_PERIODE,R_RET_BONIF_SUSPENDU.BENEFICIAIRE,R_RET_BONIF_SUSPENDU.BENEFICIAIRE,R_RET_BONIF_SUSPENDU.AYATYPE
                          ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                          ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                          ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);    --DESACTIVE LE 26 JUILLET 2011 POUR CORRECTION
        
    END LOOP;
    CLOSE RETRAITE_A_EMETTRE_BONIF_SUSP;
    /*****************************************************************************************/

IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN D''EXECUTION DES PROCEDURE DE SUSPENSION GLOBALE',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
                                                 
END IF;

--OUVERTURE DU CURSEUR DE SELECTION  DES RAPPELS DE RETRAITE ET CHARGEMENTS DE LA COLLECTION COLLECT_RAPPEL_RETRAITE     
OPEN RAP_RETRAITE/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                  ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                  ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                  ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)*/;
LOOP
    FETCH RAP_RETRAITE INTO C_RAP_RETRAITE;
    EXIT WHEN RAP_RETRAITE%NOTFOUND;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).TRVNUM            :=C_RAP_RETRAITE.ASSURE;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPBENEFICIAIRE   :=C_RAP_RETRAITE.BENEFICIAIRE;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPTYPEBENEF      :=C_RAP_RETRAITE.TYPEBENEF;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPMTRG           :=C_RAP_RETRAITE.RAPMTRG;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPMTRC           :=C_RAP_RETRAITE.RAPMTRC;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPRGSP           :=C_RAP_RETRAITE.RAPRGSP;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPRCSP           :=C_RAP_RETRAITE.RAPRCSP;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPIPRAO          :=C_RAP_RETRAITE.RAPIPRAO;
    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).IPRPAYS           :=C_RAP_RETRAITE.SREGCODE;
    
  IND_COLLECT_RAPPEL_RETRAITE:=IND_COLLECT_RAPPEL_RETRAITE+1;
  COLLECT_RAPPEL_RETRAITE.EXTEND();
END LOOP;
CLOSE RAP_RETRAITE;


IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN CHARGEMENT EN COLLECTION DES RAPELS DE RETRAITE DISPONIBLE POUR PAIEMENT',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;

END IF;

--OUVERTURE DU CURSEUR DE SELECTION  DES CUMULS D'IMPOTS ET CHARGEMENTS DE LA COLLECTION COLLECT_CUMUL_IMPOT     
OPEN CUMUL_IMPOT/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                  ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                  ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                  ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)*/;
LOOP
    FETCH CUMUL_IMPOT INTO C_CUMUL_IMPOT;
    EXIT WHEN CUMUL_IMPOT%NOTFOUND;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPTRVNUM                 :=C_CUMUL_IMPOT.IMPTRVNUM;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBENEFICIAIRE           :=C_CUMUL_IMPOT.IMPBENEFICIAIRE;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPTYPEBENEF              :=C_CUMUL_IMPOT.IMPTYPEBENEF;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCODE                   :=C_CUMUL_IMPOT.IMPCODE;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBASEIMPOSABLE          :=C_CUMUL_IMPOT.IMPBASEIMPOSABLE;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPPARTS                  :=C_CUMUL_IMPOT.IMPPARTS;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPMONTANT                :=C_CUMUL_IMPOT.IMPMONTANT;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCUMUL                  :=C_CUMUL_IMPOT.IMPCUMUL;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPMOISREFERENCE          :=C_CUMUL_IMPOT.IMPMOISREFERENCE;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPPERIODEMISSION         :=C_CUMUL_IMPOT.IMPPERIODEMISSION;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPDATESAIS               :=C_CUMUL_IMPOT.IMPDATESAIS;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPDATEMODIF              :=C_CUMUL_IMPOT.IMPDATEMODIF;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).DATEMIS                   :=C_CUMUL_IMPOT.DATEMIS;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPNBJFP                  :=C_CUMUL_IMPOT.IMPNBJFP;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCUMNBJFP               :=C_CUMUL_IMPOT.IMPCUMNBJFP;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCUMBASEIMPOSABLE  :=C_CUMUL_IMPOT.IMPCUMBASEIMPOSABLE;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPMONTANTAN         :=C_CUMUL_IMPOT.IMPMONTANTAN;
    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBASEIMPOSABLE_AN  :=C_CUMUL_IMPOT.IMPBASEIMPOSABLE_AN;
    
  IND_COLLECT_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT+1;
  COLLECT_CUMUL_IMPOT.EXTEND();
END LOOP;
CLOSE CUMUL_IMPOT;

IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN CHARGEMENT EN COLLECTION DES CUMULS D''IMPOTS',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    
    --FORMS_DDL('COMMIT');
END IF;

IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','SELECTION DE LA POPULATION A EMETTRE ET DEBUT DES EMISSIONS(BOUCLE PRINCIPALE,CONTROLES,CHARGEMENT EN COLLECTION...,)',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
--FORMS_DDL('COMMIT');

END IF;

--OUVERTURE DU CURSEUR DE SELECTION  DES RETRAITE A EMTTRE     
OPEN RETRAITE_A_EMETTRE/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_TYPEBEN
                  ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                  ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                  ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)*/;                                         
LOOP 
    BEGIN ----TEST EMISSION
    V_PEUT_ETRE_EMIS                :=0;
    V_PEUT_ETRE_RAPPELER        :=0;    
    
    V_MONTANT_A_IMPOSER         :=0;
    V_MONTANT_IMPOT_IS_AN        :=0;
    V_MONTANT_IMPOT_CN_AN        :=0;
    V_MONTANT_IMPOT_IS            :=0;    
    V_MONTANT_IMPOT_CN            :=0;    
    V_MONTANT_IMPOT_IGR            :=0;    
    
    V_INDICE_IMPOT_IS                :=0;
    V_INDICE_IMPOT_CN                :=0;
    V_INDICE_IMPOT_IGR            :=0;
    V_MONTANT_RAPPEL_BONIFICATION :=0; --AJOUTER LE 19 12 2011 PAR GBAÏ
   
        
    FETCH RETRAITE_A_EMETTRE INTO R_RET;  
    EXIT WHEN RETRAITE_A_EMETTRE%NOTFOUND;  
    
    --POUR TESTER QUE LORS D'UNE EMISSION INDIVIDUELLE LE CURSEUR NOUS RETOURNE UNE INFO
    --
    EMIS_IND:=EMIS_IND-1;                
      
      ---*******RECUPERATION DU MONTANT DU RAPPEL DE LA BONIFICATION 19 12 2011 PAR GBAÏ
            V_MONTANT_RAPPEL_BONIFICATION:=F_RAP_BONIFICATION(P_PERIODE,R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE
                  ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                  ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                  ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                  ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);  
            --:GLOBAL.MESSAGE1:=MSGBOX('CFG_INFORMATION','RECUPERATION V_MONTANT_RAPPEL_BONIFICATION = '||TO_CHAR(NVL(V_MONTANT_RAPPEL_BONIFICATION,0)));
            /*******************************************/        
            /****************POUR TEST******************/
            /*******************************************/            
            IF NVL(V_MONTANT_RAPPEL_BONIFICATION,0)>0 THEN
                    INSERT INTO CONCEP1.TEST_RAPPEL_BONIF_SUSPENDU( ASSURE , BENEFICIAIRE , TYPE_BENEFICIAIRE , PERIODE_EMISE , MONTANT_RAPPEL , RAPCODE )
                    VALUES(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE,P_PERIODE,NVL(V_MONTANT_RAPPEL_BONIFICATION,0),5);                
      END IF;      
      
        /*
        Set_Item_Property('cfg$bar.bt_annferm',LABEL,:global.mbt1);
        :cfg$bar.encours_texte:='ASSURE N°'||R_RET.BENEFICIAIRE;
        go_item('CFG$BAR.BT_BAR');       
        SYNCHRONIZE;
        */
                    
         --===========================================================================================
         --INFORMATION SUR L'ABSENCE D'EXTRAIT DE NAISSANCE  
   IF R_RET.SOLDE_PERIODE=0 THEN              
        IF R_RET.AGEE_DE<0 AND P_PLAGE_2 IS NULL  THEN
         
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                 :=R_RET.AGPAIEMENT;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                 :=R_RET.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE           :=R_RET.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE      :=R_RET.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION       :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE               :='CET(TE) ASSURE(E) N''A PAS D''EXTRAIT DE NAISSANCE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION             :='RETRAITE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1           :=NULL; 
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2           :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3           :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4           :=0;             
           
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
            
        END IF;    
                  
         --========================================================================
         --CONTROLE PERMETTANT LA REEMISSION DES PRESTATIONS UNIQUES           
         IF R_RET.CODEDROIT IS NOT NULL AND R_RET.SREGCODE IN (23,24,27) AND F_NOMBRE_EMISSION_VALIDE(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE,R_RET.SREGCODE) > 0  THEN   
            
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                 :=R_RET.AGPAIEMENT;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                 :=R_RET.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE           :=R_RET.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE      :=R_RET.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION       :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE               :='IMPOSSIBILITE D''EMETTRE PLUSIEURS FOIS UNE PRESTATION A PAIEMENT UNIQUE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION             :='RETRAITE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1           :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2           :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3           :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4           :=0;  
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;    
             COLLECT_REJET_EMISSION.EXTEND();    
             
             
            IF R_RET.AYATYPE!='T' THEN 
                    
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='IMPOSSIBILITE D''EMETTRE PLUSIEURS FOIS UNE PRESTATION A PAIEMENT UNIQUE';
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                 
                IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                COLLECT_RET_AYANT_MOTIF.EXTEND();
                
            ELSE 
                COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=35;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='IMPOSSIBILITE D''EMETTRE PLUSIEURS FOIS UNE PRESTATION A PAIEMENT UNIQUE';
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
             
              IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
              COLLECT_RET_DOS_MOTIF.EXTEND();
                
            END IF;                               
            
                            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                            PROC_RETRAIT_RAPPEL_BONIF(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE);                           
         END IF;
                                   
         --========================================================================
         --CONTROLE PERMETTANT D'EVITER D'EMETTRE LES ASSURES AYANT PLUS DE 25000 AU GUICHET           
         IF  (R_RET.MONTANT_PENSION>=25000 AND R_RET.LOCALITE<7000 AND R_RET.MODEPAIE IN (1,4) AND R_RET.SREGCODE NOT IN (23,24) AND R_RET.CODEDROIT IS NOT NULL ) THEN                  
            --IF F_DOSSIER_REACTIVE(R_RET.TRVNUM) != 1 THEN
            IF F_DOSSIER_REACTIVE(R_RET.TRVNUM, R_RET.BENEFICIAIRE ,R_RET.AYATYPE ) != 1 THEN
            
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                 :=R_RET.AGPAIEMENT;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                 :=R_RET.TRVNUM;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=NULL;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE           :=R_RET.BENEFICIAIRE;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE      :=R_RET.AYATYPE;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION       :=P_PERIODE;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE               :='L''ASSURE A UNE PENSION SUPERIEURE A 25000 ET N''A PAS DE COMPTE BANCAIRE';
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION             :='RETRAITE';
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1           :=NULL;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2           :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3           :=0;
                 COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4           :=0;    
                    
                 V_PEUT_ETRE_EMIS:=1;
                 IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;    
                 COLLECT_REJET_EMISSION.EXTEND(); 
                     
                IF R_RET.AYATYPE!='T' THEN 
                                
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='LE BENEFICIAIRE A UNE PENSION SUPERIEURE A 25000 ET N''A PAS DE COMPTE BANCAIRE';
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                             
                    IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                    COLLECT_RET_AYANT_MOTIF.EXTEND();
                            
                ELSE 
                    COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=35;
                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='L''ASSURE A UNE PENSION SUPERIEURE A 25000 ET N''A PAS DE COMPTE BANCAIRE';
                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
                         
                  IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                  COLLECT_RET_DOS_MOTIF.EXTEND();
                            
                END IF;                  
                 
                --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                PROC_RETRAIT_RAPPEL_BONIF(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE); 
                                                                     
            END IF;                 
         END IF;                                             
                  
                                                                    
        --===========================================================================================
        --CONTROLE QUE LA CONJOINTE PEUT TOUJOURS EMISE (VERIFICATION DE LA DATE D'ARRET RELATIF AU ANTICIPE) 
         /*
           IF (R_RET.AYATYPE='C' 
             AND R_RET.DATE_ARRET IS NOT NULL 
             AND  R_RET.DATE_ARRET < P_PERIODE AND R_RET.SREGCODE <> 31) THEN  
             */  
         IF (R_RET.AYATYPE='C' 
             AND (PACK_REFORME2009.F_CONTROL_ENF_CHARGE( R_RET.TRVNUM , R_RET.BENEFICIAIRE , R_RET.AYATYPE , R_RET.DREDATEDEPOT , P_PERIODE) != 'TRUE' 
                 AND
                 PACK_REFORME2009.F_AGE_REQUIS(R_RET.DREDATEDEPOT, R_RET.AYATYPE ,R_RET.SREGCODE , 'MIN') > PACK_REFORME2009.F_AGE_PERSONNE (R_RET.TRVNUM , R_RET.BENEFICIAIRE , R_RET.AYATYPE,SYSDATE))
             AND R_RET.SREGCODE <> 31) THEN 
                                  
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                  :=R_RET.AGPAIEMENT;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                  :=R_RET.TRVNUM;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE         :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_RET.BENEFICIAIRE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE       :=R_RET.AYATYPE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                :='SUSPENSION DE PAIEMENT CAR LA CONJOINTE N''A PAS L''AGE REQUIS ET N''A PLUS D''ENFANT A CHARGE';
            --COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE              :='SUSPENSION DE PAIEMENT CAR LA CONJOINTE A MOINS DE 50 ANS ET N''A PLUS D''ENFANT A CHARGE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                  :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;             

            IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
            COLLECT_REJET_EMISSION.EXTEND();
                              
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. SUSPENSION DE PAIEMENT CAR LA CONJOINTE N''A PAS L''AGE REQUIS ET N''A PLUS D''ENFANT A CHARGE ';
            --COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. SUSPENSION DE PAIEMENT CAR LA CONJOINTE A MOINS DE 50 ANS ET N''A PLUS D''ENFANT A CHARGE ';
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
             
            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
            COLLECT_RET_AYANT_MOTIF.EXTEND();
            V_PEUT_ETRE_EMIS:=1;
            
                                --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                                PROC_RETRAIT_RAPPEL_BONIF(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE);                                         
            
         END IF;
          --===========================================================================================                              
          
          --===========================================================================================
        --CONTROLE QUE LA CONJOINTE A FOURNIT UN CERTIFICAT DE NON REMARIAGE
         
           IF (R_RET.AYATYPE='C' AND R_RET.NON_REMARIAGE =0 /*AND SYSDATE>TO_DATE('01/01/2009','DD/MM/YYYY') */) THEN    
           
            IF F_DOSSIER_REACTIVE(R_RET.TRVNUM, R_RET.BENEFICIAIRE, R_RET.AYATYPE) != 1 THEN
                     
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                  :=R_RET.AGPAIEMENT;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                  :=R_RET.TRVNUM;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE         :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_RET.BENEFICIAIRE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE       :=R_RET.AYATYPE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                :='SUSPENSION DE PAIEMENT CAR LA CONJOINTE N''A PAS DE CERTIFICAT DE NON REMARIAGE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                  :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;             

            IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
            COLLECT_REJET_EMISSION.EXTEND();
          
                    
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. SUSPENSION DE PAIEMENT CAR LA CONJOINTE N''A PAS DE CERTIFICAT DE NON REMARIAGE';
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
             
            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
            COLLECT_RET_AYANT_MOTIF.EXTEND();
            V_PEUT_ETRE_EMIS:=1;
            
                            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                            PROC_RETRAIT_RAPPEL_BONIF(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE);                                    
            END IF;
         END IF;
          --===========================================================================================
                             
          
         --===============================================================================================
         --SUSPENSION DES AYANTS DROIT MAL RATTACHE AFIN DE FORCER LA CORRECTION DES MAUVAIS RATTACHEMENTS 
         --DES AYANTS DROITS 
         IF R_RET.TRVNUM=111111111111 THEN 
            
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                  :=R_RET.AGPAIEMENT;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                  :=R_RET.TRVNUM;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE         :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_RET.BENEFICIAIRE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE       :=R_RET.AYATYPE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                :='CET AYANT DROIT EST RATTACHE A UN ASSURE FICTIF';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                  :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;             

            IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
            COLLECT_REJET_EMISSION.EXTEND();
            
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. CET AYANT DROIT EST RATTACHE A UN ASSURE FICTIF ';
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;           
             
            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
            COLLECT_RET_AYANT_MOTIF.EXTEND();                                   
            V_PEUT_ETRE_EMIS:=1;
            
                            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                            PROC_RETRAIT_RAPPEL_BONIF(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE);                            
            
         END IF;
         
                  
         
         --CONTROLE DE L'AGE DE L'ORPHELIN 
        --===========================================================================================
        --L'ORPHELIN AYANT PLUS DE 16 NE PEUT ETRE EMIS
        --L'ORPHELIN N'AYANT PAS D'EXTRAIT NE PEUT ETRE EMIS
         
         --IF (R_RET.AYATYPE ='E' AND (R_RET.AGEE_DE > 16 OR R_RET.AGEE_DE <0)) THEN
             IF (R_RET.AYATYPE ='E' AND (R_RET.AGEE_DE > 21 OR R_RET.AGEE_DE <0)) THEN  
          
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                  :=R_RET.AGPAIEMENT;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                  :=R_RET.TRVNUM;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE         :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_RET.BENEFICIAIRE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE       :=R_RET.AYATYPE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                :='L''ORPHELIN N''A PAS D''EXTRAIT DE NAISSANCE OU A PLUS DE 21 ANS';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                  :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
            COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;            

            IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
            COLLECT_REJET_EMISSION.EXTEND();                 
              
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=42;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. L''ORPHELIN N''A PAS D''EXTRAIT DE NAISSANCE OU A PLUS DE 21 ANS';
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;           
             
             IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
             COLLECT_RET_AYANT_MOTIF.EXTEND();                       
             V_PEUT_ETRE_EMIS:=1;
             
            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
            DELETE FROM CONCEP1.RAPPEL_RETRAITE
            WHERE TRVNUM = R_RET.TRVNUM
            AND RAPBENEFICIAIRE = R_RET.BENEFICIAIRE
            AND RAPTYPEBENEF = R_RET.AYATYPE
            AND RAPCODE = 5
            AND DATEMIS IS NULL;               
             
         END IF;
        --===========================================================================================
        
        
        
        --===========================================================================================
        --CONTROLE DE COGERANCE DU CODE AGENCE PAR RAPPORT AU CODE LOCALITE POUR LES ASSURES DE L'APPEX
        IF ((R_RET.AGPAIEMENT=24 AND R_RET.LOCALITE<7000) OR (R_RET.AGPAIEMENT!=24 AND R_RET.LOCALITE>7000)) THEN 
                      
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                   :=R_RET.AGPAIEMENT;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                   :=R_RET.TRVNUM;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE          :=NULL;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE             :=R_RET.BENEFICIAIRE;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE        :=R_RET.AYATYPE;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION         :=P_PERIODE;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                 :='L''AGENCE DE PAIEMENT NE CONCORDE PAS AU CODE LOCALITE';
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                   :=NULL;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION               :='RETRAITE';
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1             :=NULL;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2             :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3             :=0;
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4             :=0;    
            
           V_PEUT_ETRE_EMIS:=1;
           IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;        
           COLLECT_REJET_EMISSION.EXTEND();   
           
           
            IF R_RET.AYATYPE!='T' THEN 
                    
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='L''AGENCE DE PAIEMENT NE CONCORDE PAS AU CODE LOCALITE';
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                 
                IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                COLLECT_RET_AYANT_MOTIF.EXTEND();
                
            ELSE 
                COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=35;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='L''AGENCE DE PAIEMENT NE CONCORDE PAS AU CODE LOCALITE';
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
             
              IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
              COLLECT_RET_DOS_MOTIF.EXTEND();
                
            END IF;             
           
            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
            DELETE FROM CONCEP1.RAPPEL_RETRAITE
            WHERE TRVNUM = R_RET.TRVNUM
            AND RAPBENEFICIAIRE = R_RET.BENEFICIAIRE
            AND RAPTYPEBENEF = R_RET.AYATYPE
            AND RAPCODE = 5
            AND DATEMIS IS NULL;             
                      
        END IF; 
        --===========================================================================================
        
                
         --===========================================================================================
        --CONTROLE DU NOMBRE D'EMISSIONS NON PAYEES
        /* AJOUTE LE 07 JUIN 2011 POUR SUSPENDRE AUTOMATIQUEMENT LES BENEFICIAIRES QUI N'ONT PAS PERCUS 
           LEURS 2 DERNIERS TRIMESTRES POUR L'APPEX OU LEURS 2 DERNIERS MOIS POUR LES AUTRES AGENCES */
        IF P_EXPLOITATION=1 THEN  
            
                   --IF (R_RET.A_SUSPENDRE>2) THEN
                   IF (R_RET.A_SUSPENDRE=2) THEN        
                             
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                  :=R_RET.AGPAIEMENT;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                  :=R_RET.TRVNUM;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE         :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_RET.BENEFICIAIRE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE       :=R_RET.AYATYPE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                  :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;             
        
                    IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
                    COLLECT_REJET_EMISSION.EXTEND();
                    V_PEUT_ETRE_EMIS:=1;
                    
                                --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                                DELETE FROM CONCEP1.RAPPEL_RETRAITE
                                WHERE TRVNUM = R_RET.TRVNUM
                                AND RAPBENEFICIAIRE = R_RET.BENEFICIAIRE
                                AND RAPTYPEBENEF = R_RET.AYATYPE
                                AND RAPCODE = 5
                                AND DATEMIS IS NULL;                      
                    
                    
                                IF R_RET.AYATYPE!='T' THEN 
                                        
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=24;
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                                    COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                                     
                                    IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                                    COLLECT_RET_AYANT_MOTIF.EXTEND();
                                    
                                ELSE 
                                    COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
                                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=24;
                                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
                                  COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
                                 
                                  IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                                  COLLECT_RET_DOS_MOTIF.EXTEND();
                                    
                                END IF;
                    
                      END IF;
         END IF;
          --===========================================================================================
        
                                
        --===========================================================================================
        --RECHERCHER A PARTIR DE LA COLLECTION COLLECT_RAPPEL_RETRAITE LE MONTANT DU RAPPEL DU BENEFICIAIRE EN COURS DE TRAITEMENT 
         IND_COLLECT_RAPPEL_RETRAITE:=1;
         V_PEUT_ETRE_RAPPELER:=1;
         V_RETROUVE_RAPPEL:=0;
         WHILE ( IND_COLLECT_RAPPEL_RETRAITE<=COLLECT_RAPPEL_RETRAITE.COUNT)  LOOP
                IF  (    COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).TRVNUM=R_RET.TRVNUM
                     AND COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPBENEFICIAIRE=R_RET.BENEFICIAIRE 
                     AND COLLECT_RAPPEL_RETRAITE(IND_COLLECT_RAPPEL_RETRAITE).RAPTYPEBENEF=R_RET.AYATYPE ) THEN
                                           
                     V_RETROUVE_RAPPEL:=IND_COLLECT_RAPPEL_RETRAITE;
                     V_PEUT_ETRE_RAPPELER:=0;
                     EXIT;
                END IF;                     
                     IND_COLLECT_RAPPEL_RETRAITE:=IND_COLLECT_RAPPEL_RETRAITE+1;
         END LOOP;   
         
          V_MONTANT_A_IMPOSER:=0;
          IF V_RETROUVE_RAPPEL!=0 THEN   
          
              IF     COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRGSP =0  THEN 
                        
                       V_MONTANT_A_IMPOSER :=(R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO+R_RET.RETMONTRAPPEL+R_RET.REVALORISATION /*R_RET.REVALORISATION AJOUTE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRG
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRC
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRGSP
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRCSP
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPIPRAO  
                                                                );
              ELSE 
                  V_MONTANT_A_IMPOSER :=(R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO+R_RET.RETMONTRAPPEL+R_RET.REVALORISATION /*R_RET.REVALORISATION AJOUTE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRG
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRC
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRCSP
                                                                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPIPRAO  
                                                                );
              END IF;
              
                                                                        
          ELSE 
               V_MONTANT_A_IMPOSER :=(R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO+R_RET.RETMONTRAPPEL+R_RET.REVALORISATION); /*R_RET.REVALORISATION AJOUTE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
          END IF   ;
          
        --===========================================================================================
        
                
                 --===========================================================================================
                 /*
                 BLOC DE CALCUL DES IMPOTS.
                 TEST SUR LE MONTANT MENSUEL DE L'ASSURE ,DE SA RESIDENCE FISCALE
                 DE DE NON IMPOSITION DES PAIEMENTS A CARACTERES UNIQUES                 
                 */
         IF(R_RET.AYATYPE='T' 
               AND (R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO)>100000 
               --AND R_RET.RESIDENCE_FISCALE=0 /*MIS EN COMMANTAIRE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
               AND V_PEUT_ETRE_EMIS=0 AND R_RET.SREGCODE NOT IN (23,24,27)
               ) THEN        
                       
                                         
                        --BLOC DE CALCUL IMPOT IS
                        --RECHERCHER A PARTIR DE LA COLLECTION COLLECT_CUMUL_IMPOT LE CUMUL DES IS,LE CUMUL DE NOMBRE DE JOURS FISCAUX,LE CUMUL DE BASE IMPOSABLES
                         IND_COLLECT_CUMUL_IMPOT:=1;         
                         V_RETROUVE_CUMUL_IMPOT:=0;
                         WHILE ( IND_COLLECT_CUMUL_IMPOT<=COLLECT_CUMUL_IMPOT.COUNT)  LOOP
                                
                                IF  (    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPTRVNUM=R_RET.TRVNUM
                                     AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBENEFICIAIRE=R_RET.BENEFICIAIRE 
                                     AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCODE=3) THEN
                                                           
                                     V_RETROUVE_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT;
                                     EXIT;
                                END IF;                     
                                     IND_COLLECT_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT+1;
                         END LOOP;                           
                                                                               
                         IF V_RETROUVE_CUMUL_IMPOT!=0 THEN                             
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMUL;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMNBJFP;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMBASEIMPOSABLE;
                         ELSE 
                             COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=0;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=0;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=0;
                         END IF;
                         
                        COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                        :=R_RET.TRVNUM;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE            :=R_RET.TRVNUM;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF                  :='T';
                        
                        IF  TO_NUMBER(TO_CHAR(P_PERIODE,'YYYY'))>2011 THEN
                        PROC_IMPOT_IS_2(P_PERIODE,V_MONTANT_A_IMPOSER,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                            );
                                
                        ELSE
                            
                        PROC_IMPOT_IS_ANC(P_PERIODE,V_MONTANT_A_IMPOSER,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                            );

                        END IF;
                        
                                V_MONTANT_IMPOT_IS            :=COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT;
                                V_MONTANT_IMPOT_IS_AN        :=COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN;
                            V_INDICE_IMPOT_IS                :=IND_COLLECT_IMPOT;
                            IND_COLLECT_IMPOT:=IND_COLLECT_IMPOT+1;    
                            COLLECT_IMPOT.EXTEND();                                
                                --FIN DE BLOC DE CALCUL IMPOT IS
                                                                                                   
                         
                         --BLOC DE CALCUL IMPOT CN
                         --RECHERCHER A PARTIR DE LA COLLECTION COLLECT_CUMUL_IMPOT LE CUMUL DES CN,LE CUMUL DE NOMBRE DE JOURS FISCAUX,LE CUMUL DE BASE IMPOSABLE
                         IND_COLLECT_CUMUL_IMPOT:=1;         
                         V_RETROUVE_CUMUL_IMPOT:=0;
                         WHILE ( IND_COLLECT_CUMUL_IMPOT<=COLLECT_CUMUL_IMPOT.COUNT)  LOOP
                                
                                IF  (    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPTRVNUM=R_RET.TRVNUM
                                     AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBENEFICIAIRE=R_RET.BENEFICIAIRE
                                     AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCODE=1) THEN
                                                           
                                     V_RETROUVE_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT;
                                     EXIT;
                                END IF;                     
                                     IND_COLLECT_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT+1;
                         END LOOP;
                                                                                   
                         IF V_RETROUVE_CUMUL_IMPOT!=0 THEN                             
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMUL;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMNBJFP;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMBASEIMPOSABLE;
                         ELSE 
                             COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=0;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=0;
                                COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=0;
                         END IF;
                         
                         COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                          :=R_RET.TRVNUM;
                                 COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE              :=R_RET.TRVNUM;
                                 COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF                  :='T';
                                
                                IF  TO_NUMBER(TO_CHAR(P_PERIODE,'YYYY'))>2011 THEN
                        PROC_IMPOT_CN_2(P_PERIODE,V_MONTANT_A_IMPOSER,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                            );
                                ELSE
                        PROC_IMPOT_CN_ANC(P_PERIODE,V_MONTANT_A_IMPOSER,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                            );
                                END IF;
                                
                                
                                
                                V_MONTANT_IMPOT_CN            :=COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT;
                                V_MONTANT_IMPOT_CN_AN        :=COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN; 
                                
                            V_INDICE_IMPOT_CN                :=IND_COLLECT_IMPOT;
                            IND_COLLECT_IMPOT:=IND_COLLECT_IMPOT+1;    
                                COLLECT_IMPOT.EXTEND();                     
                        --FIN DE BLOC DE CALCUL IMPOT CN
         
                        
                        
                        --BLOC DE CALCUL IMPOT IGR
                        --IF  R_RET.AGE_IMPOT<70 THEN  /*MIS EN COMMANTAIRE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
                            
                            --RECHERCHER A PARTIR DE LA COLLECTION COLLECT_CUMUL_IMPOT LE CUMUL DES IGR,LE CUMUL DE NOMBRE DE JOURS FISCAUX,LE CUMUL DE BASE IMPOSABLE
                             IND_COLLECT_CUMUL_IMPOT:=1;         
                             V_RETROUVE_CUMUL_IMPOT:=0;
                             WHILE ( IND_COLLECT_CUMUL_IMPOT<=COLLECT_CUMUL_IMPOT.COUNT)  LOOP
                                    
                                    IF  (    COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPTRVNUM=R_RET.TRVNUM
                                         AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPBENEFICIAIRE=R_RET.BENEFICIAIRE
                                         AND COLLECT_CUMUL_IMPOT(IND_COLLECT_CUMUL_IMPOT).IMPCODE=2) THEN
                                                               
                                         V_RETROUVE_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT;
                                         EXIT;
                                    END IF;                     
                                         IND_COLLECT_CUMUL_IMPOT:=IND_COLLECT_CUMUL_IMPOT+1;
                             END LOOP;
                             
                               IF V_RETROUVE_CUMUL_IMPOT!=0 THEN                             
                                        COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMUL;
                                        COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMNBJFP;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPCUMBASEIMPOSABLE;
                                    
                                        IF R_RET.NOMBRE_PARTS>COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPPARTS THEN 
                                            COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS    :=R_RET.NOMBRE_PARTS;
                                        ELSE 
                                            COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS    :=COLLECT_CUMUL_IMPOT(V_RETROUVE_CUMUL_IMPOT).IMPPARTS;
                                        END IF;
                                    
                             ELSE 
                                 COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                            :=0;
                                        COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP               :=0;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE  :=0;
                                    COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS                            :=R_RET.NOMBRE_PARTS;
                             END IF;
                         
                             COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                          :=R_RET.TRVNUM;
                                     COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE              :=R_RET.TRVNUM;
                                     COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF                  :='T';
                             
                             IF  TO_NUMBER(TO_CHAR(P_PERIODE,'YYYY'))>2011 THEN
                             PROC_IMPOT_IGR_2(P_PERIODE,V_MONTANT_A_IMPOSER,V_MONTANT_IMPOT_CN_AN,V_MONTANT_IMPOT_IS_AN
                                                                                                                   ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                                );
                             ELSE 
                             PROC_IMPOT_IGR_ANC(P_PERIODE,V_MONTANT_A_IMPOSER,V_MONTANT_IMPOT_CN_AN,V_MONTANT_IMPOT_IS_AN
                                                                                                                   ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTRVNUM                ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBENEFICIAIRE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPTYPEBENEF        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCODE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPARTS
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMUL                        
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMOISREFERENCE,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPPERIODEMISSION
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATESAIS            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPDATEMODIF
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).DATEMIS                    ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPNBJFP
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMNBJFP            ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPCUMBASEIMPOSABLE
                                                                                                                  ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANTAN        ,COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPBASEIMPOSABLE_AN
                                                                );
                                 
                             END IF;
                                    V_MONTANT_IMPOT_IGR            :=COLLECT_IMPOT(IND_COLLECT_IMPOT).IMPMONTANT;                                                            
                                    V_INDICE_IMPOT_IGR            :=IND_COLLECT_IMPOT;
                                    IND_COLLECT_IMPOT:=IND_COLLECT_IMPOT+1;    
                                    COLLECT_IMPOT.EXTEND();                     
                        --END IF; /*MIS EN COMMANTAIRE LE 19 12 2011 LORS DES TRAVAUX DE COORECTION D'IMPOT*/
                        
                        --FIN DE BLOC DE CALCUL IMPOT IGR  
               
               
         END IF;
         --FIN DE BLOC DE CALCUL DES IMPOTS 
        --===========================================================================================                                  
                        
                
        --CONTROLE DU NET A PAYER
        --===========================================================================================
        --
        --CE CONTROLE PERMET D'EVITER D'EMETTRE TOUT ASSURE DONT LE NET A PAYER SERAIT NEGATIF
        --    
        IF V_RETROUVE_RAPPEL!=0 THEN 
        
             IF (R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO+R_RET.RETMONTRAPPEL
                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRG
                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRC
                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRGSP
                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRCSP
                +COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPIPRAO    
                -R_RET.PRETS+R_RET.BONIFICATION
                -V_MONTANT_IMPOT_IS-V_MONTANT_IMPOT_CN-V_MONTANT_IMPOT_IGR
                +NVL(V_MONTANT_RAPPEL_BONIFICATION,0) /*AJOUT DU MONTANT DU RAPPEL PAR GBAÏ 19 12 2011*/
                )<=0 THEN 
                                
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                 :=R_RET.AGPAIEMENT;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                 :=R_RET.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE           :=R_RET.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE      :=R_RET.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION       :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE               :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION              :='RETRAITE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1           :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2           :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3           :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4           :=0;            
                     
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();             
                     
             V_PEUT_ETRE_EMIS:=1;
             V_PEUT_ETRE_RAPPELER:=1;
             
            IF R_RET.AYATYPE!='T' THEN 
                    
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                 
                IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                COLLECT_RET_AYANT_MOTIF.EXTEND();
                
            ELSE 
                COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=35;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
             
              IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
              COLLECT_RET_DOS_MOTIF.EXTEND();
                
            END IF;                          
                                
                            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                            DELETE FROM CONCEP1.RAPPEL_RETRAITE
                            WHERE TRVNUM = R_RET.TRVNUM
                            AND RAPBENEFICIAIRE = R_RET.BENEFICIAIRE
                            AND RAPTYPEBENEF = R_RET.AYATYPE
                            AND RAPCODE = 5
                            AND DATEMIS IS NULL;                                  
                                
                                 
            ELSE 
            COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).DATEMIS:=SYSDATE;            
            END IF;         
                 
        ELSE           
             
            IF (R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.MONTANT_IPRAO+R_RET.RETMONTRAPPEL+R_RET.BONIFICATION
                  -V_MONTANT_IMPOT_IS-V_MONTANT_IMPOT_CN-V_MONTANT_IMPOT_IGR
                  +NVL(V_MONTANT_RAPPEL_BONIFICATION,0) /*AJOUT DU MONTANT DU RAPPEL PAR GBAÏ 19 12 2011*/
                  )<=0 THEN 
                  
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                 :=R_RET.AGPAIEMENT;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                 :=R_RET.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE           :=R_RET.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE      :=R_RET.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION       :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE               :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION             :='RETRAITE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1           :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2           :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3           :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4           :=0;        
                     
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;                
             COLLECT_REJET_EMISSION.EXTEND();                                          
             V_PEUT_ETRE_EMIS:=1;
             V_PEUT_ETRE_RAPPELER:=1;  
             
            IF R_RET.AYATYPE!='T' THEN 
                    
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=35;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;
                 
                IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                COLLECT_RET_AYANT_MOTIF.EXTEND();
                
            ELSE 
                COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                    :=R_RET.TRVNUM;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                 :=35;
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                  :='LE NET A PAYER EST NEAGTIF OU EGALE A 0.REVOIR LA GESTION DES PRETS';
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                 :=SYSDATE;                    
              COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                  :=NULL;
             
              IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
              COLLECT_RET_DOS_MOTIF.EXTEND();
                
            END IF;             
             
                            --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                            DELETE FROM CONCEP1.RAPPEL_RETRAITE
                            WHERE TRVNUM = R_RET.TRVNUM
                            AND RAPBENEFICIAIRE = R_RET.BENEFICIAIRE
                            AND RAPTYPEBENEF = R_RET.AYATYPE
                            AND RAPCODE = 5
                            AND DATEMIS IS NULL;               
                               
            END IF;
       
        END IF;
        --===========================================================================================                
        
        IF V_PEUT_ETRE_EMIS=0 THEN 
                    --AJOUT DANS LA COLLECTION  COLLECT_EMISSION
                    --===============================
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ASSURE                                            :=R_RET.TRVNUM;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).BENEFICIAIRE                                      :=R_RET.BENEFICIAIRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).TYPE_BENEFICIAIRE                                 :=R_RET.AYATYPE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_SINISTRE_DOSSIER                           :=R_RET.TRVNUM;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ENTREPRISE                                        :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_SOUS_REGIME                                  :=NVL(R_RET.SREGCODE,20);
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ETAT                                              :='E';
                                                             
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).DIRECTION                                         :=R_RET.DRPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AGENCE_EMISSION                                   :=R_RET.AGPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AGENCE_PAIEMENT                                   :=R_RET.AGPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_BANQUE                                       :=R_RET.BANQUE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_SUCCURSALE                                   :=R_RET.SUCCURSALE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_COMPTE                                     :=R_RET.COMPTE_BANCAIRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CLE_RIB                                           :=R_RET.CLE_RIB;       --NE PAS OUBLIER 
                    
                    IF         NVL(R_RET.SREGCODE,20) NOT IN (27,23) THEN 
                        
                        /*IL A DECIDE CE QUI SUIT LORS DES TRAVAUX DE PAIEMENT GUICHET CNCE :
                             - LES EMISSIONS INDIVIDUELLES ( P_EXPLOITATION=0 ) PORTENT LE MODE DE PAIEMENT CHEQUE
                             - LES PREMIERS DROITS (R_RET.CODEDROIT IS NULL) PORTENT LE MODE DE PAIEMENT CHEQUE                        
                        */
                        
                      /*IF  ( (R_RET.MONTANT_PENSION)>=25000 AND R_RET.LOCALITE<7000  
                               AND R_RET.MODEPAIE!=1 
                               AND R_RET.CODEDROIT IS NULL ) THEN */    /*MIS EN COMMENTAIRE LE 13 JUIN 2011 LORS DES TRAVAUX DE PAIEMENT GUICHET CNCE*/ 
                      IF ( (P_EXPLOITATION=0 AND R_RET.MODEPAIE=1)  OR (P_EXPLOITATION=1 AND R_RET.CODEDROIT IS NULL) ) AND R_RET.LOCALITE<7000 THEN        /*CONDITION AJOUTEE LE 13 JUIN 2011 LORS DES TRAVAUX DE PAIEMENT GUICHET CNCE  */  
                                                          
                               COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT                            :=4;                               
                      ELSE 
                               COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT                              :=R_RET.MODEPAIE;
                      END IF;
                      
                    ELSIF NVL(R_RET.SREGCODE,20)=27 THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT                                                             :=44;
                    ELSIF NVL(R_RET.SREGCODE,20)=23 THEN                                
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT                                                         :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_BANQUE                                   :=9999;
                    END IF;
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_LOCALITE                                     :=R_RET.LOCALITE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_COMMUNE                                      :=R_RET.COMMUNE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_QUARTIER                                     :=R_RET.QUARTIER;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).DATE_EMISSION                                     :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).EMIS_PAR                                          :=USER;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PERIODE_EMISE                                     :=P_PERIODE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ADRESSE                                           :=R_RET.ADRESSE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_DORDRE                                     :=R_RET.NUMERO_ORDRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).MONTANT_RETENUE                                   :=R_RET.PRETS;
                    
                    IF V_INDICE_IMPOT_IGR!=0 THEN 
                    
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IGR                                    :=COLLECT_IMPOT(V_INDICE_IMPOT_IGR).IMPCODE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IGR                          :=COLLECT_IMPOT(V_INDICE_IMPOT_IGR).IMPBASEIMPOSABLE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_NOMBRE_PARTS                                :=COLLECT_IMPOT(V_INDICE_IMPOT_IGR).IMPPARTS;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IGR                                 :=COLLECT_IMPOT(V_INDICE_IMPOT_IGR).IMPMONTANT;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IGR                          :=COLLECT_IMPOT(V_INDICE_IMPOT_IGR).IMPCUMUL;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IGR                          :=0;
                    ELSE
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IGR                                    :=2;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IGR                          :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_NOMBRE_PARTS                                :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IGR                                 :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IGR                          :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IGR                          :=0;
                    END IF;
                    
                    IF  V_INDICE_IMPOT_CN!=0 THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CN                                     :=COLLECT_IMPOT(V_INDICE_IMPOT_CN).IMPCODE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CN                           :=COLLECT_IMPOT(V_INDICE_IMPOT_CN).IMPBASEIMPOSABLE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CN                                  :=COLLECT_IMPOT(V_INDICE_IMPOT_CN).IMPMONTANT;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CN                           :=COLLECT_IMPOT(V_INDICE_IMPOT_CN).IMPCUMUL;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_CN                           :=0;
                    ELSE
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CN                                     :=1;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CN                           :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CN                                  :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CN                           :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_CN                           :=0;
                    END IF;
                    
                    IF V_INDICE_IMPOT_IS!=0 THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IS                                     :=COLLECT_IMPOT(V_INDICE_IMPOT_IS).IMPCODE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IS                           :=COLLECT_IMPOT(V_INDICE_IMPOT_IS).IMPBASEIMPOSABLE;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IS                                  :=COLLECT_IMPOT(V_INDICE_IMPOT_IS).IMPMONTANT;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IS                           :=COLLECT_IMPOT(V_INDICE_IMPOT_IS).IMPCUMUL;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IS                           :=0;
                    ELSE 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IS                                     :=3;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IS                           :=0;                    
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IS                                  :=0;                    
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IS                           :=0;                    
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IS                           :=0;                    
                    END IF;
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CNR                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CNR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CNR                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CNR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CNS                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CNS                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CNS                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CNS                          :=0;
                    
                    
                    --CETTE MODIFICATION A ETE APPORTEE LE 19/04/2008 AFIN DE PRENDRE EN COMPTE LA PENSION MINIMALE 
                    IF R_RET.AYATYPE!='T' THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRGRET                                  :=R_RET.MONTANT_NORMAL+R_RET.MONTANT_COMP+R_RET.REVALORISATION;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRCRET                                  :=0;
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTIPRAORET                               :=R_RET.MONTANT_IPRAO;
                    ELSE 
                        IF NVL(R_RET.SREGCODE,20) NOT IN (27,23,24) THEN 
                            
                            IF P_PERIODE>TO_DATE('01/01/2008','DD/MM/YYYY') THEN 
                                COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRGRET                                  :=R_RET.MONTANT_NORMAL+R_RET.RETMONTRAPPEL+NVL(R_RET.MONTANT_COMP,0)+R_RET.REVALORISATION;
                                COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRCRET                                  :=0;
                            ELSE
                                COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRGRET                                  :=R_RET.MONTANT_NORMAL+R_RET.RETMONTRAPPEL+NVL(R_RET.MONTANT_COMP,0);
                                COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRCRET                                  :=0;
                            END IF;
                            
                                
                        ELSE
                            COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRGRET                                  :=R_RET.MONTANT_NORMAL+R_RET.RETMONTRAPPEL;
                            COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRCRET                                  :=NVL(R_RET.MONTANT_COMP,0);
                        END IF;
                        
                        
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTIPRAORET                               :=R_RET.MONTANT_IPRAO;
                    END IF;
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIGUICHEPAIRET                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_RETNUMRETRAITE                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMICAISSE                                     :=R_RET.DRECAISSE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIBONIFICATION                               :=R_RET.BONIFICATION;
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION                            :=0; --PAR GBAÏ 19 12 2011
                    
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIMTPENSION                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIMTMAJORATION                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMICOMPMAJORAT                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPARRERAGE4                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT4                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION1                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT1                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPCOMPMAJO1                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION2                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT2                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT3                                :=0;                                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIGUICHERT                                   :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRACHAT                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_NUMGRAVE                                      :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_PERIODE                                       :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMIPERIODE                                     :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMIMONTANT                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_PJCODE                                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_PJDATEETABLIS                                  :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_NUMGUICHET                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_TYPEINTERESSE                                  :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_NBMOISRAPPEL                                   :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_MONTANTRAPPEL                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATFRACT                                       :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMITYPEGASA                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_CODEORD                                        :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_CODEAC                                         :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATEORD                                        :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATEAC                                         :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).APERIODIQUE_PF_EMIMONTANT                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).APERIODIQUE_PF_MONTANTRAPPEL                      :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_PLEINMONTANT                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_DEMIMONTANT                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_DEUXTMONTANT                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).FMPHAT_FM_MONTANT_EXPOSE                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).FMPHAT_FM_MONTANT_ACCEPTE                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMIMONTPRET                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMIGUICHEPAIPRET                             :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_PRETADRESSEBENEF                             :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMICAISSE                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMICODEPRET                                  :=0;
                    
                    --IF :BENEFICIAIRE IS NULL THEN
                    /*
                      POUR POSITIONNER AUTOMATIQUEMENT LE MARQUEUR POUR LES EMISSIONS INDIVIDUELLES DES PRESTATIONS EXTERIEURES
                     */
                    IF (P_PLAGE_2 IS NULL) OR (P_PLAGE_2 IS NOT NULL AND P_AG24=24) THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).MARQUEUR_VISIBILITE                               :='I';
                    ELSE 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).MARQUEUR_VISIBILITE                               :=NULL;
                    END IF;
                                        
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AUTORISATION_ANNULATION                           :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_1                                  :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_2                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_3                                  :=0;
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=0;
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=NVL(R_RET.CODE_BCEAO,'0');--PRECISION DU CODE BANQUE DU RIB (AJOUTE LE 20 JUIN 2011)
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=NVL(R_RET.CODE_PAYS_IBAN||R_RET.CLE_IBAN||R_RET.CODE_BCEAO,'0');--PRECISION DU CODE BANQUE DU RIB (AJOUTE LE 20 JUIN 2011)
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_5                                  :=0; 
                   
                   
                   --*************************************************************************************************************--
                   --*************************************************************************************************************--
                   IF V_PEUT_ETRE_RAPPELER=0 THEN                  
                       --AJOUT DANS LA COLLECTION COLLECT_EMISSION AVEC LE RAPPEL;
                   -----------------------------------------------------------------------------------------------               
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRG         :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRG;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRC         :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPMTRC;
                    
                    --***************************************************************************--
                    --****             SEPARATION DU RAPPEL BONIFICATION ET PENSION          ****--
                    --***************************************************************************--
                                  
                          --COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION  :=NVL(V_MONTANT_RAPPEL_BONIFICATION,0);   --PAR GBAÏ 19 12 2011
                          COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRG       :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRGSP;
                                                                
                   --*************************************************************************************************************--
                   --*************************************************************************************************************--                      
                      
                     
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRG            :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRGSP;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRC          :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPRCSP;                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPMTIPRAO          :=COLLECT_RAPPEL_RETRAITE(V_RETROUVE_RAPPEL).RAPIPRAO;
                    
                   --AJOUT DANS LA COLLECTION COLLECT_EMISSION SANS LE RAPPEL;
                   -----------------------------------------------------------------------------------------------                
                    ELSE            
                     COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRG                                  :=0;
                     COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRC                                  :=0;
                     --COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION  :=NVL(V_MONTANT_RAPPEL_BONIFICATION,0); --PAR GBAÏ 19 12 2011
                     COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRG                                 :=0;
                     COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRC                                 :=0;                    
                     COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPMTIPRAO                                 :=0;                                           
                   END IF;
                   
                   --***************************************************************************--
                   --****             SEPARATION DU RAPPEL BONIFICATION ET PENSION          ****--
                   --***************************************************************************--                   
                   --GESTION DU POSITIONNEMENT DU RAPPEL DE BONIFICATION
                   IF NVL(V_MONTANT_RAPPEL_BONIFICATION,0)>0 THEN
                       COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION  :=NVL(V_MONTANT_RAPPEL_BONIFICATION,0); --PAR GBAÏ 19 12 2011
                       --:GLOBAL.MESSAGE1:=MSGBOX('CFG_INFORMATION','COLLECT_EMISSION V_MONTANT_RAPPEL_BONIFICATION = '||TO_CHAR(V_MONTANT_RAPPEL_BONIFICATION));
                   ELSE
                       COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION  := 0; --PAR GBAÏ 19 12 2011
                   END IF;
                    
                    IND_COLLECT_EMISSION:=IND_COLLECT_EMISSION+1;
                    COLLECT_EMISSION.EXTEND();
                                   
                ----=====================================================================
                ----MISE A JOUR DES CODES MOTIFS POUR LES PRESTATIONS A PAIEMENTS UNIQUE
                ----=====================================================================
                ----MISE A JOUR DES CODES MOTIFS POUR LES PRESTATIONS A PAIEMENTS UNIQUE
                IF R_RET.CODEDROIT IS NULL  AND R_RET.SREGCODE = 23 THEN
                   IF R_RET.AYATYPE =  'T' THEN    
                                         
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=17;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                                             
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();
                       
                   ELSE

                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=17;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              := 'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;           
                                 
                            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                            COLLECT_RET_AYANT_MOTIF.EXTEND();

                   END IF;

                ELSIF  R_RET.CODEDROIT IS NULL AND R_RET.SREGCODE = 27 THEN
                   IF R_RET.AYATYPE =  'T' THEN    
                                         
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=43;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                                             
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();

                   ELSE

                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=43;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              := 'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;           
                                 
                            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                            COLLECT_RET_AYANT_MOTIF.EXTEND();

                   END IF;

                ELSIF  R_RET.CODEDROIT IS NULL AND R_RET.SREGCODE = 24 THEN
                   IF R_RET.AYATYPE =  'T' THEN    
                                         
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=20;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                                             
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();

                   ELSE

                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).CODEMOTIF             :=20;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).REMARQUE              := 'EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMOTIF             :=SYSDATE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TRVNUM                :=R_RET.TRVNUM;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).TYPE_AYANT            :=R_RET.AYATYPE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).RETBENEFICIAIRE       :=R_RET.BENEFICIAIRE;
                            COLLECT_RET_AYANT_MOTIF(IND_COLLECT_RET_AYANT_MOTIF).DATEMODIF             :=NULL;           
                                 
                            IND_COLLECT_RET_AYANT_MOTIF:=IND_COLLECT_RET_AYANT_MOTIF+1;
                            COLLECT_RET_AYANT_MOTIF.EXTEND();

                   END IF;

                                         
                END IF;


                   /*IF R_RET.CODEDROIT IS NULL  AND R_RET.SREGCODE = 23 THEN
                     
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=17;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                     
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();
                      
                   ----
                   ELSIF  R_RET.CODEDROIT IS NULL AND R_RET.SREGCODE = 27 THEN
                     
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=43;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                     
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();
                    ----
                   ELSIF  R_RET.CODEDROIT IS NULL AND R_RET.SREGCODE = 24 THEN
                     
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).TRVNUM                                  :=R_RET.TRVNUM;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).CODEMOTIF                               :=20;
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).REMARQUE                                :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATEMOTIF                               :=SYSDATE;                    
                     COLLECT_RET_DOS_MOTIF(IND_COLLECT_RET_DOS_MOTIF).DATMODIF                                :=NULL;
                     
                     IND_COLLECT_RET_DOS_MOTIF:=IND_COLLECT_RET_DOS_MOTIF+1;
                     COLLECT_RET_DOS_MOTIF.EXTEND();
                     
                   END IF;*/

                    
        END IF;
   END IF;       

      EXCEPTION
          WHEN OTHERS THEN
                        INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                        SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','ERREUR INCONNU SUR ASSURE = '||TO_CHAR(R_RET.TRVNUM)||' BENEFICIAIRE = '||TO_CHAR(R_RET.BENEFICIAIRE)||' TYPE BENEFICIAIRE = '||R_RET.AYATYPE,SYSDATE,NULL,P_PERIODE,NULL,NULL
                        FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;            
      END;   ----TEST EMISSION
        
END LOOP;
CLOSE RETRAITE_A_EMETTRE;



IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DE BOUBLE PRINCIPALE.DEBUT DES OPRATIONS D''INSERTIONS',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    
    --FORMS_DDL('COMMIT');
    
END IF;



--==INSERTION DES VALEURS DES COLLECTIONS VERS LES TABLES DE DESTINATION     
      FOR E IN 1..((COLLECT_REJET_EMISSION.COUNT)-1)
      LOOP    
          INSERT INTO REJET_EMISSION VALUES (COLLECT_REJET_EMISSION(E).AGENCE,
                                             COLLECT_REJET_EMISSION(E).ASSURE,
                                             COLLECT_REJET_EMISSION(E).NUMERO_SINISTRE,
                                             COLLECT_REJET_EMISSION(E).BENEFICIAIRE,
                                             COLLECT_REJET_EMISSION(E).TYPE_BENEFICIAIRE,
                                             COLLECT_REJET_EMISSION(E).PERIODE_EMISSION,
                                             COLLECT_REJET_EMISSION(E).REMARQUE,
                                             COLLECT_REJET_EMISSION(E).STATUT,
                                             COLLECT_REJET_EMISSION(E).PRESTATION,
                                             COLLECT_REJET_EMISSION(E).SUPPLEMENT_1,
                                             COLLECT_REJET_EMISSION(E).SUPPLEMENT_2,
                                             COLLECT_REJET_EMISSION(E).SUPPLEMENT_3,
                                             COLLECT_REJET_EMISSION(E).SUPPLEMENT_4
                                           ); 
      END LOOP;
      
      IF P_EXPLOITATION=1 THEN 
                INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN D''INSERTION DES REJETS',SYSDATE,E,P_PERIODE,NULL,NULL
                FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
                
      END IF;
      
       
      FOR B IN 1..((COLLECT_RET_DOS_MOTIF.COUNT)-1)
      LOOP    
        BEGIN
          INSERT INTO RET_DOS_MOTIF 
          SELECT COLLECT_RET_DOS_MOTIF(B).TRVNUM,COLLECT_RET_DOS_MOTIF(B).CODEMOTIF
                    ,COLLECT_RET_DOS_MOTIF(B).REMARQUE ,COLLECT_RET_DOS_MOTIF(B).DATEMOTIF,COLLECT_RET_DOS_MOTIF(B).DATMODIF
          FROM DUAL
          WHERE NOT EXISTS(
             SELECT *
             FROM RET_DOS_MOTIF
             WHERE TRVNUM = COLLECT_RET_DOS_MOTIF(B).TRVNUM
             AND CODEMOTIF = COLLECT_RET_DOS_MOTIF(B).CODEMOTIF
             AND DATEMOTIF = COLLECT_RET_DOS_MOTIF(B).DATEMOTIF
          );
          
          EXCEPTION
                        WHEN OTHERS THEN
                        --:GLOBAL.MESSAGE:=MSGBOX('CFG_INFORMATION','INSERTION DANS LA TABLE RET_AYANT_MOTIF :: BENEFICIAIRE :: '||TO_CHAR(COLLECT_RET_AYANT_MOTIF(C).RETBENEFICIAIRE));
                              IF P_EXPLOITATION=1 THEN 
                                        INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,
                                                                                                EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                                        SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER
                                        ,'ASSURANCE VIEILLESSE-RETRAITE','INSERT RET_DOS_MOTIF :: CODEMOTIF ='||TO_CHAR(COLLECT_RET_DOS_MOTIF(B).CODEMOTIF)||' :: TRVNUM = '||TO_CHAR(COLLECT_RET_DOS_MOTIF(B).TRVNUM)||' :: BENEFICIAIRE = '||TO_CHAR(COLLECT_RET_DOS_MOTIF(B).TRVNUM)||' :: TYPE BENEF = T'||' :: REMARQUE = '||SUBSTR('EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.',1,50)
                                        ,SYSDATE,B,P_PERIODE,NULL,NULL
                                        FROM TEMPS_EXECUTION 
                                        WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION;
                              END IF;
                    END;           
        
      
      END LOOP;
      
      IF P_EXPLOITATION=1 THEN 
                INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN D''INSERTION DES SUSPENSIONS ASSURES.(INSERT DANS LA TABLE RET_DOS_MOTIF)',SYSDATE,B,P_PERIODE,NULL,NULL
                FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
      END IF;
      
    
     FOR C IN 1..((COLLECT_RET_AYANT_MOTIF.COUNT)-1)
     LOOP    
                BEGIN
                          INSERT INTO RET_AYANT_MOTIF 
                          SELECT COLLECT_RET_AYANT_MOTIF(C).CODEMOTIF,
                          COLLECT_RET_AYANT_MOTIF(C).REMARQUE,
                          COLLECT_RET_AYANT_MOTIF(C).DATEMOTIF,
                          COLLECT_RET_AYANT_MOTIF(C).TRVNUM,
                          COLLECT_RET_AYANT_MOTIF(C).TYPE_AYANT,
                          COLLECT_RET_AYANT_MOTIF(C).RETBENEFICIAIRE,
                          COLLECT_RET_AYANT_MOTIF(C).DATEMODIF
                   FROM DUAL
                   WHERE NOT EXISTS (
                     SELECT *
                     FROM RET_AYANT_MOTIF
                     WHERE CODEMOTIF = COLLECT_RET_AYANT_MOTIF(C).CODEMOTIF
                     AND DATEMOTIF = COLLECT_RET_AYANT_MOTIF(C).DATEMOTIF
                     AND TRVNUM = COLLECT_RET_AYANT_MOTIF(C).TRVNUM
                     AND TYPE_AYANT = COLLECT_RET_AYANT_MOTIF(C).TYPE_AYANT
                     AND RETBENEFICIAIRE = COLLECT_RET_AYANT_MOTIF(C).RETBENEFICIAIRE                     
                   );                          
                          
                        
                EXCEPTION
                WHEN OTHERS THEN
                      IF P_EXPLOITATION=1 THEN 
                                INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                                SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','INSERT RET_AYANT_MOTIF :: CODEMOTIF ='||TO_CHAR(COLLECT_RET_AYANT_MOTIF(C).CODEMOTIF)||' :: TRVNUM = '||TO_CHAR(COLLECT_RET_AYANT_MOTIF(C).TRVNUM)||' :: BENEFICIAIRE = '||TO_CHAR(COLLECT_RET_AYANT_MOTIF(C).RETBENEFICIAIRE)||' :: TYPE BENEF = '||COLLECT_RET_AYANT_MOTIF(C).TYPE_AYANT||' :: REMARQUE = '||SUBSTR('EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'. SUSPENSION DE PAIEMENT CAR LA CONJOINTE',1,50),SYSDATE,B,P_PERIODE,NULL,NULL
                                FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
                      END IF;
                END; 
     END LOOP;
     
    IF P_EXPLOITATION=1 THEN 
             
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN D''INSERTION DES SUSPENSIONS AYANTS DROITS.(INSERT DANS LA TABLE RET_AYANT_MOTIF)',SYSDATE,C,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
                    
    END IF;
    
    
   --  FORALL C IN COLLECT_EMISSION.FIRST..COLLECT_EMISSION.LAST     INSERT INTO EMISSION VALUES COLLECT_EMISSION(C);
    V_MAJ_PRET    :=0; 
    FOR A IN 1..((COLLECT_EMISSION.COUNT)-1)
      LOOP
         ---AJOUTE PAR GBAÏ LE 19 12 2011
         V_LAST_EMIS_BONIFIEE:= F_LAST_EMIS_BONIFIEE(COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE);
        
            /*******************************************/        
            /****************POUR TEST******************/
            /*******************************************/            
            IF V_LAST_EMIS_BONIFIEE IS NOT NULL THEN
                    INSERT INTO CONCEP1.TEST_DENIERE_BONIF(  ASSURE , BENEFICIAIRE , TYPE_BENEFICIAIRE , DERNIERE_EMISSION , PERIODE_EMISE , RAPCODE )
                    VALUES(R_RET.TRVNUM,R_RET.BENEFICIAIRE,R_RET.AYATYPE,V_LAST_EMIS_BONIFIEE,P_PERIODE,5);
      END IF;        
        
      ---ULTIMATE CONTROLE DU NET A PAYER
      IF ( (NVL(COLLECT_EMISSION(A).RET_EMIMONTRGRET,0) + NVL(COLLECT_EMISSION(A).RET_EMIMONTRCRET,0)
                        + NVL(COLLECT_EMISSION(A).RET_EMIMONTIPRAORET,0) + NVL(COLLECT_EMISSION(A).RET_EMIRAPMTIPRAO,0) 
                        + NVL(COLLECT_EMISSION(A).RET_EMIMONTRAPRG,0) + NVL(COLLECT_EMISSION(A).RET_EMIMONTRAPRC,0)
                        + NVL(COLLECT_EMISSION(A).RET_EMIMONTRAPSRG,0) + NVL(COLLECT_EMISSION(A).RET_EMIMONTRAPSRC,0) 
                        - NVL(COLLECT_EMISSION(A).MONTANT_RETENUE,0)
                        + NVL(COLLECT_EMISSION(A).RET_EMIBONIFICATION,0)
                        + NVL(COLLECT_EMISSION(A).RET_EMIRAPBONIFICATION,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IGR,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_IGR,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_CN,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_CN,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IS,0)
                        - NVL(COLLECT_EMISSION(A).IMPOT_MONTANT_IS,0))>0 ) THEN        
        
        INSERT INTO PRESTATIONS_EMISES_2(
                    ASSURE,BENEFICIAIRE,TYPE_BENEFICIAIRE,NUMERO_SINISTRE_DOSSIER,ENTREPRISE,CODE_SOUS_REGIME,ETAT,DIRECTION,AGENCE_EMISSION,AGENCE_PAIEMENT
                    ,CODE_BANQUE,CODE_SUCCURSALE,NUMERO_COMPTE,CLE_RIB ,CODE_MODE_PAIEMENT,CODE_LOCALITE,CODE_COMMUNE,CODE_QUARTIER,DATE_EMISSION,EMIS_PAR
                    ,PERIODE_EMISE,ADRESSE,NUMERO_DORDRE,MONTANT_RETENUE
                    ,IMPOT_CODE_IGR,IMPOT_BASE_IMPOSABLE_IGR,IMPOT_NOMBRE_PARTS,IMPOT_MONTANT_IGR,IMPOT_MONTANT_CUMULE_IGR,IMPOT_MONTANT_RAPPEL_IGR
                    ,IMPOT_CODE_CN,IMPOT_BASE_IMPOSABLE_CN,IMPOT_MONTANT_CN,IMPOT_MONTANT_CUMULE_CN,IMPOT_MONTANT_RAPPEL_CN
                    ,IMPOT_CODE_IS,IMPOT_BASE_IMPOSABLE_IS,IMPOT_MONTANT_IS,IMPOT_MONTANT_CUMULE_IS,IMPOT_MONTANT_RAPPEL_IS
                    ,IMPOT_CODE_CNR,IMPOT_BASE_IMPOSABLE_CNR,IMPOT_MONTANT_CNR,IMPOT_MONTANT_CUMULE_CNR
                    ,IMPOT_CODE_CNS,IMPOT_BASE_IMPOSABLE_CNS,IMPOT_MONTANT_CNS,IMPOT_MONTANT_CUMULE_CNS
                    ,RET_EMIMONTRGRET,RET_EMIMONTRCRET,RET_EMIMONTIPRAORET,RET_EMIMONTRAPRG,RET_EMIMONTRAPRC
                    ,RET_EMIMONTRAPSRG,RET_EMIMONTRAPSRC,RET_EMIGUICHEPAIRET,RET_EMIRAPMTIPRAO,RET_RETNUMRETRAITE
                    ,RET_EMICAISSE,RET_EMIBONIFICATION,RET_EMIRAPBONIFICATION        
                    ,REN_EMIMTPENSION,REN_EMIMTMAJORATION,REN_EMICOMPMAJORAT
                    ,REN_EMIRAPARRERAGE4,REN_EMIRAPMAJORAT4,REN_EMIRAPPENSION1,REN_EMIRAPMAJORAT1,REN_EMIRAPCOMPMAJO1
                    ,REN_EMIRAPPENSION2,REN_EMIRAPMAJORAT2,REN_EMIRAPMAJORAT3,REN_EMIGUICHERT,REN_EMIRACHAT
                    ,REN_NUMGRAVE,REN_PERIODE            
                    ,AF_EMIPERIODE,AF_EMIMONTANT,AF_PJCODE,AF_PJDATEETABLIS,AF_NUMGUICHET,AF_TYPEINTERESSE,AF_NBMOISRAPPEL
                    ,AF_MONTANTRAPPEL,AF_DATFRACT,AF_EMITYPEGASA,AF_CODEORD,AF_CODEAC,AF_DATEORD,AF_DATEAC
                    ,APERIODIQUE_PF_EMIMONTANT,APERIODIQUE_PF_MONTANTRAPPEL
                    ,IJATMP_PLEINMONTANT,IJATMP_DEMIMONTANT,IJATMP_DEUXTMONTANT
                    ,FMPHAT_FM_MONTANT_EXPOSE,FMPHAT_FM_MONTANT_ACCEPTE
                    ,PRET_EMIMONTPRET,PRET_EMIGUICHEPAIPRET,PRET_PRETADRESSEBENEF,PRET_EMICAISSE,PRET_EMICODEPRET
                    ,MARQUEUR_VISIBILITE,AUTORISATION_ANNULATION
                    ,SUPPLEMENTAIRE_1,SUPPLEMENTAIRE_2,SUPPLEMENTAIRE_3,SUPPLEMENTAIRE_4,SUPPLEMENTAIRE_5 
                    )
        VALUES 
              (
              COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE,COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER
              ,COLLECT_EMISSION(A).ENTREPRISE,COLLECT_EMISSION(A).CODE_SOUS_REGIME,COLLECT_EMISSION(A).ETAT,COLLECT_EMISSION(A).DIRECTION
              ,COLLECT_EMISSION(A).AGENCE_EMISSION,COLLECT_EMISSION(A).AGENCE_PAIEMENT,COLLECT_EMISSION(A).CODE_BANQUE,COLLECT_EMISSION(A).CODE_SUCCURSALE
              ,COLLECT_EMISSION(A).NUMERO_COMPTE,COLLECT_EMISSION(A).CLE_RIB ,COLLECT_EMISSION(A).CODE_MODE_PAIEMENT,COLLECT_EMISSION(A).CODE_LOCALITE
              ,COLLECT_EMISSION(A).CODE_COMMUNE,COLLECT_EMISSION(A).CODE_QUARTIER,COLLECT_EMISSION(A).DATE_EMISSION,COLLECT_EMISSION(A).EMIS_PAR
              ,COLLECT_EMISSION(A).PERIODE_EMISE,COLLECT_EMISSION(A).ADRESSE,COLLECT_EMISSION(A).NUMERO_DORDRE,COLLECT_EMISSION(A).MONTANT_RETENUE
              ,COLLECT_EMISSION(A).IMPOT_CODE_IGR,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_IGR,COLLECT_EMISSION(A).IMPOT_NOMBRE_PARTS,COLLECT_EMISSION(A).IMPOT_MONTANT_IGR,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_IGR,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IGR
              ,COLLECT_EMISSION(A).IMPOT_CODE_CN,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_CN
              ,COLLECT_EMISSION(A).IMPOT_CODE_IS,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IS
              ,COLLECT_EMISSION(A).IMPOT_CODE_CNR,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CNR,COLLECT_EMISSION(A).IMPOT_MONTANT_CNR,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CNR
              ,COLLECT_EMISSION(A).IMPOT_CODE_CNS,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CNS,COLLECT_EMISSION(A).IMPOT_MONTANT_CNS,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CNS
              ,COLLECT_EMISSION(A).RET_EMIMONTRGRET,COLLECT_EMISSION(A).RET_EMIMONTRCRET,COLLECT_EMISSION(A).RET_EMIMONTIPRAORET
              ,COLLECT_EMISSION(A).RET_EMIMONTRAPRG,COLLECT_EMISSION(A).RET_EMIMONTRAPRC,COLLECT_EMISSION(A).RET_EMIMONTRAPSRG
              ,COLLECT_EMISSION(A).RET_EMIMONTRAPSRC,COLLECT_EMISSION(A).RET_EMIGUICHEPAIRET,COLLECT_EMISSION(A).RET_EMIRAPMTIPRAO
              ,COLLECT_EMISSION(A).RET_RETNUMRETRAITE,COLLECT_EMISSION(A).RET_EMICAISSE,COLLECT_EMISSION(A).RET_EMIBONIFICATION
              ,COLLECT_EMISSION(A).RET_EMIRAPBONIFICATION
              ,COLLECT_EMISSION(A).REN_EMIMTPENSION,COLLECT_EMISSION(A).REN_EMIMTMAJORATION,COLLECT_EMISSION(A).REN_EMICOMPMAJORAT  
              ,COLLECT_EMISSION(A).REN_EMIRAPARRERAGE4,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT4,COLLECT_EMISSION(A).REN_EMIRAPPENSION1
              ,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT1,COLLECT_EMISSION(A).REN_EMIRAPCOMPMAJO1,COLLECT_EMISSION(A).REN_EMIRAPPENSION2
              ,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT2,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT3,COLLECT_EMISSION(A).REN_EMIGUICHERT
              ,COLLECT_EMISSION(A).REN_EMIRACHAT,COLLECT_EMISSION(A).REN_NUMGRAVE,COLLECT_EMISSION(A).REN_PERIODE
              ,COLLECT_EMISSION(A).AF_EMIPERIODE,COLLECT_EMISSION(A).AF_EMIMONTANT,COLLECT_EMISSION(A).AF_PJCODE,COLLECT_EMISSION(A).AF_PJDATEETABLIS
              ,COLLECT_EMISSION(A).AF_NUMGUICHET,COLLECT_EMISSION(A).AF_TYPEINTERESSE,COLLECT_EMISSION(A).AF_NBMOISRAPPEL,COLLECT_EMISSION(A).AF_MONTANTRAPPEL
              ,COLLECT_EMISSION(A).AF_DATFRACT,COLLECT_EMISSION(A).AF_EMITYPEGASA,COLLECT_EMISSION(A).AF_CODEORD,COLLECT_EMISSION(A).AF_CODEAC
              ,COLLECT_EMISSION(A).AF_DATEORD,COLLECT_EMISSION(A).AF_DATEAC
              ,COLLECT_EMISSION(A).APERIODIQUE_PF_EMIMONTANT,COLLECT_EMISSION(A).APERIODIQUE_PF_MONTANTRAPPEL
              ,COLLECT_EMISSION(A).IJATMP_PLEINMONTANT,COLLECT_EMISSION(A).IJATMP_DEMIMONTANT,COLLECT_EMISSION(A).IJATMP_DEUXTMONTANT
              ,COLLECT_EMISSION(A).FMPHAT_FM_MONTANT_EXPOSE,COLLECT_EMISSION(A).FMPHAT_FM_MONTANT_ACCEPTE
              ,COLLECT_EMISSION(A).PRET_EMIMONTPRET,COLLECT_EMISSION(A).PRET_EMIGUICHEPAIPRET,COLLECT_EMISSION(A).PRET_PRETADRESSEBENEF
              ,COLLECT_EMISSION(A).PRET_EMICAISSE,COLLECT_EMISSION(A).PRET_EMICODEPRET
              ,COLLECT_EMISSION(A).MARQUEUR_VISIBILITE,COLLECT_EMISSION(A).AUTORISATION_ANNULATION
              ,COLLECT_EMISSION(A).SUPPLEMENTAIRE_1,COLLECT_EMISSION(A).SUPPLEMENTAIRE_2,COLLECT_EMISSION(A).SUPPLEMENTAIRE_3,COLLECT_EMISSION(A).SUPPLEMENTAIRE_4,COLLECT_EMISSION(A).SUPPLEMENTAIRE_5 
              );
                         
                         CONCEP1.PRELEVEMENT_MUTREPCI (COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).PERIODE_EMISE); /*AJOUTE LE 03 DECEMBRE 2013 POUR RESOUDRE LE PROBLEME MUTRPCI*/
     
                         CONCEP1.PRELEVEMENT_MARBICICI(COLLECT_EMISSION(A).ASSURE, COLLECT_EMISSION(A).PERIODE_EMISE); /*AJOUTE LE 30 JANVIER 2014 POUR PERMETTRE LE PRELEVEMENT MAR_BICICI*/
                         
                         UPDATE CONCEP1.RAPPEL_RETRAITE
                            SET  DATEMIS = COLLECT_EMISSION(A).PERIODE_EMISE--P_PERIODE
                            WHERE TRVNUM= COLLECT_EMISSION(A).ASSURE--COLLECT_RAPPEL_RETRAITE(PARCOURS).TRVNUM
                            AND RAPBENEFICIAIRE= COLLECT_EMISSION(A).BENEFICIAIRE--COLLECT_RAPPEL_RETRAITE(PARCOURS).RAPBENEFICIAIRE
                            AND RAPTYPEBENEF= COLLECT_EMISSION(A).TYPE_BENEFICIAIRE--COLLECT_RAPPEL_RETRAITE(PARCOURS).RAPTYPEBENEF
                            AND DATEMIS IS NULL
                            AND NVL((RAPMTRG),0)+NVL((RAPMTRC),0)+NVL((RAPRGSP),0)+NVL((RAPRCSP),0)+NVL((RAPIPRAO),0)>0
                            AND ((RAPCODE = 1 AND COLLECT_EMISSION(A).CODE_SOUS_REGIME IN (23,24,27)) 
                                        OR 
                                     (RAPCODE NOT IN (7,9) AND COLLECT_EMISSION(A).CODE_SOUS_REGIME NOT IN (23,24,27))
                                    );
     
      ELSE 
          PROC_RET_SUSPENSION_NETNEGATIF(COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE,V_NUMERO_EXECUTION, P_PERIODE );            

                --******SUPRESSION DES RAPPELS BONIFICATION SUSPENDUS (5) POUR LES ASSURES NON EMIS
                PROC_RETRAIT_RAPPEL_BONIF(COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE);          
      
      END IF;     
     
     
                 --METTRE A JOUR LES DATES DE DERNIERE EMISSION ( MISE A JOUR DE LA TABLE RETRAITE) 
                     --CODEDROIT POUR LES NOUVEAU DOSSIER 
                     --DATE DE DERNIERE EMISSION
                    
               IF COLLECT_EMISSION(A).TYPE_BENEFICIAIRE!='T' THEN     
                   
                       UPDATE RET_AYANT_DROIT
                    SET CODEDROIT = 'A',AYADERNIERE_EMISSION=P_PERIODE
                    WHERE TRVNUM=COLLECT_EMISSION(A).ASSURE
                    AND BENEFICIAIRE=COLLECT_EMISSION(A).BENEFICIAIRE
                    AND AYATYPE=COLLECT_EMISSION(A).TYPE_BENEFICIAIRE;                       
                                   
               ELSE   
                       UPDATE RETRAITE
                    SET CODEDROIT = 'A',DERNIERE_EMISSION=P_PERIODE
                    WHERE TRVNUM =COLLECT_EMISSION(A).ASSURE;                            
               END IF;
                              
            IF COLLECT_EMISSION(A).MONTANT_RETENUE!=0 THEN 
                      UPDATE CONCEP1.ECHEANCE 
                      SET DATE_PRELEVEMENT= P_PERIODE
                      WHERE DATE_PRELEVEMENT IS NULL
                      AND TO_NUMBER(NUMERO_PRET||NUMERO_ECHEANCE) IN   (SELECT  DISTINCT TO_NUMBER(ECH.NUMERO_PRET||ECH.NUMERO_ECHEANCE)
                                                                        FROM ECHEANCE ECH,DEMANDE_PRET DEM 
                                                                        WHERE  ECH.NUMERO_PRET        =ECH.NUMERO_PRET               
                                                                          AND ECH.NUMERO_ECHEANCE       =ECH.NUMERO_ECHEANCE
                                                                          AND ECH.DATE_PRELEVEMENT      IS NULL
                                                                          AND ECH.PERIODE_PRELEVEMENT   <=P_PERIODE
                                                                          ----
                                                                          AND DEM.PRT_NUMERO_PRET       =ECH.NUMERO_PRET                                                    
                                                                        AND DEM.PRT_CODE_BRANCHE      =6 
                                                                          AND DEM.PRT_CODVALORD         ='V'
                                                                          AND DEM.PRT_CATEGORIE_ASSURE  =DEM.PRT_CATEGORIE_ASSURE 
                                                                          AND DEM.PRT_CODE_PRET         !=3
                                                                          AND DEM.DERNIERE_EMISSION     IS NOT NULL 
                                                                        
                                                                        AND DEM.PRT_PRESTATION                  =COLLECT_EMISSION(A).ASSURE
                                                                        AND DEM.PRT_NUMERO_ASSURE       =COLLECT_EMISSION(A).BENEFICIAIRE
                                                                        AND DEM.TYPEBENEF               =COLLECT_EMISSION(A).TYPE_BENEFICIAIRE
                                                                        );
                     V_MAJ_PRET :=V_MAJ_PRET    +1;
            END IF;                                  
   
                --***************************************************************************************************---         
        --MISE A JOUR DES RAPPELS RETRAITE POUR RAPPEL DE BONIFICATION 19 12 2011
             UPDATE CONCEP1.RAPPEL_RETRAITE
             SET    DATEMIS = COLLECT_EMISSION(A).PERIODE_EMISE
             WHERE  TRVNUM= COLLECT_EMISSION(A).ASSURE
             AND    RAPBENEFICIAIRE = COLLECT_EMISSION(A).BENEFICIAIRE
             AND    RAPTYPEBENEF = COLLECT_EMISSION(A).TYPE_BENEFICIAIRE
             AND    DATEMIS IS NULL
             --AND    RAPRGSP=COLLECT_EMISSION(A).RET_EMIRAPBONIFICATION /*MIS EN COMMENTAIRE SUIVANT LES RECOMMANDATIONS DE L'EMISSION TEST RETRAITE DE MARS 2012*/
             --AND  (NVL(RAPMTRG,0)+NVL(RAPMTRC,0)+NVL(RAPRGSP,0)+NVL(RAPRCSP,0)+NVL(RAPIPRAO,0))>0
             AND    RAPCODE IN (4,5);         
   
               --METTRE A JOUR LES BONIFICATIOBS RECUPEREES A L'EMISSION DE LA PERIODE
                IF NVL(COLLECT_EMISSION(A).RET_EMIBONIFICATION,0)!=0 OR NVL(COLLECT_EMISSION(A).RET_EMIRAPBONIFICATION,0)!=0  THEN
                    --AND V_LAST_EMIS_BONIFIEE IS NOT NULL AND COLLECT_EMISSION(A).PERIODE_EMISE > V_LAST_EMIS_BONIFIEE
          --***************************************************************************************************---      
          DECLARE
              CURSOR CUR_DATE_ARRET_BONIF IS            
                        SELECT BONTRVNUM,BONENFNUM,BONDATEARRET,DERNIERE_EMISSION          
                        FROM CONCEP1.BONIFICATION 
                        WHERE BONTRVNUM =COLLECT_EMISSION(A).ASSURE
                        AND RECHERCHE_PIECE(BONTRVNUM,BONENFNUM,'E',3,P_PERIODE,'V')!=0
                        AND BONDATEARRET<>DERNIERE_EMISSION;
                        
                    V_DATE_ARRET_BONIF CUR_DATE_ARRET_BONIF%ROWTYPE;
          BEGIN
              
              OPEN CUR_DATE_ARRET_BONIF;
              LOOP
                FETCH CUR_DATE_ARRET_BONIF INTO V_DATE_ARRET_BONIF;
                EXIT WHEN CUR_DATE_ARRET_BONIF%NOTFOUND;
                --:GLOBAL.MESSAGE:=MSGBOX('CFG_INFORMATION','BONIFICATION RETROUVEE!'); --TEST GBAÏ 25 01 2012
                  --SI LA DERNIERE EMISSION DE BONIFICATION EST INFERIEURE A F_LAST_EMIS_BONIFIEE
                  IF V_DATE_ARRET_BONIF.DERNIERE_EMISSION < COLLECT_EMISSION(A).PERIODE_EMISE  THEN
                                                
                              --SI LA DATE D'ARRET EST EST INFERIEURE OU EGALE A LA PERIODE 
                              IF V_DATE_ARRET_BONIF.BONDATEARRET <= COLLECT_EMISSION(A).PERIODE_EMISE  THEN
                                  
                                      
                                            UPDATE CONCEP1.BONIFICATION BB
                                                        SET DERNIERE_EMISSION=V_DATE_ARRET_BONIF.BONDATEARRET
                                                        WHERE BONTRVNUM=V_DATE_ARRET_BONIF.BONTRVNUM
                                                        AND BONENFNUM = V_DATE_ARRET_BONIF.BONENFNUM
                                                        AND BONDATEARRET = V_DATE_ARRET_BONIF.BONDATEARRET
                                                        AND RECHERCHE_PIECE(BB.BONTRVNUM,BB.BONENFNUM,'E',3,P_PERIODE,'V')!=0; /*AJOUTE LE 25 JANVIER 2012*/
                                                                                                               
                                                                                                          
                              ELSIF V_DATE_ARRET_BONIF.BONDATEARRET > COLLECT_EMISSION(A).PERIODE_EMISE THEN
                                  
                                            UPDATE CONCEP1.BONIFICATION BB
                                                        SET DERNIERE_EMISSION = COLLECT_EMISSION(A).PERIODE_EMISE
                                                        WHERE BONTRVNUM=V_DATE_ARRET_BONIF.BONTRVNUM
                                                        AND BONENFNUM = V_DATE_ARRET_BONIF.BONENFNUM
                                                        AND BONDATEARRET = V_DATE_ARRET_BONIF.BONDATEARRET
                                                        AND RECHERCHE_PIECE(BB.BONTRVNUM,BB.BONENFNUM,'E',3,P_PERIODE,'V')!=0; /*AJOUTE LE 25 JANVIER 2012*/                                                        
                                                                                      
                                  
                                          END IF;                       

                              END IF; 
                                       
                        END LOOP;            
                        CLOSE CUR_DATE_ARRET_BONIF;            
          END;
                --*************************************************************************************************************************
                --****************************************                              ***************************************************
                --*************************************************************************************************************************          
       END IF;                                               
      
     END LOOP; 
                             
IF P_EXPLOITATION=1 THEN     
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN D''INSERTION DES LIGNES EMISES.(INSERT DANS LA TABLE PRESTATIONS_EMISES_2)',SYSDATE,A,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DE MISE A JOUR DES TABLES DE PENSION(RETRAITE ET RET_AYANT_DROIT)',SYSDATE,A,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    
END IF;
        
      
    IF P_EXPLOITATION=1 THEN   
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DE MISE A JOUR DES PRETS RECUPERES',SYSDATE,V_MAJ_PRET    ,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    END IF;
   
   
        IF P_EXPLOITATION=1 THEN   
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DE MISE A JOUR DES RAPPELS DE RETRAITE RECUPERES',SYSDATE,V_MAJ_PRET    ,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
        END IF;

--METTRE A JOUR LES IMPOTS PRELEVES

                FOR I IN 1..(COLLECT_IMPOT.COUNT)-1 LOOP
                    --AJOUTER LE 14 06 2012 PAR GBAÏ POUR NE PAS TENIR COMPTE DES PENSIONS NON EMISES
                    INSERT INTO IMPOT_2(IMPTRVNUM,IMPBENEFICIAIRE,IMPTYPEBENEF,IMPCODE,IMPBASEIMPOSABLE,IMPPARTS,IMPMONTANT,IMPCUMUL,IMPMOISREFERENCE
                                                     ,IMPPERIODEMISSION,IMPDATESAIS,IMPDATEMODIF,DATEMIS,IMPNBJFP,IMPCUMNBJFP,IMPCUMBASEIMPOSABLE,IMPMONTANTAN ,IMPBASEIMPOSABLE_AN )                     
                    SELECT DISTINCT COLLECT_IMPOT(I).IMPTRVNUM ,COLLECT_IMPOT(I).IMPBENEFICIAIRE ,COLLECT_IMPOT(I).IMPTYPEBENEF
                                                  ,COLLECT_IMPOT(I).IMPCODE ,COLLECT_IMPOT(I).IMPBASEIMPOSABLE ,COLLECT_IMPOT(I).IMPPARTS
                                                 ,COLLECT_IMPOT(I).IMPMONTANT ,COLLECT_IMPOT(I).IMPCUMUL ,COLLECT_IMPOT(I).IMPMOISREFERENCE
                                                 ,COLLECT_IMPOT(I).IMPPERIODEMISSION ,COLLECT_IMPOT(I).IMPDATESAIS    ,COLLECT_IMPOT(I).IMPDATEMODIF
                                                 ,COLLECT_IMPOT(I).DATEMIS ,COLLECT_IMPOT(I).IMPNBJFP ,COLLECT_IMPOT(I).IMPCUMNBJFP
                                                 ,COLLECT_IMPOT(I).IMPCUMBASEIMPOSABLE ,COLLECT_IMPOT(I).IMPMONTANTAN ,COLLECT_IMPOT(I).IMPBASEIMPOSABLE_AN
                    FROM DUAL
                    WHERE EXISTS (
                    SELECT *
                    FROM CONCEP1.PRESTATIONS_EMISES_2 PE
                    WHERE PE.PERIODE_EMISE = P_PERIODE
                    AND CONCEP1.PACK_PAIEMENT.F_EMIS(PE.ASSURE,PE.BENEFICIAIRE,PE.TYPE_BENEFICIAIRE,PE.PERIODE_EMISE,PE.NUMERO_DORDRE,PE.CODE_SOUS_REGIME,PE.NUMERO_SINISTRE_DOSSIER) = 1
                    AND PE.ASSURE = COLLECT_IMPOT(I).IMPTRVNUM  AND PE.BENEFICIAIRE = COLLECT_IMPOT(I).IMPBENEFICIAIRE
                    AND PE.TYPE_BENEFICIAIRE = COLLECT_IMPOT(I).IMPTYPEBENEF  AND PE.EMIS_PAR= USER
                    AND TO_CHAR(PE.DATE_EMISSION,'DD/MM/YYYY') = TO_CHAR(SYSDATE,'DD/MM/YYYY'));
                    
                
                END LOOP;
                
                    

IF P_EXPLOITATION=1 THEN   
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DE MISE A JOUR DES IMPOTS',SYSDATE,V_MAJ_PRET    ,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;
        
    
    --INFORMER L'UTILISATEUR DE LA REALISATION OU NON DE L'EMISSION INDIVIDUELLE   
       --IF (:BENEFICIAIRE IS NOT NULL AND  COLLECT_REJET_EMISSION.COUNT>=2) THEN
       IF (P_EXPLOITATION=0 AND COLLECT_REJET_EMISSION.COUNT>=2) THEN 
                                     
                    IF COLLECT_REJET_EMISSION.COUNT<=3 THEN                    
                            V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                            V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;
                            
                            RAISE_APPLICATION_ERROR(-20010,'NON EMISSION POUR : '||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2);
                            
                            /*SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT ,'NON EMISSION POUR :'||V_MESSAGE_ERREUR_1 ||CHR(10)||V_MESSAGE_ERREUR_2);*/
                                                                                               
                           --IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;
                    END IF;                    
                    
                    IF COLLECT_REJET_EMISSION.COUNT>3 THEN 
                        V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                        V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;                    
                        V_MESSAGE_ERREUR_3:=COLLECT_REJET_EMISSION(3).REMARQUE;
                        
                        RAISE_APPLICATION_ERROR(-20011,'NON EMISSION POUR : '||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2||' - '||V_MESSAGE_ERREUR_3);
                        
                       /* SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT
                                                                                    ,'NON EMISSION POUR :'||CHR(10)
                                                                                    ||CHR(10)
                                                                                    ||CHR(10)||V_MESSAGE_ERREUR_1
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_2
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_3);
                        IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;*/
                    END IF;
                    
                    IF COLLECT_REJET_EMISSION.COUNT>4 THEN 
                        V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                        V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;                    
                        V_MESSAGE_ERREUR_3:=COLLECT_REJET_EMISSION(3).REMARQUE;
                        V_MESSAGE_ERREUR_4:=COLLECT_REJET_EMISSION(4).REMARQUE;
                        
                        RAISE_APPLICATION_ERROR(-20012,'NON EMISSION POUR : '||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2||' - '||V_MESSAGE_ERREUR_3||' - '||V_MESSAGE_ERREUR_4);
                        
                        /*SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT
                                                                                    ,'NON EMISSION POUR :'||CHR(10)
                                                                                    ||CHR(10)
                                                                                    ||CHR(10)||V_MESSAGE_ERREUR_1
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_2
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_3
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_4);
                        IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;*/
                        
                    END IF;                              
                    
                                 
       --ELSIF (:BENEFICIAIRE IS NOT NULL AND EMIS_IND=2 ) THEN
       ELSIF (P_EXPLOITATION=0 AND EMIS_IND=2  ) THEN
                            RAISE_APPLICATION_ERROR(-20013,'L''ASSURE EST SOIT DEJA EMIS SON MOTIF NE LUI PERMET PAS D''ETRE EMIS OU SON DOSSIER N''EST PAS VALIDE');
                                     --:GLOBAL.AL_BUTTON:=MSGBOX('CFG_INFORMATION','L''ASSURE EST SOIT DEJA EMIS; '||CHR(10)||
                                       --                      'SON MOTIF NE LUI PERMET PAS D''ETRE EMIS;'||CHR(10)||
                                       --                      'OU SON DOSSIER N''EST PAS VALIDE');
                            
       END IF;
            
IF P_EXPLOITATION=1 THEN        
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'ASSURANCE VIEILLESSE-RETRAITE','FIN DU PROCESSUS D''EMISSION.VALIDATION  GLOBALE DE TOUTES LES ACTIONS EFFECTUEES',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
    
    IF P_AG24 = 0 THEN
       PROC_MOYEN_PAIEMENT(6,P_PERIODE);
    END IF; 
            
    /*ALIMENTATION DE DATA DAY PRESTATIONS 2*/
    CONCEP1.PACK_COMPTA_ANA.RESTAURATION_JOURNEE_PC(TRUNC(SYSDATE));    
                              
END IF;

--FORMS_DDL('COMMIT');  

COMMIT;
         
END ;




PROCEDURE EMETTRE_RENTE(P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER,P_SINISTRE  NUMBER
                        ,P_TYPEBEN  CHAR,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
                        ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
                        ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
                        ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
                        ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15 AGENCE.AGCODE%TYPE
                        ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17 AGENCE.AGCODE%TYPE,P_AG18 AGENCE.AGCODE%TYPE
                        ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21 AGENCE.AGCODE%TYPE
                        ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24 AGENCE.AGCODE%TYPE
                        ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10 AGENCE.AGCODE%TYPE
                        ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26 AGENCE.AGCODE%TYPE) IS

--ORDRE D'EXECUTION 
--=====================

--DECLARATIONS DE VARIABLES  
    --== 1 
    -- DEFINIR UNE VARIABLE COLLECTION "COLLECT_EMISSION" BASEE 
    -- SUR LA TABLE PRESTATIONS_EMISES_2
     
        TYPE EMISSION_COLLECTION IS TABLE OF PRESTATIONS_EMISES_2%ROWTYPE;
        COLLECT_EMISSION                                 EMISSION_COLLECTION:=EMISSION_COLLECTION(NULL);
    --== 2  
    -- DEFINIR UNE VARIABLE COLLECTION "COLLECT_RAPPEL_RENTE" BASEE 
    -- SUR LA TABLE RAPPEL_RENTE --( VOIR CREATE_TYPE_OBJECT.sql)
             
         TYPE RAPPEL_RENTE_COLLECTION IS TABLE OF RAPPEL_RENTE%ROWTYPE;
         COLLECT_RAPPEL_RENTE                     RAPPEL_RENTE_COLLECTION:=RAPPEL_RENTE_COLLECTION(NULL);
                  
         --
         --TABLE REJET_EMISSION 
        TYPE REJET_EMISSION_COLLECTION IS TABLE OF REJET_EMISSION%ROWTYPE;
        COLLECT_REJET_EMISSION                                 REJET_EMISSION_COLLECTION:=REJET_EMISSION_COLLECTION(NULL);
        
        --TABLE REN_AYANT_MOTIF  
        TYPE REN_AYANT_MOTIF_COLLECTION IS TABLE OF REN_AYANT_MOTIF%ROWTYPE;
        COLLECT_REN_AYANT_MOTIF                                    REN_AYANT_MOTIF_COLLECTION:=REN_AYANT_MOTIF_COLLECTION(NULL);
        
        --RENTE_MOTIF 
        TYPE RENTE_MOTIF_COLLECTION IS TABLE OF RENTE_MOTIF%ROWTYPE;
        COLLECT_RENTE_MOTIF                                    RENTE_MOTIF_COLLECTION:=RENTE_MOTIF_COLLECTION(NULL); 
     
     
     
     --== 3     
     --DECLARATION DU CURSEUR RENTE_A_EMTTRE 
     --( CURSEUR DE SELECTIION DE LA POPULATION A EMETTRE  CURSEUR_POPULATION_RENTE.SQL ) 
     /* 
    --=============================================================
    CURSEUR DE SELECTION DE LA POPULATION A EMETTRE POUR LES RENTES 
    --
    ON SELECTIONNE TOUS L'(ES) ASSURE(S) ET AYANT(S) DROIT DONT :
    1-LE DOSSIER PORTE LA SECONDE VALIDATION 
    2-LE MOTIF LE PLUS RECENT EST 39 
    3-LA PERIODICITE CORRESPOND AU MOIS A EMETTRE 
    4-DONT LA DATE DE DERNIERE_EMISSION EST NULL OU ANTERIEURE A LA PERIODE A EMETTRE 
    5-APPATENANT A UNE AGENCE  

    NB : UNE FONCTION NOUS PERMET DE RAMENER LES PRETS A RETENIR SUR L'ASSURE 
            CETTE REQUETE RAMENE AUSSI LES RAPPELS DE RENTE A EFFECTUER SUR UN ASSURE 
    --=============================================================
    */ 
     CURSOR RENTE_A_EMETTRE  /* (P_PERIODE    DATE
                               ,P_PLAGE_1     NUMBER
                                    ,P_PLAGE_2     NUMBER
                                    ,P_SINISTRE         NUMBER
                                    ,:TYPE_EMIS     CHAR
                                    ,P_AG1         AGENCE.AGCODE%TYPE
                                    ,P_AG2         AGENCE.AGCODE%TYPE
                                    ,P_AG3         AGENCE.AGCODE%TYPE
                                    ,P_AG4         AGENCE.AGCODE%TYPE
                                    ,P_AG5         AGENCE.AGCODE%TYPE
                                    ,P_AG6         AGENCE.AGCODE%TYPE
                                    ,P_AG7         AGENCE.AGCODE%TYPE
                                    ,P_AG8         AGENCE.AGCODE%TYPE
                                    ,P_AG9         AGENCE.AGCODE%TYPE
                                    ,P_AG11        AGENCE.AGCODE%TYPE
                                    ,P_AG12        AGENCE.AGCODE%TYPE
                                    ,P_AG13        AGENCE.AGCODE%TYPE
                                    ,P_AG14        AGENCE.AGCODE%TYPE
                                    ,P_AG15        AGENCE.AGCODE%TYPE
                                    ,P_AG16        AGENCE.AGCODE%TYPE
                                    ,P_AG17        AGENCE.AGCODE%TYPE
                                    ,P_AG18        AGENCE.AGCODE%TYPE
                                    ,P_AG19        AGENCE.AGCODE%TYPE
                                    ,P_AG20        AGENCE.AGCODE%TYPE
                                    ,P_AG21        AGENCE.AGCODE%TYPE
                                    ,P_AG22        AGENCE.AGCODE%TYPE
                                    ,P_AG23        AGENCE.AGCODE%TYPE
                                    ,P_AG24        AGENCE.AGCODE%TYPE
                                    ,P_AG25        AGENCE.AGCODE%TYPE
                                    ,P_AG10        AGENCE.AGCODE%TYPE
                                    ,P_AG50        AGENCE.AGCODE%TYPE
                                    ,P_AG26        AGENCE.AGCODE%TYPE 
                                )*/ IS 
    SELECT T3.TRVNUM ,T3.TRVNUM BENEFICIAIRE,'T' AYATYPE,T3.TRVNUM AYANT_DROIT,NVL(RENMONTANT,0)RENMONTANT,NVL(RENMAJORE,0)RENMAJORE,NVL(RENCOMPMAJORE,0)RENCOMPMAJORE,RENPERIODE,NVL(RENMODEPAIE,4)RENMODEPAIE,NVL(RENBANQUE,99)RENBANQUE,RENSUCCURSALE,RENCPTEBANQUE
    ,CLE_RIB CLE_RIB
    ,DRPAIEMENT,AGPAIEMENT,NVL(LOCALITE,101) LOCALITE,NVL(COMMUNE,4)COMMUNE,NVL(QUARTIER,1)QUARTIER,CODEDROIT,CODVALORD,DATVALORD,CODVALAC,DATVALAC,RENNUMGRAVE
    ,T3.DATSINISTRE,RENADRESSE,RETCOMPT1,DATDATEECHEANCE,DERNIERE_EMISSION,T3.SREGCODE,NVL(RENRACHAT,0)RENRACHAT
    ,RENSALUTILE,RENTAUXUTILE,SALMONTNPLAF,NUMERO_DORDRE_RENTE() NUMERO_ORDRE
    ,F_RECUPERATION_PRETS(T3.DATSINISTRE,T3.TRVNUM,'T',4,P_PERIODE) PRETS
    ,AGE(T3.TRVNUM,T3.TRVNUM,'T',P_PERIODE,'V') AGEE_DE
    ,CONCEP1.SUSPENSION_ENP(T3.DATSINISTRE,T3.TRVNUM,'T',4,T3.AGPAIEMENT,P_PERIODE,T3.SREGCODE) A_SUSPENDRE
    ,SOLDE_PRESTATIONS_EMISES(T3.DATSINISTRE,T3.TRVNUM,T3.TRVNUM,'T',T3.SREGCODE,P_PERIODE,P_PERIODE,2) SOLDE_PERIODE
    -----------------------
    ,T3.RETCOMPT1 CODE_BCEAO/*PRISE EN COMPTE DU CODE BCEAO SAISI DANS LE DOSSIER RENTES (AJOUTE LE 20 JUIN 2011)*/
    ,T3.CODE_PAYS_IBAN/*PRISE EN COMPTE DU CODE_PAYS_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 17 JUIN 2013)*/
    ,T3.CLE_IBAN/*PRISE EN COMPTE DE LA CLE_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 17 JUIN 2013)*/ 
    ,T3.DATE_TAUX --AJOUTE LE 03 JUILLET 2013
    -----------------------    
    FROM  CONCEP1.RENTE_MOTIF RM,CONCEP1.RENTE T3,CONCEP1.DOSSIER_ATMP T4
    --============
    WHERE T3.DATSINISTRE=T4.DATSINISTRE
    AND UPPER(T3.CODVALAC) ='V'
    AND T3.DATSINISTRE=RM.DATSINISTRE
    AND RM.CODEMOTIF =39
    AND T3.SREGCODE=RM.SREGCODE
    AND T3.DATE_TAUX = RM.DATE_TAUX --AJOUTE LE 03 JUILLET 2013
    AND T3.RENDATESAIS = (SELECT MAX(T.RENDATESAIS) 
                          FROM CONCEP1.RENTE T 
                          WHERE T.TRVNUM=T3.TRVNUM 
                          AND T.DATSINISTRE=T3.DATSINISTRE )--AJOUTE LE 13 MARS 2014 POUR EMPECHER LES EMISSIONS EN DOUBLE    
    AND RM.DATEMOTIF =(SELECT MAX(DATEMOTIF) 
                                         FROM RENTE_MOTIF MR 
                                         WHERE MR.SREGCODE=RM.SREGCODE 
                                         AND MR.DATSINISTRE=RM.DATSINISTRE 
                                         AND MR.DATE_TAUX = RM.DATE_TAUX /*AJOUTE LE 03 JUILLET 2013*/
                                         ) 
    AND T3.RENPERIODE IN   (SELECT 'A' PERIODICITE 
                                                  FROM DUAL   
                                                  WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))
                            UNION ALL
                            SELECT 'M' PERIODICITE    FROM DUAL   
                            UNION ALL
                            SELECT 'T' PERIODICITE    FROM DUAL   
                            WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12)
                            )          
    AND T3.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
    AND T3.DATSINISTRE=NVL(P_SINISTRE,T3.DATSINISTRE)
    AND T3.AGPAIEMENT IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                            ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                          ,P_AG10,P_AG50,P_AG26)
    AND NOT EXISTS (
      SELECT *
      FROM CONCEP1.DOSSIER_FRAUDULEUX DF
      WHERE DF.ASSURE = T3.TRVNUM
      AND DF.BENEFICIAIRE = T3.TRVNUM
      AND DF.Flag_Bloc = 1
    )                        
    ---==============================================================================================
    --===================
    UNION ALL
    --===================
    ---==============================================================================================
    SELECT TRVNUM,BENEFICIAIRE,AYATYPE,T3.AYANT_DROIT,NVL(MONTPENSION,0)MONTPENSION,NVL(MONTMAJORE,0)MONTMAJORE,NVL(MTCOMPLMAJORE,0)MTCOMPLMAJORE,PERIODE,NVL(MODEPAIE,4) MODEPAIE,NVL(BANQUE,99) BANQUE,SUCCURSALE,CPTEBANQUE,CLE_RIB CLE_RIB
    ,DRPAIEMENT,AGPAIEMENT,NVL(LOCALITE,101) LOCALITE,NVL(COMMUNE,4)COMMUNE,NVL(QUARTIER,1)QUARTIER,CODEDROIT,CODVALORD,DATVALORD,CODVALAC,DATVALAC,NUMGRAVE
    ,NUMSINISTRE,ADRESSE,COMPT1,DATDATEECHEANCE,DERNIERE_EMISSION,40 SREGCODE,0 RENRACHAT
    ,TO_NUMBER(NULL) RENSALUTILE,TO_NUMBER(NULL) RENTAUXUTILE,TO_NUMBER(NULL) SALMONTNPLAF,NUMERO_DORDRE_RENTE() NUMERO_ORDRE
    ,F_RECUPERATION_PRETS(NUMSINISTRE,BENEFICIAIRE,AYATYPE,4,P_PERIODE) PRETS
    ,AGE(TRVNUM,BENEFICIAIRE,AYATYPE,P_PERIODE,'V') AGEE_DE
    ,CONCEP1.SUSPENSION_ENP(NUMSINISTRE,BENEFICIAIRE,AYATYPE,4,T3.AGPAIEMENT,P_PERIODE,40) A_SUSPENDRE
    ,SOLDE_PRESTATIONS_EMISES(NUMSINISTRE,T3.TRVNUM,T3.BENEFICIAIRE,AYATYPE,40,P_PERIODE,P_PERIODE,2) SOLDE_PERIODE
    -----------------------
    ,T3.COMPT1 CODE_BCEAO/*PRISE EN COMPTE DU CODE BCEAO SAISI DANS LE DOSSIER RENTES (AJOUTE LE 20 JUIN 2011)*/
    ,T3.CODE_PAYS_IBAN/*PRISE EN COMPTE DU CODE_PAYS_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 17 JUIN 2013)*/
    ,T3.CLE_IBAN/*PRISE EN COMPTE DE LA CLE_IBAN SAISI DANS LE DOSSIER RETRAITE (AJOUTE LE 17 JUIN 2013)*/ 
    ,NULL
    -----------------------     
    FROM REN_AYANT_DROIT T3,REN_AYANT_MOTIF T2
    WHERE T3.AYANT_DROIT=T2.AYANT_DROIT
    AND   UPPER(T3.CODVALAC) ='V'
    AND T2.CODEMOTIF =39 
    AND T2.DATEMOTIF= (SELECT MAX(DATEMOTIF) FROM REN_AYANT_MOTIF RAM WHERE RAM.AYANT_DROIT=T2.AYANT_DROIT)       
    AND PERIODE IN     (SELECT 'A' PERIODICITE 
                FROM DUAL 
                WHERE TO_NUMBER(TO_CHAR(DATDATEECHEANCE,'MM')) = TO_NUMBER(TO_CHAR(P_PERIODE,'MM'))  
                            UNION ALL
                            SELECT 'M' PERIODICITE    FROM DUAL   
                            UNION ALL
                            SELECT 'T' PERIODICITE    FROM DUAL   
                            WHERE TO_NUMBER(TO_CHAR(P_PERIODE,'MM')) IN (3,6,9,12)
                            )    
    AND BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
    AND T3.NUMSINISTRE=NVL(P_SINISTRE,T3.NUMSINISTRE)
    AND AYATYPE=NVL(P_TYPEBEN,AYATYPE)
    AND T3.AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                            ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25
                          ,P_AG10,P_AG50,P_AG26)
    AND NOT EXISTS (
      SELECT *
      FROM CONCEP1.DOSSIER_FRAUDULEUX DF
      WHERE DF.ASSURE = T3.TRVNUM
      AND DF.BENEFICIAIRE = T3.BENEFICIAIRE
      AND DF.Flag_Bloc = 1
    );

     
     
     
     
     --DECLARATION DU CURSEUR RAP_RENTE PARMETTANT DE RECHERCHER LES RAPPELS DE RENTE
     /* 
    --=============================================================
    --
    ON SELECTIONNE TOUS L'(ES) ASSURE(S) ET AYANT(S) DROIT DONT :
    1-
    2-
    3-
    4-
    5-

     --=============================================================
    */ 
   CURSOR RAP_RENTE /*(P_PERIODE    DATE
                    ,P_PLAGE_1     NUMBER
                    ,P_PLAGE_2     NUMBER
                    ,P_SINISTRE         NUMBER
                    ,P_TYPEBEN     CHAR
                    ,P_AG1         AGENCE.AGCODE%TYPE
                    ,P_AG2         AGENCE.AGCODE%TYPE
                    ,P_AG3         AGENCE.AGCODE%TYPE
                    ,P_AG4         AGENCE.AGCODE%TYPE
                    ,P_AG5         AGENCE.AGCODE%TYPE
                    ,P_AG6         AGENCE.AGCODE%TYPE
                    ,P_AG7         AGENCE.AGCODE%TYPE
                    ,P_AG8         AGENCE.AGCODE%TYPE
                    ,P_AG9         AGENCE.AGCODE%TYPE
                    ,P_AG11        AGENCE.AGCODE%TYPE
                    ,P_AG12        AGENCE.AGCODE%TYPE
                    ,P_AG13        AGENCE.AGCODE%TYPE
                    ,P_AG14        AGENCE.AGCODE%TYPE
                    ,P_AG15        AGENCE.AGCODE%TYPE
                    ,P_AG16        AGENCE.AGCODE%TYPE
                    ,P_AG17        AGENCE.AGCODE%TYPE
                    ,P_AG18        AGENCE.AGCODE%TYPE
                    ,P_AG19        AGENCE.AGCODE%TYPE
                    ,P_AG20        AGENCE.AGCODE%TYPE
                    ,P_AG21        AGENCE.AGCODE%TYPE
                    ,P_AG22        AGENCE.AGCODE%TYPE
                    ,P_AG23        AGENCE.AGCODE%TYPE
                    ,P_AG24        AGENCE.AGCODE%TYPE
                    ,P_AG25        AGENCE.AGCODE%TYPE
                    ,P_AG10        AGENCE.AGCODE%TYPE
                    ,P_AG50        AGENCE.AGCODE%TYPE
                    ,P_AG26        AGENCE.AGCODE%TYPE ) */
   IS
     SELECT AYANT_DROIT,DATSINISTRE,ASSURE,RAPMTPENSION1,RAPMTMAJORAT1,RAPMTCOMPMAJO1,RAPMTPENSION2
        ,RAPMTMAJORAT2,RAPMTMAJORAT3,RAPMTARRERAGE4,RAPMTMAJORATION4
        FROM 
        (
            SELECT RAP.AYANT_DROIT,RAP.DATSINISTRE,R.TRVNUM ASSURE,R.TRVNUM BENEFICIAIRE
            ,SUM(NVL(RAPMTPENSION1,0)) RAPMTPENSION1,SUM(NVL(RAPMTMAJORAT1,0)) RAPMTMAJORAT1
            ,SUM(NVL(RAPMTCOMPMAJO1,0)) RAPMTCOMPMAJO1,SUM(NVL(RAPMTPENSION2,0))    RAPMTPENSION2
            ,SUM(NVL(RAPMTMAJORAT2,0)) RAPMTMAJORAT2,SUM(NVL(RAPMTMAJORAT3,0)) RAPMTMAJORAT3
            ,SUM(NVL(RAPMTARRERAGE4,0)) RAPMTARRERAGE4,SUM(NVL(RAPMTMAJORATION4,0)) RAPMTMAJORATION4            
            FROM CONCEP1.RAPPEL_RENTE RAP,CONCEP1.RENTE R,CONCEP1.RENTE_MOTIF RM
            WHERE RAP.AYANT_DROIT = RAP.AYANT_DROIT
            AND RAP.RAPTYPEBENEF=RAP.RAPTYPEBENEF
            AND RAP.DATSINISTRE=RAP.DATSINISTRE
            AND RAP.RAPDATESAISIE=RAP.RAPDATESAISIE
            AND R.DATE_TAUX = RM.DATE_TAUX --AJOUTE LE 03 JUILLET 2013
            AND RAP.RAPDATEMIS IS NULL
            AND RAP.AYANT_DROIT=R.TRVNUM
            AND RAP.DATSINISTRE=R.DATSINISTRE
            AND R.RENDATESAIS = (SELECT MAX(T.RENDATESAIS) 
                                      FROM CONCEP1.RENTE T 
                                      WHERE T.TRVNUM=R.TRVNUM 
                                      AND T.DATSINISTRE=R.DATSINISTRE )--AJOUTE LE 13 MARS 2014 POUR EMPECHER LES EMISSIONS EN DOUBLE            
            AND RAP.TRVNUM BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
            AND RAP.DATSINISTRE =NVL(P_SINISTRE,RAP.DATSINISTRE)
            AND R.AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                       ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                   ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                                   ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)        
            AND R.DATSINISTRE=RM.DATSINISTRE
      AND RM.CODEMOTIF =39
      AND R.SREGCODE=RM.SREGCODE
      AND RM.DATEMOTIF =(SELECT MAX(DATEMOTIF) 
                                           FROM CONCEP1.RENTE_MOTIF MR 
                                           WHERE MR.SREGCODE=RM.SREGCODE  
                                           AND MR.DATSINISTRE=RM.DATSINISTRE
                                           AND MR.DATE_TAUX = RM.DATE_TAUX /*AJOUTE LE 03 JUILLET 2013*/) 
            GROUP BY RAP.AYANT_DROIT,RAP.DATSINISTRE,R.TRVNUM
            --====
            UNION ALL
            --====
            SELECT RAP.AYANT_DROIT,RAP.DATSINISTRE,R.TRVNUM ASSURE,R.BENEFICIAIRE BENEFICIAIRE
            ,SUM(NVL(RAPMTPENSION1,0)) RAPMTPENSION1,SUM(NVL(RAPMTMAJORAT1,0)) RAPMTMAJORAT1
            ,SUM(NVL(RAPMTCOMPMAJO1,0)) RAPMTCOMPMAJO1,SUM(NVL(RAPMTPENSION2,0))    RAPMTPENSION2
            ,SUM(NVL(RAPMTMAJORAT2,0)) RAPMTMAJORAT2,SUM(NVL(RAPMTMAJORAT3,0)) RAPMTMAJORAT3
            ,SUM(NVL(RAPMTARRERAGE4,0)) RAPMTARRERAGE4,SUM(NVL(RAPMTMAJORATION4,0)) RAPMTMAJORATION4
            FROM RAPPEL_RENTE RAP,REN_AYANT_DROIT R
            WHERE RAP.AYANT_DROIT = RAP.AYANT_DROIT
            AND RAP.RAPTYPEBENEF=RAP.RAPTYPEBENEF
            AND RAP.DATSINISTRE=RAP.DATSINISTRE
            AND RAP.RAPDATESAISIE=RAP.RAPDATESAISIE
            AND RAP.RAPDATEMIS IS NULL
            AND RAP.AYANT_DROIT=R.AYANT_DROIT
            AND R.BENEFICIAIRE BETWEEN NVL(P_PLAGE_1,0) AND NVL(P_PLAGE_2,999999999999)
            AND RAP.DATSINISTRE =NVL(P_SINISTRE,RAP.DATSINISTRE)
            AND R.AGPAIEMENT  IN (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                                       ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                                   ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                                   ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26)    
            GROUP BY RAP.AYANT_DROIT,RAP.DATSINISTRE,R.TRVNUM,R.BENEFICIAIRE    
        );
     
    --== 4              
    
    --== 5     
     --DECLARATION D UNE  VARIABLE DE TYPE CURSEUR 
       R_REN                     RENTE_A_EMETTRE%ROWTYPE;
         C_RAP_RENTE    RAP_RENTE%ROWTYPE;
         
       V_PEUT_ETRE_EMIS                         NUMBER(2);
       V_RETOUVE_RAPPEL                         NUMBER;
       V_PEUT_ETRE_RAPPELER                   NUMBER(2);
       
       IND_COLLECT_EMISSION                NUMBER:=1;
       IND_COLLECT_RAPPEL_RENTE             NUMBER:=1;
       IND_COLLECT_REJET_EMISSION         NUMBER:=1;
       IND_COLLECT_REN_AYANT_MOTIF    NUMBER:=1;
        IND_COLLECT_RENTE_MOTIF              NUMBER:=1;       
       PARCOURS                                             NUMBER;
       
       
       V_ECHEANCE_ANNUEL                         DATE;
       V_ECHEANCE_TRIMESTRIEL                 DATE;
       V_ECHEANCE_MENSUEL                         DATE;
       
       A                                                        BINARY_INTEGER;
       F                                                        BINARY_INTEGER;
       EMIS_IND                                            NUMBER:=2;
       V_NUMERO_EXECUTION                        TEMPS_EXECUTION.NUMERO_EXECUTION%TYPE;
       V_MAJ_PRET                                        NUMBER;
       
       V_MESSAGE_ERREUR_1     VARCHAR2(200);
         V_MESSAGE_ERREUR_2                                             VARCHAR2(200);
         V_MESSAGE_ERREUR_3                                             VARCHAR2(200);
         V_MESSAGE_ERREUR_4                                             VARCHAR2(200);
       

BEGIN  

IF P_EXPLOITATION=1 THEN 
    
        --ramassage emission ponctuelle 11 01 2011
        P_RAMASSAGE_VIREMENT_RENTES (P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15
                        ,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);
                        
         IF P_AG24 = 0 THEN   
         
            RAMASSAGE_CARTE_BANCAIRE(4,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                              ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                              ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                              ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);
                              
            P_RAMASSAGE_WARI(6,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                          ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16
                          ,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                          ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);    
          END IF;                          
    
    V_NUMERO_EXECUTION:=NUMERO_DEXECUTION_EMISSION();
    
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    VALUES (V_NUMERO_EXECUTION,1,USER,'RENTE','REALISATION DES EMISSIONS.DEBUT DES OPERATIONS',SYSDATE,NULL,P_PERIODE,NULL,NULL);
    
                                                     
    
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT V_NUMERO_EXECUTION,MAX(ACTION)+1 ,USER,'RENTE','EXECUTION PROCEDURE APP_GENERATION_ECHEACNE.GENERATION DES DATES D''ECHEACNE',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;

END IF;

APP_GENERATION_ECHEANCE(P_PERIODE,V_ECHEANCE_ANNUEL,V_ECHEANCE_TRIMESTRIEL,V_ECHEANCE_MENSUEL);      --( VOIR CODE DE CREATION DE LA PROCEDURE "PROC_GENERATION_ECHEANCE.SQL")


IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT V_NUMERO_EXECUTION,MAX(ACTION)+1 ,USER,'RENTE','EXECUTION PROCEDURE SUSPENSION_ALL_RENTES.SUSPENSION DES ASSURES AYANT PLUS D''UNE PRESTATION VALIDE POUR LE MEME NUMERO SINISTRE',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;

PROC_SUS_REN_ASSURE_DECEDE(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_SINISTRE,P_TYPEBEN,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                          ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                          ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);---AJOUTER LE 20 JUIN 2013 ::: POUR SUSPENDRE LES ASSURES POUR QUI UN CERTIFICAT DE DECES A ETE SAISI


/*
(P_PERIODE DATE,P_PLAGE_1  NUMBER,P_PLAGE_2  NUMBER,P_SINISTRE  NUMBER
                        ,P_TYPEBEN  CHAR,P_AG1   AGENCE.AGCODE%TYPE,P_AG2   AGENCE.AGCODE%TYPE
                        ,P_AG3  AGENCE.AGCODE%TYPE,P_AG4 AGENCE.AGCODE%TYPE,P_AG5  AGENCE.AGCODE%TYPE
                        ,P_AG6  AGENCE.AGCODE%TYPE,P_AG7 AGENCE.AGCODE%TYPE,P_AG8  AGENCE.AGCODE%TYPE
                        ,P_AG9  AGENCE.AGCODE%TYPE,P_AG11 AGENCE.AGCODE%TYPE,P_AG12 AGENCE.AGCODE%TYPE
                        ,P_AG13  AGENCE.AGCODE%TYPE,P_AG14  AGENCE.AGCODE%TYPE,P_AG15   AGENCE.AGCODE%TYPE
                        ,P_AG16   AGENCE.AGCODE%TYPE,P_AG17  AGENCE.AGCODE%TYPE,P_AG18  AGENCE.AGCODE%TYPE
                        ,P_AG19  AGENCE.AGCODE%TYPE,P_AG20  AGENCE.AGCODE%TYPE,P_AG21        AGENCE.AGCODE%TYPE
                        ,P_AG22  AGENCE.AGCODE%TYPE,P_AG23 AGENCE.AGCODE%TYPE,P_AG24  AGENCE.AGCODE%TYPE
                        ,P_AG25  AGENCE.AGCODE%TYPE,P_AG10  AGENCE.AGCODE%TYPE
                        ,P_AG50  AGENCE.AGCODE%TYPE,P_AG26   AGENCE.AGCODE%TYPE)
*/

PROC_SUSPENSION_ALL_RENTES(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_SINISTRE,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8
                          ,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14,P_AG15,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23
                          ,P_AG24,P_AG25,P_AG10,P_AG50,P_AG26);                                                   --( VOIR CODE DE CREATION DE LA PROCEDURE "PROC_SUSPENSION_ALL_RENTES.SQL") 

IF P_EXPLOITATION=1 THEN 
        
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT V_NUMERO_EXECUTION,MAX(ACTION)+1 ,USER,'RENTE','EXECUTION PROCEDURE PROC_SUSPENSION_VIRT_RENTE.SUSPENDRE LES ASSURES ET AYANTS DROITS VIRES QUI N''ONT PAS PRODUIT DE CERTIFICAT DE VIE',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;

PROC_SUSPENSION_VIRT_RENTE(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_SINISTRE,P_TYPEBEN
                           ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14
                           ,P_AG15,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24
                           ,P_AG25,P_AG10,P_AG50,P_AG26);    --( VOIR CODE DE CREATION DE LA PROCEDURE "PROC_SUSPENSION_VIRT_RENTE.SQL") 



IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN D''EXECUTION DES PROCEDURE DE SUSPENSION GLOBALE',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;



    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','CHARGEMENT EN COLLECTION DES RAPELS DE RENTE DISPONIBLE POUR PAIEMENT',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;

--OUVERTURE DU CURSEUR DE SELECTION  DES RAPPELS DE RENTE ET CHARGEMENTS DE LA COLLECTION COLLECT_RAPPEL_RENTE     
OPEN RAP_RENTE/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_SINISTRE,P_TYPEBEN
                ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14
                ,P_AG15,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24
                ,P_AG25,P_AG10,P_AG50,P_AG26)*/;
LOOP
    FETCH RAP_RENTE INTO C_RAP_RENTE;
    EXIT WHEN RAP_RENTE%NOTFOUND;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).AYANT_DROIT            :=C_RAP_RENTE.AYANT_DROIT;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).DATSINISTRE            :=C_RAP_RENTE.DATSINISTRE;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).TRVNUM                      :=C_RAP_RENTE.ASSURE;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTPENSION1        :=C_RAP_RENTE.RAPMTPENSION1;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTMAJORAT1        :=C_RAP_RENTE.RAPMTMAJORAT1;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTCOMPMAJO1        :=C_RAP_RENTE.RAPMTCOMPMAJO1;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTPENSION2        :=C_RAP_RENTE.RAPMTPENSION2;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTMAJORAT2        :=C_RAP_RENTE.RAPMTMAJORAT2;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTMAJORAT3        :=C_RAP_RENTE.RAPMTMAJORAT3;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTARRERAGE4        :=C_RAP_RENTE.RAPMTARRERAGE4;
    COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).RAPMTMAJORATION4    :=C_RAP_RENTE.RAPMTMAJORATION4;
    
  IND_COLLECT_RAPPEL_RENTE:=IND_COLLECT_RAPPEL_RENTE+1;
  COLLECT_RAPPEL_RENTE.EXTEND();
END LOOP;
CLOSE RAP_RENTE;


IF P_EXPLOITATION=1 THEN 
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','SELECTION DE LA POPULATION ET EMTTRE ET DEBUT DES EMISSIONS(BOUCLE PRINCIPALE,CONTROLES,CHARGEMENT EN COLLECTION...,)',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;


--OUVERTURE DU CURSEUR DE SELECTION  DES RENTE A EMTTRE     
OPEN RENTE_A_EMETTRE/*(P_PERIODE,P_PLAGE_1,P_PLAGE_2,P_SINISTRE,P_TYPEBEN
                     ,P_AG1,P_AG2,P_AG3,P_AG4,P_AG5,P_AG6,P_AG7,P_AG8,P_AG9,P_AG11,P_AG12,P_AG13,P_AG14
                      ,P_AG15,P_AG16,P_AG17,P_AG18,P_AG19,P_AG20,P_AG21,P_AG22,P_AG23,P_AG24
                     ,P_AG25,P_AG10,P_AG50,P_AG26)*/;

                                         
LOOP 
    BEGIN ---TEST EMISSION
    
    
    V_PEUT_ETRE_EMIS:=0;
    V_PEUT_ETRE_RAPPELER:=0;
    
            
    FETCH RENTE_A_EMETTRE INTO R_REN;    
    EXIT WHEN RENTE_A_EMETTRE%NOTFOUND;
    
    --POUR TESTER QUE LORS D'UNE EMISSION INDIVIDUELLE LE CURSEUR NOUS RETOURNE UNE INFO
    --
IF R_REN.SOLDE_PERIODE=0 THEN 
    EMIS_IND:=EMIS_IND-1;
        
            
        --CONTORLER POUR LES RENTIERS ANNUELS QUE LA DATE D'ECHEANCE N'EST PAS NULLE 
         --===========================================================================================
         --controle de bonne conformite des dates d'echeance
         
            IF (R_REN.DATDATEECHEANCE IS NULL AND R_REN.RENPERIODE='A' AND R_REN.AYATYPE ='T') THEN
            
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                          :=R_REN.AGPAIEMENT;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                            :=R_REN.TRVNUM;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE            :=R_REN.DATSINISTRE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE                :=R_REN.BENEFICIAIRE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE        :=R_REN.AYATYPE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                        :='LA DATE D''ECHEANCE DE L''ASSURE N''EST PAS RENSEIGNEE.IL NE PEUT ETRE EMIS';
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION          :='RENTE';
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1                :=NULL;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2                :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3                :=0;
                    COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4                :=0;    
                    
                    V_PEUT_ETRE_EMIS:=1;
                    IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
                    COLLECT_REJET_EMISSION.EXTEND();
            
            END IF;    
                                    
         
         IF ( UPPER(R_REN.RENPERIODE) ='A' AND R_REN.AYATYPE ='T'
                 AND ( TO_NUMBER(TO_CHAR(R_REN.DATDATEECHEANCE,'MM')) != TO_NUMBER(TO_CHAR(V_ECHEANCE_ANNUEL,'MM')) ) 
               ) THEN
            
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='L''ASSURE N''EST PAS UN ANNUEL DE CE MOIS.IL NE PEUT ETRE EMIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
                    
         END IF;
         --===========================================================================================
         
         

         --===========================================================================================
        --CONTROLE DU NOMBRE D'EMISSIONS NON PAYEES
        /* AJOUTE LE 07 JUIN 2011 POUR SUSPENDRE AUTOMATIQUEMENT LES BENEFICIAIRES QUI N'ONT PAS PERCUS 
           LEURS 2 DERNIERS TRIMESTRES POUR L'APPEX OU LEURS 2 DERNIERS MOIS POUR LES AUTRES AGENCES */
        IF P_EXPLOITATION=1 THEN           
        
         --===========================================================================================
        --CONTROLE QUE LA CONJOINTE PEUT TOUJOURS EMISE (VERIFICATION DE LA DATE D'ARRET RELATIF AU ANTICIPE) 
         
           IF (R_REN.A_SUSPENDRE>2) THEN    
                     
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
                   COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE          :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                   COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
                   COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
                         COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
                        
                         V_PEUT_ETRE_EMIS:=1;
                         IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;        
                         COLLECT_REJET_EMISSION.EXTEND(); 
            
            
                    IF R_REN.AYATYPE!='T' THEN 
                      COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).AYANT_DROIT     :=R_REN.AYANT_DROIT;             
                                   COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).CODEMOTIF      :=24;             
                                   COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).REMARQUE       :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                                   COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).DATEMOTIF         :=SYSDATE;
                                 
                                     IND_COLLECT_REN_AYANT_MOTIF:=IND_COLLECT_REN_AYANT_MOTIF+1;
                                     COLLECT_REN_AYANT_MOTIF.EXTEND();
                        
                    ELSE               
                        COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).TRVNUM                                 :=R_REN.TRVNUM;                
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).CODEMOTIF                            :=24;               
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).REMARQUE                             :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY')||'.  CET(TE) ASSURE(E) A DES EMISSIONS NON PAYEES.-NOTE DE SERVICE N°183/2006/DG/CNPS 09-05-2006';
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATEMOTIF                            :=SYSDATE;                     
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATSINISTRE                          :=R_REN.DATSINISTRE;                 
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).SREGCODE                                :=R_REN.SREGCODE;            
                                    COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATE_TAUX                            :=R_REN.DATE_TAUX;    
                                    
                                    IND_COLLECT_RENTE_MOTIF:=IND_COLLECT_RENTE_MOTIF+1;
                                    COLLECT_RENTE_MOTIF.EXTEND();               
                    END IF;
            
            
           END IF;
         END IF;
          --===========================================================================================
        

         
         
        --CONTROLE DE LA DATE D''ECHEANCE EN VU DE L''EMISSION DES NOUVEAUX DOSSIERS
        --===========================================================================================
         --controle des dates d'echeance des nouveaux dossiers afin de savoir 
         --si leurs emissions est possibles ou non pour la periode d'emission 
         --passée en parametre    
         
         IF R_REN.CODEDROIT IS NULL THEN  
                
        IF (UPPER(R_REN.RENPERIODE)='A' AND R_REN.DATDATEECHEANCE>V_ECHEANCE_ANNUEL AND R_REN.AYATYPE ='T') THEN 
                     
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='L''ASSURE NE PEUT ETRE EMIS POUR CE MOIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;        
             COLLECT_REJET_EMISSION.EXTEND();
                
            END IF;        
            
            
            
            IF (UPPER(R_REN.RENPERIODE)='T' AND R_REN.DATDATEECHEANCE>V_ECHEANCE_TRIMESTRIEL AND R_REN.AYATYPE ='T') THEN
            
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                          :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                            :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE            :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE                :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE        :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                         :='L''ASSURE NE PEUT ETRE EMIS POUR CE MOIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION          :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1                :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2                :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3                :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4                :=0;    
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
             
             END IF;        
            
            
            IF (UPPER(R_REN.RENPERIODE)='M' AND R_REN.DATDATEECHEANCE>V_ECHEANCE_MENSUEL AND R_REN.AYATYPE ='T') THEN 
            
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                          :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                            :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE            :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE                :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE        :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION        :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                        :='L''ASSURE NE PEUT ETRE EMIS POUR CE MOIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT                 :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION          :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1                :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2                :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3                :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4                :=0;    
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
            
             END IF;        
            
         END IF;     
         --============================================================================================    
                      
         
         
         --CONTROLE DE L'AGE DE L'ORPHELIN 
        --===========================================================================================
        --L'ORPHELIN AYANT PLUS DE 21 NE PEUT ETRE EMIS
        --L'ORPHELIN N'AYANT PAS D'EXTRAIT NE PEUT ETRE EMIS
         
          IF (R_REN.AYATYPE ='E' AND (R_REN.AGEE_DE > 21 OR R_REN.AGEE_DE <0)) THEN 
          
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='L''ORPHELIN N''A PAS D''EXTRAIT DE NAISSANCE OU A PLUS DE 21 ANS.IL NE PEUT ETRE EMIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
            

             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
          
          
               COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).AYANT_DROIT    :=R_REN.AYANT_DROIT;             
               COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).CODEMOTIF      :=42;             
               COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).REMARQUE       :='L''ORPHELIN N''A PAS D''EXTRAIT DE NAISSANCE OU A PLUS DE 21 ANS';           
               COLLECT_REN_AYANT_MOTIF(IND_COLLECT_REN_AYANT_MOTIF).DATEMOTIF         :=SYSDATE;
             
             IND_COLLECT_REN_AYANT_MOTIF:=IND_COLLECT_REN_AYANT_MOTIF+1;
             COLLECT_REN_AYANT_MOTIF.EXTEND();
              
                       
             V_PEUT_ETRE_EMIS:=1;
             
          ELSIF (R_REN.AYATYPE !='E' AND R_REN.AGEE_DE <0) THEN 
           
           COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='CET(TE) ASSURE(E) OU CET AYANT DROIT N'' A PAS D''EXTRAIT DE NAISSANCE.DEMANDER LA PIECE POUR UNE MISE A JOUR DU SYSTEME';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
             COLLECT_REJET_EMISSION.EXTEND();
            
          END IF;
        --===========================================================================================
        
        
        
        --RECHERCHER A PARTIR DE LA COLLECTION COLLECT_RAPPEL_RENTE LE MONTANT DU RAPPEL DU BENEFICIAIRE EN COURS DE TRAITEMENT 
        IND_COLLECT_RAPPEL_RENTE:=1;
        V_PEUT_ETRE_RAPPELER:=1;
        V_RETOUVE_RAPPEL:=0;
        WHILE ( IND_COLLECT_RAPPEL_RENTE<=COLLECT_RAPPEL_RENTE.COUNT)  LOOP
                IF  (COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).AYANT_DROIT=R_REN.AYANT_DROIT
                     AND COLLECT_RAPPEL_RENTE(IND_COLLECT_RAPPEL_RENTE).DATSINISTRE=R_REN.DATSINISTRE ) THEN 
                     
                     V_RETOUVE_RAPPEL:=IND_COLLECT_RAPPEL_RENTE;
                     V_PEUT_ETRE_RAPPELER:=0;
                     EXIT;
                END IF;
                     
                     IND_COLLECT_RAPPEL_RENTE:=IND_COLLECT_RAPPEL_RENTE+1;
        END LOOP;
        
        
        
        
        --CONTROLE POUR LES CAS SPECIFIQUES (APCAS_SPECIFIQUES) 
        --===========================================================================================
        -- RACHAT PARTIEL 
        IF (R_REN.SREGCODE = 41 AND (R_REN.CODEDROIT IS NULL OR R_REN.CODEDROIT =' ')) THEN NULL;
          -- RACHAT TOTAL ALLOCATION UNIQUE    
        ELSIF (R_REN.SREGCODE = 42 AND (R_REN.CODEDROIT IS NULL OR R_REN.CODEDROIT =' ')) THEN
            
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).TRVNUM        :=R_REN.TRVNUM;                
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).CODEMOTIF   :=17;               
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).REMARQUE    :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');               
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATEMOTIF   :=SYSDATE;                     
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATSINISTRE :=R_REN.DATSINISTRE;                 
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).SREGCODE       :=R_REN.SREGCODE;            
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATE_TAUX       :=R_REN.DATE_TAUX;
            
            IND_COLLECT_RENTE_MOTIF:=IND_COLLECT_RENTE_MOTIF+1;
            COLLECT_RENTE_MOTIF.EXTEND();
           
        -- RACHAT CAUSE DEPART DEFINITIF
        ELSIF (R_REN.SREGCODE = 43 AND (R_REN.CODEDROIT IS NULL OR R_REN.CODEDROIT =' ')) THEN
                  
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).TRVNUM        :=R_REN.TRVNUM;                
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).CODEMOTIF   :=15;               
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).REMARQUE    :='EMISSION DU '||TO_CHAR(P_PERIODE,'DD/MM/YYYY');               
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATEMOTIF   :=SYSDATE;                     
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATSINISTRE :=R_REN.DATSINISTRE;                 
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).SREGCODE       :=R_REN.SREGCODE;
            COLLECT_RENTE_MOTIF(IND_COLLECT_RENTE_MOTIF).DATE_TAUX       :=R_REN.DATE_TAUX;
            
            IND_COLLECT_RENTE_MOTIF:=IND_COLLECT_RENTE_MOTIF+1;                  
            COLLECT_RENTE_MOTIF.EXTEND();
        -- 
        -- 47 REVISION AVANT RACHAT AT  ET  48 REVISION APRES RACHAT AT 
        ELSIF (R_REN.SREGCODE IN (47,48) AND (R_REN.CODEDROIT IS NULL OR R_REN.CODEDROIT =' ')) THEN  NULL;        
        ELSE
            R_REN.RENRACHAT := 0;
        END IF;
        --===========================================================================================
        
        
        
        --===========================================================================================
        --CONTROLE DE COGERANCE DU CODE AGENCE PAR RAPPORT AU CODE LOCALITE POUR LES ASSURES DE L'APPEX
        IF ( (R_REN.AGPAIEMENT=24 AND R_REN.LOCALITE<7000) OR (R_REN.AGPAIEMENT!=24 AND R_REN.LOCALITE>7000) ) THEN 
                     
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='L''AGENCE DE PAIEMENT NE CONCORDE PAS AU CODE LOCALITE.NE PEUT ETRE EMIS';
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
       COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
             COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;    
            
             V_PEUT_ETRE_EMIS:=1;
             IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;        
             COLLECT_REJET_EMISSION.EXTEND();
                
            END IF;        
        --===========================================================================================
        
        
                
        --CONTROLE DU NET A PAYER
        --===========================================================================================
        /*
        CE CONTROLE PERMET D'EVITER D'EMETTRE TOUT ASSURE DONT LE NET A PAYER SERAIT NEGATIF
        */    
         IF V_RETOUVE_RAPPEL!=0 THEN 
         
                     IF (R_REN.RENMONTANT+R_REN.RENMAJORE+R_REN.RENCOMPMAJORE
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTPENSION1
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT1
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTCOMPMAJO1
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTPENSION2
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT2
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT3
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTARRERAGE4
                        +COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORATION4    
                        -R_REN.PRETS+R_REN.RENRACHAT)<0 THEN 
                                
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='LE NET A PAYER EST NEAGTIF.REVOIR LA GESTION DES PRETS';
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;            
                                             
                        IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;
                        COLLECT_REJET_EMISSION.EXTEND();             
                                             
                        V_PEUT_ETRE_EMIS:=1;
                        V_PEUT_ETRE_RAPPELER:=1;
                        --
                        --  DEPLACER DANS LE BLOC DES BENEFICIARES A EMETTRE (IF V_PEUT_ETRE_EMIS=0 THEN)-- Modifié le 29/04/2009
                        --                 
                        --  ELSE 
                        --    COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPDATEMIS:=SYSDATE;            
                    END IF;         
                 
         ELSE           
             
                    IF (R_REN.RENMONTANT+R_REN.RENMAJORE+R_REN.RENCOMPMAJORE-R_REN.PRETS+R_REN.RENRACHAT)<0 THEN 
                  
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).AGENCE                      :=R_REN.AGPAIEMENT;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).ASSURE                        :=R_REN.TRVNUM;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).NUMERO_SINISTRE        :=R_REN.DATSINISTRE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).BENEFICIAIRE            :=R_REN.BENEFICIAIRE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).TYPE_BENEFICIAIRE    :=R_REN.AYATYPE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PERIODE_EMISSION    :=P_PERIODE;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).REMARQUE                    :='LE NET A PAYER EST NEAGTIF.REVOIR LA GESTION DES PRETS';
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).STATUT            :=NULL;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).PRESTATION        :='RENTE';
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_1            :=NULL;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_2            :=SYSDATE;--NULL; POUR METTRE LA DATE D EMISSION
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_3            :=0;
                        COLLECT_REJET_EMISSION(IND_COLLECT_REJET_EMISSION).SUPPLEMENT_4            :=0;            
                                             
                        IND_COLLECT_REJET_EMISSION:=IND_COLLECT_REJET_EMISSION+1;                
                        COLLECT_REJET_EMISSION.EXTEND();             
                                                     
                        V_PEUT_ETRE_EMIS:=1;
                        V_PEUT_ETRE_RAPPELER:=1;
                    
                    END IF;
       
         END IF;
        --===========================================================================================
        
        
        
        IF V_PEUT_ETRE_EMIS=0 THEN 
                    --AJOUT DANS LA COLLECTION  COLLECT_EMISSION
                    --===============================
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).ASSURE                                            :=R_REN.TRVNUM;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).BENEFICIAIRE                                      :=R_REN.BENEFICIAIRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).TYPE_BENEFICIAIRE                                 :=R_REN.AYATYPE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_SINISTRE_DOSSIER                           :=R_REN.DATSINISTRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ENTREPRISE                                        :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_SOUS_REGIME                                  :=NVL(R_REN.SREGCODE,40);
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ETAT                                              :='E';
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).DIRECTION                                         :=R_REN.DRPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AGENCE_EMISSION                                   :=R_REN.AGPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AGENCE_PAIEMENT                                   :=R_REN.AGPAIEMENT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_BANQUE                                       :=R_REN.RENBANQUE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_SUCCURSALE                                   :=R_REN.RENSUCCURSALE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_COMPTE                                     :=R_REN.RENCPTEBANQUE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CLE_RIB                                           :=R_REN.CLE_RIB;       --NE PAS OUBLIER 
                    
                    
                /*IL A DECIDE CE QUI SUIT LORS DES TRAVAUX DE PAIEMENT GUICHET CNCE :
                     - LES EMISSIONS INDIVIDUELLES ( P_EXPLOITATION=0 ) PORTENT LE MODE DE PAIEMENT CHEQUE
                     - LES PREMIERS DROITS (R_RET.CODEDROIT IS NULL) PORTENT LE MODE DE PAIEMENT CHEQUE                        
                */            
                IF ( (P_EXPLOITATION=0 AND R_REN.RENMODEPAIE=1) OR (P_EXPLOITATION=1 AND R_REN.CODEDROIT IS NULL) OR (R_REN.SREGCODE = 42) OR ( UPPER(R_REN.RENPERIODE) !='M' AND R_REN.RENMODEPAIE=1 AND R_REN.AGPAIEMENT IN (1,2,3,4,6,7,8,10,22,25) ) ) AND R_REN.LOCALITE<7000 THEN        /*CONDITION AJOUTEE LE 13 JUIN 2011 LORS DES TRAVAUX DE PAIEMENT GUICHET CNCE  */          
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT      := 4;
                ELSE
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_MODE_PAIEMENT      :=R_REN.RENMODEPAIE;
                END IF;
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_LOCALITE                                     :=R_REN.LOCALITE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_COMMUNE                                      :=R_REN.COMMUNE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).CODE_QUARTIER                                     :=R_REN.QUARTIER;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).DATE_EMISSION                                     :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).EMIS_PAR                                          :=USER;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PERIODE_EMISE                                     :=P_PERIODE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).ADRESSE                                           :=R_REN.RENADRESSE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).NUMERO_DORDRE                                     :=R_REN.NUMERO_ORDRE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).MONTANT_RETENUE                                   :=R_REN.PRETS;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IGR                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IGR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_NOMBRE_PARTS                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IGR                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IGR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IGR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CN                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CN                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CN                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CN                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_CN                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_IS                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_IS                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_IS                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_IS                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_RAPPEL_IS                           :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CNR                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CNR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CNR                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CNR                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_CODE_CNS                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_BASE_IMPOSABLE_CNS                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CNS                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IMPOT_MONTANT_CUMULE_CNS                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRGRET                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRCRET                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTIPRAORET                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRG                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPRC                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRG                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIMONTRAPSRC                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIGUICHEPAIRET                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPMTIPRAO                                 :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_RETNUMRETRAITE                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMICAISSE                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIBONIFICATION                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).RET_EMIRAPBONIFICATION                            :=0;
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIMTPENSION                                  :=R_REN.RENMONTANT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIMTMAJORATION                               :=R_REN.RENMAJORE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMICOMPMAJORAT                                :=R_REN.RENCOMPMAJORE;
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIGUICHERT                                   :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRACHAT                                     :=R_REN.RENRACHAT;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_NUMGRAVE                                      :=R_REN.RENNUMGRAVE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_PERIODE                                       :=R_REN.RENPERIODE;
                    
                        
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMIPERIODE                                     :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMIMONTANT                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_PJCODE                                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_PJDATEETABLIS                                  :=SYSDATE;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_NUMGUICHET                                     :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_TYPEINTERESSE                                  :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_NBMOISRAPPEL                                   :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_MONTANTRAPPEL                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATFRACT                                       :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_EMITYPEGASA                                    :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_CODEORD                                        :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_CODEAC                                         :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATEORD                                        :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AF_DATEAC                                         :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).APERIODIQUE_PF_EMIMONTANT                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).APERIODIQUE_PF_MONTANTRAPPEL                      :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_PLEINMONTANT                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_DEMIMONTANT                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).IJATMP_DEUXTMONTANT                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).FMPHAT_FM_MONTANT_EXPOSE                          :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).FMPHAT_FM_MONTANT_ACCEPTE                         :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMIMONTPRET                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMIGUICHEPAIPRET                             :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_PRETADRESSEBENEF                             :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMICAISSE                                    :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).PRET_EMICODEPRET                                  :=0;
                    
                    --IF P_PLAGE_2 IS NULL THEN
                    /*
                    POUR POSITIONNER AUTOMATIQUEMENT LE MARQUEUR POUR LES EMISSIONS INDIVIDUELLES DES PRESTATIONS EXTERIEURES
                    */
                    IF (P_PLAGE_2 IS NULL) OR (P_PLAGE_2 IS NOT NULL AND P_AG24 =24) THEN 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).MARQUEUR_VISIBILITE                              :='I';
                    ELSE 
                        COLLECT_EMISSION(IND_COLLECT_EMISSION).MARQUEUR_VISIBILITE                              :=NULL;
                    END IF;
                    
                    
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).AUTORISATION_ANNULATION                           :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_1                                  :=NULL;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_2                                  :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_3                                  :=0;
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=0;
                    --COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=NVL(R_REN.CODE_BCEAO,'0');--PRECISION DU CODE BANQUE DU RIB (AJOUTE LE 20 JUIN 2011)
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_4                                  :=NVL(R_REN.CODE_PAYS_IBAN||R_REN.CLE_IBAN||R_REN.CODE_BCEAO,'0');--PRECISION DU CODE BANQUE DU RIB (AJOUTE LE 20 JUIN 2011)
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).SUPPLEMENTAIRE_5                                  :=0; 
                   
                   
                   IF V_PEUT_ETRE_RAPPELER=0 THEN                  
                       --AJOUT DANS LA COLLECTION COLLECT_EMISSION AVEC LE RAPPEL;
                   -----------------------------------------------------------------------------------------------
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPARRERAGE4                               :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTARRERAGE4;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT4                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORATION4;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION1                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTPENSION1;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT1                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT1;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPCOMPMAJO1                               :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTCOMPMAJO1;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION2                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTPENSION2;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT2                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT2;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT3                                :=COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPMTMAJORAT3;
                    --- MISE A JOUR DE LA COLLECTION DES RAPPELS  --- 
                    --- Ajouté le 29/04/2009 pour empécher que les rappels soient mis à jour sans que l'assuré ait été 
                    --- émis pour la période.
                        COLLECT_RAPPEL_RENTE(V_RETOUVE_RAPPEL).RAPDATEMIS:=SYSDATE;
                        
                   --AJOUT DANS LA COLLECTION COLLECT_EMISSION SANS LE RAPPEL;
                   -----------------------------------------------------------------------------------------------
                
                   ELSIF V_PEUT_ETRE_RAPPELER!=0 THEN            
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPARRERAGE4                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT4                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION1                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT1                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPCOMPMAJO1                               :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPPENSION2                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT2                                :=0;
                    COLLECT_EMISSION(IND_COLLECT_EMISSION).REN_EMIRAPMAJORAT3                                :=0;                   
                               
                            
                   END IF;
                    
                    IND_COLLECT_EMISSION:=IND_COLLECT_EMISSION+1;
                    COLLECT_EMISSION.EXTEND();
                    
                    
        END IF;

END IF; 


      EXCEPTION
          WHEN OTHERS THEN
                        INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                        SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','ERREUR INCONNU SUR ASSURE = '||TO_CHAR(R_REN.TRVNUM)||' BENEFICIAIRE = '||TO_CHAR(R_REN.BENEFICIAIRE)||' TYPE BENEFICIAIRE = '||R_REN.AYATYPE||' NUMERO SINISTRE = '||TO_CHAR(R_REN.DATSINISTRE),SYSDATE,NULL,P_PERIODE,NULL,NULL
                        FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;            
      END;   ----TEST EMISSION
        
END LOOP;
CLOSE RENTE_A_EMETTRE;

IF P_EXPLOITATION=1 THEN     
    INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
    SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN DE BOUBLE PRINCIPALE.DEBUT DES OPRATIONS D''INSERTIONS(DECHARGE DES COLLECTIONS VERS LES TABLES)',SYSDATE,NULL,P_PERIODE,NULL,NULL
    FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
END IF;


--==INSERTION DES VALEURS DES COLLECTIONS VERS LES TABLES DE DESTINATION 
         
      FOR A IN 1..((COLLECT_REJET_EMISSION.COUNT)-1)
      LOOP    
          INSERT INTO REJET_EMISSION VALUES (COLLECT_REJET_EMISSION(A).AGENCE,
                                                                           COLLECT_REJET_EMISSION(A).ASSURE,
                                                                                 COLLECT_REJET_EMISSION(A).NUMERO_SINISTRE,
                                                                                 COLLECT_REJET_EMISSION(A).BENEFICIAIRE,
                                                                                 COLLECT_REJET_EMISSION(A).TYPE_BENEFICIAIRE,
                                                                                 COLLECT_REJET_EMISSION(A).PERIODE_EMISSION,
                                                                                 COLLECT_REJET_EMISSION(A).REMARQUE,
                                                                           COLLECT_REJET_EMISSION(A).STATUT,
                                                                           COLLECT_REJET_EMISSION(A).PRESTATION,
                                                                                 COLLECT_REJET_EMISSION(A).SUPPLEMENT_1,
                                                                                 COLLECT_REJET_EMISSION(A).SUPPLEMENT_2,
                                                                                 COLLECT_REJET_EMISSION(A).SUPPLEMENT_3,
                                                                                 COLLECT_REJET_EMISSION(A).SUPPLEMENT_4
                                                                                 ); 
      END LOOP;
      A:=COLLECT_REJET_EMISSION.COUNT();
      
      IF P_EXPLOITATION=1 THEN          
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN D''INSERTION DES REJETS',SYSDATE,A,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
      END IF;
      
      
     
    FOR A IN 1..((COLLECT_REN_AYANT_MOTIF.COUNT)-1)
      LOOP    
          INSERT INTO REN_AYANT_MOTIF VALUES (COLLECT_REN_AYANT_MOTIF(A).AYANT_DROIT,
                                                                                    COLLECT_REN_AYANT_MOTIF(A).CODEMOTIF,
                                                                                    COLLECT_REN_AYANT_MOTIF(A).REMARQUE,
                                                                                    COLLECT_REN_AYANT_MOTIF(A).DATEMOTIF
                                                                                 ); 
      END LOOP;
      A:=    COLLECT_REN_AYANT_MOTIF.COUNT();
      
      IF P_EXPLOITATION=1 THEN 
           INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN D''INSERTION DES SUSPENSIONS AYANTS DROITS.(INSERT DANS LA TABLE REN_AYANT_MOTIF)',SYSDATE,A,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
      END IF;
      
      
      FOR A IN 1..((COLLECT_RENTE_MOTIF.COUNT)-1)
      LOOP    
          INSERT INTO RENTE_MOTIF VALUES (COLLECT_RENTE_MOTIF(A).TRVNUM,
                                                                            COLLECT_RENTE_MOTIF(A).CODEMOTIF,
                                                                            COLLECT_RENTE_MOTIF(A).REMARQUE,
                                                                            COLLECT_RENTE_MOTIF(A).DATEMOTIF,
                                                                            COLLECT_RENTE_MOTIF(A).DATSINISTRE,
                                                                            COLLECT_RENTE_MOTIF(A).SREGCODE,
                                                                            COLLECT_RENTE_MOTIF(A).DATE_TAUX
                                                                         );
      END LOOP;
        A:=    COLLECT_RENTE_MOTIF.COUNT();
        
        IF P_EXPLOITATION=1 THEN 
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
          SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN D''INSERTION DES SUSPENSIONS ASSURES.(INSERT DANS LA TABLE RENTE_MOTIF)',SYSDATE,A,P_PERIODE,NULL,NULL
          FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
        END IF;
        
    
   --  FORALL C IN COLLECT_EMISSION.FIRST..COLLECT_EMISSION.LAST     INSERT INTO EMISSION VALUES COLLECT_EMISSION(C);
        
        V_MAJ_PRET:=0;
        FOR A IN 1..((COLLECT_EMISSION.COUNT)-1)
      LOOP
          
                ---ULTIMATE CONTROLE DU NET A PAYER
                IF (NVL(COLLECT_EMISSION(A).REN_EMIMTPENSION,0)+NVL(COLLECT_EMISSION(A).REN_EMIMTMAJORATION,0)+NVL(COLLECT_EMISSION(A).REN_EMICOMPMAJORAT,0) 
                + NVL(COLLECT_EMISSION(A).REN_EMIRAPARRERAGE4,0)+NVL(COLLECT_EMISSION(A).REN_EMIRAPMAJORAT4,0)+NVL(COLLECT_EMISSION(A).REN_EMIRAPPENSION1,0) 
                + NVL(COLLECT_EMISSION(A).REN_EMIRAPMAJORAT1,0)+NVL(COLLECT_EMISSION(A).REN_EMIRAPCOMPMAJO1,0)+NVL(COLLECT_EMISSION(A).REN_EMIRAPPENSION2,0) 
                + NVL(COLLECT_EMISSION(A).REN_EMIRACHAT,0)+ NVL(COLLECT_EMISSION(A).REN_EMIRAPMAJORAT2,0)+NVL(COLLECT_EMISSION(A).REN_EMIRAPMAJORAT3,0)
                -NVL(COLLECT_EMISSION(A).MONTANT_RETENUE,0)) >0 THEN          
          
                            INSERT INTO PRESTATIONS_EMISES_2(
                                                    ASSURE,BENEFICIAIRE,TYPE_BENEFICIAIRE,NUMERO_SINISTRE_DOSSIER,ENTREPRISE,CODE_SOUS_REGIME,ETAT,DIRECTION,AGENCE_EMISSION,AGENCE_PAIEMENT
                                                    ,CODE_BANQUE,CODE_SUCCURSALE,NUMERO_COMPTE,CLE_RIB ,CODE_MODE_PAIEMENT,CODE_LOCALITE,CODE_COMMUNE,CODE_QUARTIER,DATE_EMISSION,EMIS_PAR
                                                    ,PERIODE_EMISE,ADRESSE,NUMERO_DORDRE,MONTANT_RETENUE
                                                    ,IMPOT_CODE_IGR,IMPOT_BASE_IMPOSABLE_IGR,IMPOT_NOMBRE_PARTS,IMPOT_MONTANT_IGR,IMPOT_MONTANT_CUMULE_IGR,IMPOT_MONTANT_RAPPEL_IGR
                                                    ,IMPOT_CODE_CN,IMPOT_BASE_IMPOSABLE_CN,IMPOT_MONTANT_CN,IMPOT_MONTANT_CUMULE_CN,IMPOT_MONTANT_RAPPEL_CN
                                                    ,IMPOT_CODE_IS,IMPOT_BASE_IMPOSABLE_IS,IMPOT_MONTANT_IS,IMPOT_MONTANT_CUMULE_IS,IMPOT_MONTANT_RAPPEL_IS
                                                    ,IMPOT_CODE_CNR,IMPOT_BASE_IMPOSABLE_CNR,IMPOT_MONTANT_CNR,IMPOT_MONTANT_CUMULE_CNR
                                                    ,IMPOT_CODE_CNS,IMPOT_BASE_IMPOSABLE_CNS,IMPOT_MONTANT_CNS,IMPOT_MONTANT_CUMULE_CNS
                                                    ,RET_EMIMONTRGRET,RET_EMIMONTRCRET,RET_EMIMONTIPRAORET,RET_EMIMONTRAPRG,RET_EMIMONTRAPRC
                                                    ,RET_EMIMONTRAPSRG,RET_EMIMONTRAPSRC,RET_EMIGUICHEPAIRET,RET_EMIRAPMTIPRAO,RET_RETNUMRETRAITE
                                                    ,RET_EMICAISSE,RET_EMIBONIFICATION,RET_EMIRAPBONIFICATION        
                                                    ,REN_EMIMTPENSION,REN_EMIMTMAJORATION,REN_EMICOMPMAJORAT
                                                    ,REN_EMIRAPARRERAGE4,REN_EMIRAPMAJORAT4,REN_EMIRAPPENSION1,REN_EMIRAPMAJORAT1,REN_EMIRAPCOMPMAJO1
                                                    ,REN_EMIRAPPENSION2,REN_EMIRAPMAJORAT2,REN_EMIRAPMAJORAT3,REN_EMIGUICHERT,REN_EMIRACHAT
                                                    ,REN_NUMGRAVE,REN_PERIODE            
                                                    ,AF_EMIPERIODE,AF_EMIMONTANT,AF_PJCODE,AF_PJDATEETABLIS,AF_NUMGUICHET,AF_TYPEINTERESSE,AF_NBMOISRAPPEL
                                                    ,AF_MONTANTRAPPEL,AF_DATFRACT,AF_EMITYPEGASA,AF_CODEORD,AF_CODEAC,AF_DATEORD,AF_DATEAC
                                                    ,APERIODIQUE_PF_EMIMONTANT,APERIODIQUE_PF_MONTANTRAPPEL
                                                    ,IJATMP_PLEINMONTANT,IJATMP_DEMIMONTANT,IJATMP_DEUXTMONTANT
                                                    ,FMPHAT_FM_MONTANT_EXPOSE,FMPHAT_FM_MONTANT_ACCEPTE
                                                    ,PRET_EMIMONTPRET,PRET_EMIGUICHEPAIPRET,PRET_PRETADRESSEBENEF,PRET_EMICAISSE,PRET_EMICODEPRET
                                                    ,MARQUEUR_VISIBILITE,AUTORISATION_ANNULATION
                                                    ,SUPPLEMENTAIRE_1,SUPPLEMENTAIRE_2,SUPPLEMENTAIRE_3,SUPPLEMENTAIRE_4,SUPPLEMENTAIRE_5 
                                                    )                                                                    
                          VALUES (
                                                        COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE,COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER
                                                        ,COLLECT_EMISSION(A).ENTREPRISE,COLLECT_EMISSION(A).CODE_SOUS_REGIME,COLLECT_EMISSION(A).ETAT,COLLECT_EMISSION(A).DIRECTION
                                                        ,COLLECT_EMISSION(A).AGENCE_EMISSION,COLLECT_EMISSION(A).AGENCE_PAIEMENT,COLLECT_EMISSION(A).CODE_BANQUE,COLLECT_EMISSION(A).CODE_SUCCURSALE
                                                        ,COLLECT_EMISSION(A).NUMERO_COMPTE,COLLECT_EMISSION(A).CLE_RIB ,COLLECT_EMISSION(A).CODE_MODE_PAIEMENT,COLLECT_EMISSION(A).CODE_LOCALITE
                                                        ,COLLECT_EMISSION(A).CODE_COMMUNE,COLLECT_EMISSION(A).CODE_QUARTIER,COLLECT_EMISSION(A).DATE_EMISSION,COLLECT_EMISSION(A).EMIS_PAR
                                                        ,COLLECT_EMISSION(A).PERIODE_EMISE,COLLECT_EMISSION(A).ADRESSE,COLLECT_EMISSION(A).NUMERO_DORDRE,COLLECT_EMISSION(A).MONTANT_RETENUE
                                                        ,COLLECT_EMISSION(A).IMPOT_CODE_IGR,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_IGR,COLLECT_EMISSION(A).IMPOT_NOMBRE_PARTS,COLLECT_EMISSION(A).IMPOT_MONTANT_IGR,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_IGR,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IGR
                                                        ,COLLECT_EMISSION(A).IMPOT_CODE_CN,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CN,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_CN
                                                        ,COLLECT_EMISSION(A).IMPOT_CODE_IS,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_IS,COLLECT_EMISSION(A).IMPOT_MONTANT_RAPPEL_IS
                                                        ,COLLECT_EMISSION(A).IMPOT_CODE_CNR,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CNR,COLLECT_EMISSION(A).IMPOT_MONTANT_CNR,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CNR
                                                        ,COLLECT_EMISSION(A).IMPOT_CODE_CNS,COLLECT_EMISSION(A).IMPOT_BASE_IMPOSABLE_CNS,COLLECT_EMISSION(A).IMPOT_MONTANT_CNS,COLLECT_EMISSION(A).IMPOT_MONTANT_CUMULE_CNS
                                                        ,COLLECT_EMISSION(A).RET_EMIMONTRGRET,COLLECT_EMISSION(A).RET_EMIMONTRCRET,COLLECT_EMISSION(A).RET_EMIMONTIPRAORET
                                                        ,COLLECT_EMISSION(A).RET_EMIMONTRAPRG,COLLECT_EMISSION(A).RET_EMIMONTRAPRC,COLLECT_EMISSION(A).RET_EMIMONTRAPSRG
                                                        ,COLLECT_EMISSION(A).RET_EMIMONTRAPSRC,COLLECT_EMISSION(A).RET_EMIGUICHEPAIRET,COLLECT_EMISSION(A).RET_EMIRAPMTIPRAO
                                                        ,COLLECT_EMISSION(A).RET_RETNUMRETRAITE,COLLECT_EMISSION(A).RET_EMICAISSE,COLLECT_EMISSION(A).RET_EMIBONIFICATION
                                                        ,COLLECT_EMISSION(A).RET_EMIRAPBONIFICATION
                                                        ,COLLECT_EMISSION(A).REN_EMIMTPENSION,COLLECT_EMISSION(A).REN_EMIMTMAJORATION,COLLECT_EMISSION(A).REN_EMICOMPMAJORAT  
                                                        ,COLLECT_EMISSION(A).REN_EMIRAPARRERAGE4,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT4,COLLECT_EMISSION(A).REN_EMIRAPPENSION1
                                                        ,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT1,COLLECT_EMISSION(A).REN_EMIRAPCOMPMAJO1,COLLECT_EMISSION(A).REN_EMIRAPPENSION2
                                                        ,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT2,COLLECT_EMISSION(A).REN_EMIRAPMAJORAT3,COLLECT_EMISSION(A).REN_EMIGUICHERT
                                                        ,COLLECT_EMISSION(A).REN_EMIRACHAT,COLLECT_EMISSION(A).REN_NUMGRAVE,COLLECT_EMISSION(A).REN_PERIODE
                                                        ,COLLECT_EMISSION(A).AF_EMIPERIODE,COLLECT_EMISSION(A).AF_EMIMONTANT,COLLECT_EMISSION(A).AF_PJCODE,COLLECT_EMISSION(A).AF_PJDATEETABLIS
                                                        ,COLLECT_EMISSION(A).AF_NUMGUICHET,COLLECT_EMISSION(A).AF_TYPEINTERESSE,COLLECT_EMISSION(A).AF_NBMOISRAPPEL,COLLECT_EMISSION(A).AF_MONTANTRAPPEL
                                                        ,COLLECT_EMISSION(A).AF_DATFRACT,COLLECT_EMISSION(A).AF_EMITYPEGASA,COLLECT_EMISSION(A).AF_CODEORD,COLLECT_EMISSION(A).AF_CODEAC
                                                        ,COLLECT_EMISSION(A).AF_DATEORD,COLLECT_EMISSION(A).AF_DATEAC
                                                        ,COLLECT_EMISSION(A).APERIODIQUE_PF_EMIMONTANT,COLLECT_EMISSION(A).APERIODIQUE_PF_MONTANTRAPPEL
                                                        ,COLLECT_EMISSION(A).IJATMP_PLEINMONTANT,COLLECT_EMISSION(A).IJATMP_DEMIMONTANT,COLLECT_EMISSION(A).IJATMP_DEUXTMONTANT
                                                        ,COLLECT_EMISSION(A).FMPHAT_FM_MONTANT_EXPOSE,COLLECT_EMISSION(A).FMPHAT_FM_MONTANT_ACCEPTE
                                                        ,COLLECT_EMISSION(A).PRET_EMIMONTPRET,COLLECT_EMISSION(A).PRET_EMIGUICHEPAIPRET,COLLECT_EMISSION(A).PRET_PRETADRESSEBENEF
                                                        ,COLLECT_EMISSION(A).PRET_EMICAISSE,COLLECT_EMISSION(A).PRET_EMICODEPRET
                                                        ,COLLECT_EMISSION(A).MARQUEUR_VISIBILITE,COLLECT_EMISSION(A).AUTORISATION_ANNULATION
                                                        ,COLLECT_EMISSION(A).SUPPLEMENTAIRE_1,COLLECT_EMISSION(A).SUPPLEMENTAIRE_2,COLLECT_EMISSION(A).SUPPLEMENTAIRE_3,COLLECT_EMISSION(A).SUPPLEMENTAIRE_4,COLLECT_EMISSION(A).SUPPLEMENTAIRE_5 
                                                        );

                                ELSE 
                                          PROC_REN_SUSPENSION_NETNEGATIF(COLLECT_EMISSION(A).ASSURE,COLLECT_EMISSION(A).BENEFICIAIRE,COLLECT_EMISSION(A).TYPE_BENEFICIAIRE,COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER,COLLECT_EMISSION(A).CODE_SOUS_REGIME);
                                      
                                END IF;
                                                                    
                    --METTRE A JOUR LES DATES DE DERNIERE EMISSION ( MISE A JOUR DE LA TABLE RENTE) 
                 --CODEDROIT POUR LES NOUVEAU DOSSIER 
                 --DATE DE DERNIERE EMISSION
                 
                 
                 IF COLLECT_EMISSION(A).TYPE_BENEFICIAIRE!='T' THEN 
                              UPDATE REN_AYANT_DROIT
                          SET CODEDROIT = 'A',DERNIERE_EMISSION=P_PERIODE
                          WHERE  BENEFICIAIRE=COLLECT_EMISSION(A).BENEFICIAIRE
                          AND NUMSINISTRE=COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER;                                                  
                 ELSE 
                              UPDATE RENTE
                           SET CODEDROIT = 'A',DERNIERE_EMISSION=P_PERIODE
                           WHERE TRVNUM =COLLECT_EMISSION(A).BENEFICIAIRE
                           AND DATSINISTRE=COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER
                           AND SREGCODE=COLLECT_EMISSION(A).CODE_SOUS_REGIME;                                                                                                                    
                 END IF;
                                   
     
          IF COLLECT_EMISSION(A).MONTANT_RETENUE!=0 THEN 
                      UPDATE ECHEANCE 
                      SET DATE_PRELEVEMENT= P_PERIODE
                      WHERE DATE_PRELEVEMENT IS NULL
                      AND TO_NUMBER(NUMERO_PRET||NUMERO_ECHEANCE) IN   (SELECT  DISTINCT TO_NUMBER(ECH.NUMERO_PRET||ECH.NUMERO_ECHEANCE)
                                                                        FROM ECHEANCE ECH,DEMANDE_PRET DEM 
                                                                        WHERE  ECH.NUMERO_PRET        =ECH.NUMERO_PRET               
                                                                          AND ECH.NUMERO_ECHEANCE       =ECH.NUMERO_ECHEANCE
                                                                          AND ECH.DATE_PRELEVEMENT      IS NULL
                                                                          AND ECH.PERIODE_PRELEVEMENT   <=P_PERIODE
                                                                          ----
                                                                          AND DEM.PRT_NUMERO_PRET       =ECH.NUMERO_PRET                                                    
                                                                        AND DEM.PRT_CODE_BRANCHE      =4 
                                                                          AND DEM.PRT_CODVALORD         ='V'
                                                                          AND DEM.PRT_CATEGORIE_ASSURE  =DEM.PRT_CATEGORIE_ASSURE 
                                                                          AND DEM.PRT_CODE_PRET         !=3
                                                                          AND DEM.DERNIERE_EMISSION     IS NOT NULL 
                                                                        
                                                                        AND DEM.PRT_PRESTATION                  =COLLECT_EMISSION(A).NUMERO_SINISTRE_DOSSIER
                                                                        AND DEM.PRT_NUMERO_ASSURE       =COLLECT_EMISSION(A).BENEFICIAIRE
                                                                        AND DEM.TYPEBENEF               =COLLECT_EMISSION(A).TYPE_BENEFICIAIRE
                                                                        );
                        V_MAJ_PRET    :=V_MAJ_PRET    +1;
          END IF;
                
                
                
                
                
                
                
                                                                    
                                                                    
      END LOOP;
      
      A:=COLLECT_EMISSION.COUNT;
      
      IF P_EXPLOITATION=1 THEN          
          INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN D''INSERTION DES LIGNES EMISES.(INSERT DANS LA TABLE PRESTATIONS_EMISES_2)',SYSDATE,A,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
            
            INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
            SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN DE MISE A JOUR DES TABLES DE PENSION(RENTE ET REN_AYANT_DROIT)',SYSDATE,A,P_PERIODE,NULL,NULL
            FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
      END IF;
      
    
    
    --METTRE A JOUR LES ECHEANCES RECUPEREES ( MISE A JOUR DE LA TABLE ECHEANCE) 
  --METTRE A JOUR LA DATE DE PRELEVEMENT DANS LA TABLE ECHEANCE POUR LES D'EMISSIONS DONT 
  --LA COLONNE DE RETENUE EST DIFFERENT DE 0
  
                                                       
      /*F:=1;
      V_MAJ_PRET:=0;
     WHILE  F<=((COLLECT_EMISSION.COUNT)-1)     
      LOOP
          EXIT WHEN COLLECT_EMISSION(F).ASSURE IS NULL;
          IF COLLECT_EMISSION(F).MONTANT_RETENUE!=0 THEN 
                      UPDATE ECHEANCE 
                      SET DATE_PRELEVEMENT= SYSDATE
                      WHERE DATE_PRELEVEMENT IS NULL
                      AND TO_NUMBER(NUMERO_PRET||NUMERO_ECHEANCE) IN   (SELECT  DISTINCT TO_NUMBER(ECH.NUMERO_PRET||ECH.NUMERO_ECHEANCE)
                                                                        FROM ECHEANCE ECH,DEMANDE_PRET DEM 
                                                                        WHERE  ECH.NUMERO_PRET        =ECH.NUMERO_PRET               
                                                                          AND ECH.NUMERO_ECHEANCE       =ECH.NUMERO_ECHEANCE
                                                                          AND ECH.DATE_PRELEVEMENT      IS NULL
                                                                          AND ECH.PERIODE_PRELEVEMENT   <=P_PERIODE
                                                                          ----
                                                                          AND DEM.PRT_NUMERO_PRET       =ECH.NUMERO_PRET                                                    
                                                                        AND DEM.PRT_CODE_BRANCHE      =4 
                                                                          AND DEM.PRT_CODVALORD         ='V'
                                                                          AND DEM.PRT_CATEGORIE_ASSURE  =DEM.PRT_CATEGORIE_ASSURE 
                                                                          AND DEM.PRT_CODE_PRET         !=3
                                                                          AND DEM.DERNIERE_EMISSION     IS NOT NULL 
                                                                        
                                                                        AND DEM.PRT_PRESTATION                  =COLLECT_EMISSION(F).NUMERO_SINISTRE_DOSSIER
                                                                        AND DEM.PRT_NUMERO_ASSURE       =COLLECT_EMISSION(F).BENEFICIAIRE
                                                                        AND DEM.TYPEBENEF               =COLLECT_EMISSION(F).TYPE_BENEFICIAIRE
                                                                        );
                V_MAJ_PRET    :=V_MAJ_PRET    +1;
          END IF;
      F:=F+1;
      END LOOP;*/
      
      IF P_EXPLOITATION=1 THEN 
                INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
                SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN DE MISE A JOUR DES PRETS RECUPERES',SYSDATE,V_MAJ_PRET    ,P_PERIODE,NULL,NULL
                FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
      END IF;
      

--METTRE A JOUR LES RAPPELS DE RENTE  RECUPERES ( MISE A JOUR DE LA TABLE RAPPEL_RENTE) 
  PARCOURS:=1;
  V_MAJ_PRET    :=0;
  FOR PARCOURS in 1..COLLECT_RAPPEL_RENTE.COUNT LOOP
  
        IF COLLECT_RAPPEL_RENTE(PARCOURS).RAPDATEMIS IS NOT NULL THEN  

           UPDATE RAPPEL_RENTE
         SET    RAPDATEMIS = P_PERIODE
         WHERE  DATSINISTRE= COLLECT_RAPPEL_RENTE(PARCOURS).DATSINISTRE
         AND    AYANT_DROIT= COLLECT_RAPPEL_RENTE(PARCOURS).AYANT_DROIT
         AND    RAPDATEMIS IS NULL; 
        V_MAJ_PRET    :=V_MAJ_PRET    +1;       
      END IF;  
  
  END LOOP;
  
  IF P_EXPLOITATION=1 THEN 
      INSERT INTO TEMPS_EXECUTION(NUMERO_EXECUTION,ACTION,UTILISATEUR,PRETSTATION,OPERATION,EFFECTUE_A,NOMBRE_LIGNE,PERIODE_TRAITEE,COL_SUP_1,COL_SUP_2)
        SELECT  V_NUMERO_EXECUTION,MAX(ACTION)+1,USER,'RENTE','FIN DE MISE A JOUR DES RAPPELS RECUPERES',SYSDATE,V_MAJ_PRET    ,P_PERIODE,NULL,NULL
        FROM TEMPS_EXECUTION WHERE NUMERO_EXECUTION=V_NUMERO_EXECUTION ;
        
        IF P_AG24 = 0 THEN
            PROC_MOYEN_PAIEMENT(4,P_PERIODE);
        END IF;
        
        /*ALIMENTATION DE DATA DAY PRESTATIONS 2*/
        CONCEP1.PACK_COMPTA_ANA.RESTAURATION_JOURNEE_PC(TRUNC(SYSDATE));          
        
  END IF;
  
                       
        --INFORMER L'UTILISATEUR DE LA REALISATION OU NON DE L'EMISSION INDIVIDUELLE   
       --IF ( P_PLAGE_2 IS NOT NULL  AND COLLECT_REJET_EMISSION.COUNT>=2) THEN
       IF ( P_EXPLOITATION = 0 AND COLLECT_REJET_EMISSION.COUNT>=2) THEN                             
                    IF COLLECT_REJET_EMISSION.COUNT<=3 THEN                    
                            V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                            V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;
                            RAISE_APPLICATION_ERROR(-20014,'NON EMISSION POUR :'||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2);
                            
                            --SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT,'NON EMISSION POUR :'||V_MESSAGE_ERREUR_1||CHR(10)||V_MESSAGE_ERREUR_2);
                            --IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;
                    END IF;                    
                    
                    IF COLLECT_REJET_EMISSION.COUNT>3 THEN 
                        V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                        V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;                    
                        V_MESSAGE_ERREUR_3:=COLLECT_REJET_EMISSION(3).REMARQUE;
                        RAISE_APPLICATION_ERROR(-20015,'NON EMISSION POUR :'||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2||' - '||V_MESSAGE_ERREUR_3);
                        
                        /*SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT ,'NON EMISSION POUR :'||CHR(10)
                                                                                    ||CHR(10)
                                                                                    ||CHR(10)||V_MESSAGE_ERREUR_1
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_2
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_3);
                                     IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;*/
                    END IF;
                    
                    IF COLLECT_REJET_EMISSION.COUNT>4 THEN 
                        V_MESSAGE_ERREUR_1:=COLLECT_REJET_EMISSION(1).REMARQUE;
                        V_MESSAGE_ERREUR_2:=COLLECT_REJET_EMISSION(2).REMARQUE;                    
                        V_MESSAGE_ERREUR_3:=COLLECT_REJET_EMISSION(3).REMARQUE;
                        V_MESSAGE_ERREUR_4:=COLLECT_REJET_EMISSION(4).REMARQUE;
                        RAISE_APPLICATION_ERROR(-20016,'NON EMISSION POUR :'||V_MESSAGE_ERREUR_1||' - '||V_MESSAGE_ERREUR_2||' - '||V_MESSAGE_ERREUR_3||' - '||V_MESSAGE_ERREUR_4);
                        
                        /*SET_ALERT_PROPERTY('MESSAGE_ERREURS', ALERT_MESSAGE_TEXT ,'NON EMISSION POUR :'||CHR(10)
                                                                                    ||CHR(10)||CHR(10)||V_MESSAGE_ERREUR_2
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_3
                                                                                               ||CHR(10)||V_MESSAGE_ERREUR_4);
                         IF SHOW_ALERT('MESSAGE_ERREURS')= ALERT_BUTTON1 THEN RAISE FORM_TRIGGER_FAILURE;     END IF;*/
                    END IF;               
                    
                    
                                 
       --ELSIF (P_PLAGE_2 IS NOT NULL AND EMIS_IND=2) THEN
       ELSIF ( P_EXPLOITATION = 0 AND EMIS_IND=2) THEN   
       
                      RAISE_APPLICATION_ERROR(-20017,'L''ASSURE EST SOIT DEJA EMIS SON MOTIF NE LUI PERMET PAS D''ETRE EMIS OU SON DOSSIER N''EST PAS VALIDE');
                      -- :GLOBAL.AL_BUTTON:=MSGBOX('CFG_INFORMATION','L''ASSURE EST SOIT DEJA EMIS; '||CHR(10)||'SON MOTIF NE LUI PERMET PAS D''ETRE EMIS;'||CHR(10)||
                      --  'OU SON DOSSIER N''EST PAS VALIDE');                           
                                                     
       END IF;
       

--FORMS_DDL('COMMIT');



         
END ;


PROCEDURE PROC_EMISSION_BATCH_DR2(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=1;
    P_AG2   AGENCE.AGCODE%TYPE :=2;
    P_AG3   AGENCE.AGCODE%TYPE :=3;
    P_AG4   AGENCE.AGCODE%TYPE :=4;
    P_AG5   AGENCE.AGCODE%TYPE :=5;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);

        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );
                                
    IF P_REGIME = 6 THEN

        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR2A(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=1;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=3;
    P_AG4   AGENCE.AGCODE%TYPE :=4;
    P_AG5   AGENCE.AGCODE%TYPE :=5;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);

        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );
                                
    IF P_REGIME = 6 THEN

        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR2B(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=2;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);

        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );
                                
    IF P_REGIME = 6 THEN

        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR3(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=6;
    P_AG7   AGENCE.AGCODE%TYPE :=7;
    P_AG8   AGENCE.AGCODE%TYPE :=8;
    P_AG9   AGENCE.AGCODE%TYPE :=9;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=25;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE , NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                    ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                    ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                    ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR3A(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=6;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=25;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE , NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                    ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                    ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                    ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR3B(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=7;
    P_AG8   AGENCE.AGCODE%TYPE :=8;
    P_AG9   AGENCE.AGCODE%TYPE :=9;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
        PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                            ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                            ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                            ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE , NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                    ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                    ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                    ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;

PROCEDURE PROC_EMISSION_BATCH_DR456(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=11;
    P_AG12  AGENCE.AGCODE%TYPE :=12;
    P_AG13  AGENCE.AGCODE%TYPE :=13;
    P_AG14  AGENCE.AGCODE%TYPE :=14;
    P_AG15  AGENCE.AGCODE%TYPE :=15;
    P_AG16  AGENCE.AGCODE%TYPE :=16;
    P_AG17  AGENCE.AGCODE%TYPE :=17;
    P_AG18  AGENCE.AGCODE%TYPE :=18;
    P_AG19  AGENCE.AGCODE%TYPE :=19;
    P_AG20  AGENCE.AGCODE%TYPE :=20;
    P_AG21  AGENCE.AGCODE%TYPE :=21;
    P_AG22  AGENCE.AGCODE%TYPE :=22;
    P_AG23  AGENCE.AGCODE%TYPE :=23;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;


PROCEDURE PROC_EMISSION_BATCH_DR4(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=11;
    P_AG12  AGENCE.AGCODE%TYPE :=12;
    P_AG13  AGENCE.AGCODE%TYPE :=13;
    P_AG14  AGENCE.AGCODE%TYPE :=14;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;


PROCEDURE PROC_EMISSION_BATCH_DR56(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=15;
    P_AG16  AGENCE.AGCODE%TYPE :=16;
    P_AG17  AGENCE.AGCODE%TYPE :=17;
    P_AG18  AGENCE.AGCODE%TYPE :=18;
    P_AG19  AGENCE.AGCODE%TYPE :=19;
    P_AG20  AGENCE.AGCODE%TYPE :=20;
    P_AG21  AGENCE.AGCODE%TYPE :=21;
    P_AG22  AGENCE.AGCODE%TYPE :=22;
    P_AG23  AGENCE.AGCODE%TYPE :=23;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;
/*
PROCEDURE PROC_EMISSION_BATCH_AG7_25(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=7;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=25;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;
*/
/*
PROCEDURE PROC_EMISSION_BATCH_AG6(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=6;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;
*/
/*
PROCEDURE PROC_EMISSION_BATCH_AG8_9(P_PERIODE DATE,P_REGIME NUMBER)
IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=8;
    P_AG9   AGENCE.AGCODE%TYPE :=9;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=0;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
    
    PROC_POP_A_EMETTRE (P_PERIODE , P_REGIME , P_AG1 ,P_AG2
                        ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                        ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                        ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );   
                                
    IF P_REGIME = 6 THEN
        
        EMETTRE_RETRAITE(P_PERIODE ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );    
    ELSIF P_REGIME = 4 THEN
        
        EMETTRE_RENTE(P_PERIODE ,NULL,NULL,NULL,NULL, P_AG1 ,P_AG2
                                ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );     
    
    END IF;                                
END;
*/

PROCEDURE PROC_EMISSION_BATCH_EXT(P_PERIODE DATE,P_REGIME NUMBER)
/*
P_PERIODE ::: CE PARAMETRE DOIT CONTENIR LA FIN DU TRIMESTRE. AU DEROULEMENT DE LA PROCEDURE LA BOUCLE SE CHARGERA D'EFFECTUER LES EMISSIONS POUR CHAQUE MOIS DU TRIMESTRE 
P_REGIME ::: NE PEUT QUE CONTENIR QUE LES CODES REGIME 4 et 6
*/

IS
    P_AG1   AGENCE.AGCODE%TYPE :=0;
    P_AG2   AGENCE.AGCODE%TYPE :=0;
    P_AG3   AGENCE.AGCODE%TYPE :=0;
    P_AG4   AGENCE.AGCODE%TYPE :=0;
    P_AG5   AGENCE.AGCODE%TYPE :=0;
    P_AG6   AGENCE.AGCODE%TYPE :=0;
    P_AG7   AGENCE.AGCODE%TYPE :=0;
    P_AG8   AGENCE.AGCODE%TYPE :=0;
    P_AG9   AGENCE.AGCODE%TYPE :=0;
    P_AG10  AGENCE.AGCODE%TYPE :=0;
    P_AG11  AGENCE.AGCODE%TYPE :=0;
    P_AG12  AGENCE.AGCODE%TYPE :=0;
    P_AG13  AGENCE.AGCODE%TYPE :=0;
    P_AG14  AGENCE.AGCODE%TYPE :=0;
    P_AG15  AGENCE.AGCODE%TYPE :=0;
    P_AG16  AGENCE.AGCODE%TYPE :=0;
    P_AG17  AGENCE.AGCODE%TYPE :=0;
    P_AG18  AGENCE.AGCODE%TYPE :=0;
    P_AG19  AGENCE.AGCODE%TYPE :=0;
    P_AG20  AGENCE.AGCODE%TYPE :=0;
    P_AG21  AGENCE.AGCODE%TYPE :=0;
    P_AG22  AGENCE.AGCODE%TYPE :=0;
    P_AG23  AGENCE.AGCODE%TYPE :=0;
    P_AG24  AGENCE.AGCODE%TYPE :=24;
    P_AG25  AGENCE.AGCODE%TYPE :=0;
    P_AG26  AGENCE.AGCODE%TYPE :=0;
    P_AG50  AGENCE.AGCODE%TYPE :=0;
BEGIN

    SET_P_EXPLOITATION(1);
      
    
    --158017900075
    IF  P_REGIME = 6 THEN
        FOR I IN 0..2
        LOOP
                PROC_POP_A_EMETTRE (ADD_MONTHS(P_PERIODE,(I-2)) , P_REGIME , P_AG1 ,P_AG2
                                    ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                    ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                    ,P_AG21 ,P_AG22 ,P_AG23 ,P_AG24 ,P_AG25 ,P_AG10 ,P_AG50 ,P_AG26 );  
                                    
            EMETTRE_RETRAITE(ADD_MONTHS(P_PERIODE,(I-2)) ,NULL,NULL,NULL, P_AG1 ,P_AG2
                                    ,P_AG3 ,P_AG4 ,P_AG5 , P_AG6 ,P_AG7 ,P_AG8 ,P_AG9 ,P_AG11 ,P_AG12 
                                    ,P_AG13 ,P_AG14 ,P_AG15 ,P_AG16 ,P_AG17 ,P_AG18 ,P_AG19 ,P_AG20 
                                
